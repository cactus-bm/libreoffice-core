/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: dp_gui_updatedialog.src,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: ihi $ $Date: 2007-11-22 15:26:12 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2006 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#include "svtools/controldims.hrc"

#include "dp_gui.hrc"

#define LOCAL_WIDTH (60 * RSC_BS_CHARWIDTH)
#define LABEL_WIDTH (1 * RSC_BS_CHARWIDTH)
#define LOCAL_LIST_HEIGHT1 (6 * RSC_BS_CHARHEIGHT) + 4
#define LOCAL_LIST_HEIGHT2 (7 * RSC_BS_CHARHEIGHT) + 3

ModalDialog RID_DLG_UPDATE {
    HelpID = HID_DEPLOYMENT_GUI_UPDATE;
    Size = MAP_APPFONT(
        (RSC_SP_DLG_INNERBORDER_LEFT + LOCAL_WIDTH +
         RSC_SP_DLG_INNERBORDER_RIGHT),
        (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
         RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
         RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
         RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT2 + RSC_SP_FLGR_SPACE_Y +
         RSC_CD_FIXEDLINE_HEIGHT + RSC_SP_FLGR_SPACE_Y +
         RSC_CD_PUSHBUTTON_HEIGHT + RSC_SP_DLG_INNERBORDER_BOTTOM));
    Text[en-US] = "Extension Update";
    Moveable = TRUE;
    Closeable = TRUE;
    FixedText RID_DLG_UPDATE_CHECKING {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT + LOCAL_WIDTH * 2 / 3,
            RSC_SP_DLG_INNERBORDER_TOP);
        Size = MAP_APPFONT(
            (LOCAL_WIDTH - LOCAL_WIDTH * 2 / 3 - RSC_SP_CTRL_DESC_X -
             RSC_CD_FIXEDTEXT_HEIGHT),
            RSC_CD_FIXEDTEXT_HEIGHT);
        Text[en-US] = "Checking...";
        Right = TRUE;
        NoLabel = TRUE;
    };
    Control RID_DLG_UPDATE_THROBBER {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT + LOCAL_WIDTH - RSC_CD_FIXEDTEXT_HEIGHT,
            RSC_SP_DLG_INNERBORDER_TOP);
        Size = MAP_APPFONT(RSC_CD_FIXEDTEXT_HEIGHT, RSC_CD_FIXEDTEXT_HEIGHT);
    };
    FixedText RID_DLG_UPDATE_UPDATE {
        Disable = TRUE;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT, RSC_SP_DLG_INNERBORDER_TOP);
        Size = MAP_APPFONT(
            LOCAL_WIDTH * 2 / 3 - RSC_SP_CTRL_GROUP_X, RSC_CD_FIXEDTEXT_HEIGHT);
        Text[en-US] = "~Available extension updates";
    };
    Control RID_DLG_UPDATE_UPDATES {
        HelpId = HID_DEPLOYMENT_GUI_UPDATE_AVAILABLE_UPDATES;
        Disable = TRUE;
        Border = TRUE;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH, LOCAL_LIST_HEIGHT1);
        TabStop = TRUE;
    };
    CheckBox RID_DLG_UPDATE_ALL {
        Disable = TRUE;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH, RSC_CD_CHECKBOX_HEIGHT);
        Text[en-US] = "~Show all updates";
    };
    FixedLine RID_DLG_UPDATE_DESCRIPTION {
        Disable = TRUE;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH, RSC_CD_FIXEDTEXT_HEIGHT);
        Text[en-US] = "Description";
    };
    FixedText RID_DLG_UPDATE_PUBLISHER_LABEL
    {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y));
        Size = MAP_APPFONT(LABEL_WIDTH, RSC_CD_FIXEDTEXT_HEIGHT);
        Text[en-US] = "Publisher:";
    };
    FixedText RID_DLG_UPDATE_PUBLISHER_LINK
    {
        HelpId = HID_DEPLOYMENT_GUI_UPDATE_PUBLISHER;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT + LABEL_WIDTH + RSC_SP_CTRL_DESC_X,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH - LABEL_WIDTH - RSC_SP_CTRL_DESC_X, RSC_CD_FIXEDTEXT_HEIGHT);
    };
    FixedText RID_DLG_UPDATE_RELEASENOTES_LABEL
    {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + RSC_CD_FIXEDTEXT_HEIGHT + RSC_SP_CTRL_DESC_Y));
        Size = MAP_APPFONT(LABEL_WIDTH, RSC_CD_FIXEDTEXT_HEIGHT);
        Text[en-US] = "What is new:";
    };
    FixedText RID_DLG_UPDATE_RELEASENOTES_LINK
    {
        HelpId = HID_DEPLOYMENT_GUI_UPDATE_RELEASENOTES;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT + LABEL_WIDTH + RSC_SP_CTRL_DESC_X,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + RSC_CD_FIXEDTEXT_HEIGHT + RSC_SP_CTRL_DESC_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH - LABEL_WIDTH - RSC_SP_CTRL_DESC_X, RSC_CD_FIXEDTEXT_HEIGHT);
        Text[en-US] = "Release Notes";
    };
    MultiLineEdit RID_DLG_UPDATE_DESCRIPTIONS {
        Disable = TRUE;
        Border = TRUE;
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH, LOCAL_LIST_HEIGHT2);
        ReadOnly = TRUE;
        VScroll = TRUE;
        IgnoreTab = TRUE;
    };
    FixedLine RID_DLG_UPDATE_LINE {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT2 + RSC_SP_FLGR_SPACE_Y));
        Size = MAP_APPFONT(LOCAL_WIDTH, RSC_CD_FIXEDLINE_HEIGHT);
    };
    HelpButton RID_DLG_UPDATE_HELP {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT2 + RSC_SP_FLGR_SPACE_Y +
             RSC_CD_FIXEDLINE_HEIGHT + RSC_SP_FLGR_SPACE_Y));
        Size = MAP_APPFONT(RSC_CD_PUSHBUTTON_WIDTH, RSC_CD_PUSHBUTTON_HEIGHT);
    };
    PushButton RID_DLG_UPDATE_OK {
        Disable = TRUE;
        Pos = MAP_APPFONT(
            (RSC_SP_DLG_INNERBORDER_LEFT + LOCAL_WIDTH - RSC_CD_PUSHBUTTON_WIDTH -
             RSC_SP_CTRL_GROUP_X - RSC_CD_PUSHBUTTON_WIDTH),
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT2 + RSC_SP_FLGR_SPACE_Y +
             RSC_CD_FIXEDLINE_HEIGHT + RSC_SP_FLGR_SPACE_Y));
        Size = MAP_APPFONT(RSC_CD_PUSHBUTTON_WIDTH, RSC_CD_PUSHBUTTON_HEIGHT);
        Text[en-US] = "~Install";
        DefButton = TRUE;
    };
    CancelButton RID_DLG_UPDATE_CANCEL {
        Pos = MAP_APPFONT(
            RSC_SP_DLG_INNERBORDER_LEFT + LOCAL_WIDTH - RSC_CD_PUSHBUTTON_WIDTH,
            (RSC_SP_DLG_INNERBORDER_TOP + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT1 + RSC_SP_CTRL_GROUP_Y +
             RSC_CD_CHECKBOX_HEIGHT + RSC_SP_CTRL_GROUP_Y + RSC_CD_FIXEDTEXT_HEIGHT +
             RSC_SP_CTRL_DESC_Y + LOCAL_LIST_HEIGHT2 + RSC_SP_FLGR_SPACE_Y +
             RSC_CD_FIXEDLINE_HEIGHT + RSC_SP_FLGR_SPACE_Y));
        Size = MAP_APPFONT(RSC_CD_PUSHBUTTON_WIDTH, RSC_CD_PUSHBUTTON_HEIGHT);
    };

    Image RID_DLG_UPDATE_NORMALALERT {
        ImageBitmap = Bitmap {
            File = "caution_12.png";
        };
    };
    Image RID_DLG_UPDATE_HIGHCONTRASTALERT {
        ImageBitmap = Bitmap {
            File = "caution_12_h.png";
        };
    };
    String RID_DLG_UPDATE_ERROR {
        Text[en-US] = "Error";
    };
    String RID_DLG_UPDATE_NONE {
        Text[en-US] = "No new updates are available.";
    };
    String RID_DLG_UPDATE_NOINSTALLABLE {
        Text[en-US] = "No installable updates are available. To see all updates, mark the check box 'Show all updates'.";
    };
    String RID_DLG_UPDATE_FAILURE {
        Text[en-US] = "An error occurred:";
    };
    String RID_DLG_UPDATE_UNKNOWNERROR {
        Text[en-US] = "Unknown error.";
    };
    String RID_DLG_UPDATE_NODESCRIPTION {
        Text[en-US] = "No descriptions available for this extension.";
    };
    String RID_DLG_UPDATE_NOINSTALL {
        Text[en-US] = "The extension cannot be installed because:";
    };
    String RID_DLG_UPDATE_NODEPENDENCY {
        Text[en-US] = "Incompatibility:";
    };
    String RID_DLG_UPDATE_NOPERMISSION {
        Text[en-US] = "No write permission (shared extension).";
    };
    String RID_DLG_UPDATE_NOPERMISSION_VISTA {
        Text[en-US] = "No write permission. %PRODUCTNAME needs to run as administrator.\n"
            "Please follow these steps to update this shared extension:\n"
            "1. Close Extension Manager dialog.\n"
            "2. Exit %PRODUCTNAME.\n"
            "3. Exit %PRODUCTNAME Quickstarter located in the tray area of Windows.\n"
            "4. Run %PRODUCTNAME as administrator. In order to do this call the context menu of the %PRODUCTNAME program icon and choose \'Run as administrator\'.\n"
            "5. Call the Extension Manager dialog and update this shared extension.\n";
    };
    String RID_DLG_UPDATE_BROWSERBASED {
        Text[en-US] = "browser based update";
    };
};

InfoBox RID_INFOBOX_UPDATE_SHARED_EXTENSION
{
    Buttons = WB_OK;
    DefButton = WB_DEF_OK;
    Message[en-US] = "Before updating a shared extension, make sure that no further instances of %PRODUCTNAME are running.";
};

