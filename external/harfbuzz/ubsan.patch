--- src/hb-object-private.hh
+++ src/hb-object-private.hh
@@ -131,7 +131,7 @@
   }
 
   inline bool destroy (void) {
-    if (unlikely (!this || this->is_inert ()))
+    if (unlikely (is_inert ()))
       return false;
     if (ref_count.dec () != 1)
       return false;
@@ -160,13 +160,12 @@
   }
 
   inline void trace (const char *function) const {
-    if (unlikely (!this)) return;
     /* TODO We cannot use DEBUG_MSG_FUNC here since that one currently only
      * prints the class name and throws away the template info. */
     DEBUG_MSG (OBJECT, (void *) this,
 	       "%s refcount=%d",
 	       function,
-	       this ? ref_count.ref_count : 0);
+	       ref_count.ref_count);
   }
 
   private:
@@ -179,7 +179,7 @@
 template <typename Type>
 static inline void hb_object_trace (const Type *obj, const char *function)
 {
-  obj->header.trace (function);
+  if (likely (obj)) obj->header.trace (function);
 }
 template <typename Type>
 static inline Type *hb_object_create (void)
@@ -204,7 +204,7 @@
 static inline bool hb_object_destroy (Type *obj)
 {
   hb_object_trace (obj, HB_FUNC);
-  return obj->header.destroy ();
+  return likely (obj) && obj->header.destroy ();
 }
 template <typename Type>
 static inline bool hb_object_set_user_data (Type               *obj,
