/*************************************************************************
 *
 *  $RCSfile: svtmsg.src,v $
 *
 *  $Revision: 1.64 $
 *
 *  last change: $Author: gh $ $Date: 2002-10-21 11:17:44 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#include <svtools/svtmsg.hrc>


// Hier sind die Messages aus dem Verzeichnis /basic/source/app enhalten


///////////////////////////////
// Fehlermeldungen, die in das Resultfile gelangen.
// *********************
// ***  !!ACHTUNG!!  ***
// *********************
// Die Nummern dürfen sich NIE! ändern,
// da sie in den Resultfiles gespeichert sind, und bei erneutem Anzeigen
// statdessen die entsprechenden neuen oder garkeine Strings angzeigt werden.
///////////////////////////////
String S_GPF_ABORT
{
    Text = "Program aborted with GPF";
};
String S_APP_SHUTDOWN
{
    Text = "Application has been shut down";
};
String S_SID_EXECUTE_FAILED_NO_DISPATCHER
{
    Text = "Slot ID cannot be executed. No ActiveDispatcher";
};
String S_SID_EXECUTE_FAILED
{
    Text = "Slot ID could not be execute";
};
String S_UNO_PROPERTY_NITIALIZE_FAILED
{
    Text = "UnoSlot: Properties could not be initialized";
};
String S_RESETAPPLICATION_FAILED_COMPLEX
{
    Text = "ResetApplication failed: too complex";
};
String S_RESETAPPLICATION_FAILED_UNKNOWN
{
    Text = "ResetApplication failed: unknown window type";
};
String S_NO_ACTIVE_WINDOW
{
    Text = "No active window found (GetNextCloseWindow)";
};
String S_NO_DIALOG_IN_GETACTIVE
{
    Text = "GetActive does not return a dialog! Inform development";
};
String S_NO_POPUP
{
    Text = "Pop-up menu not open";
};
String S_NO_SUBMENU
{
    Text = "Submenu does not exist";
};
String S_CONTROLTYPE_NOT_SUPPORTED
{
    Text = "ControlType ($Arg1) is not supported";
};
String S_SELECTION_BY_ATTRIBUTE_ONLY_DIRECTORIES
{
    Text = "Selection by attributes only possible for directories";
};
String S_NO_MORE_FILES
{
    Text = "No more files";
};
String S_UNKNOWN_METHOD
{
    Text = "Unknown method '($Arg1)' on ($Arg2)";
};
String S_INVALID_PARAMETERS
{
    Text = "Invalid Parameters";
};
String S_POINTER_OUTSIDE_APPWIN
{
    Text = "Pointer not inside application window at '($Arg1)'";
};
String S_UNKNOWN_COMMAND
{
    Text = "Unknown command '($Arg1)'";
};
String S_WIN_NOT_FOUND
{
    Text = "($Arg1) could not be found";
};
String S_WIN_INVISIBLE
{
    Text = "($Arg1) is not visible";
};
String S_WIN_DISABLED
{
    Text = "($Arg1) could not be accessed.";
};
String S_NUMBER_TOO_BIG
{
    Text = "Entry number ($Arg2) is too large in ($Arg1). Max. allowed is ($Arg3)";
};
String S_NUMBER_TOO_SMALL
{
    Text = "The entry number ($Arg2) is too small in ($Arg1). Min allowed is ($Arg3)";
};
String S_WINDOW_DISAPPEARED
{
    Text = "Window disappeared in the meantime at ($Arg1)";
};
String S_ERROR_SAVING_IMAGE
{
    Text = "Error #($Arg1) when saving the image";
};
String S_INVALID_POSITION
{
    Text = "Invalid positon at ($Arg1)";
};
String S_SPLITWIN_NOT_FOUND
{
    Text = "SplitWindow not found at ($Arg1)";
};
String S_INTERNAL_ERROR
{
    Text = "Internal error at ($Arg1)";
};
String S_NO_STATUSBAR
{
    Text = "No status bar at ($Arg1)";
};
String S_ITEMS_INVISIBLE
{
    Text = "The items are hidden at ($Arg1)";
};
String S_TABPAGE_NOT_FOUND
{
    Text = "Tab page not found at ($Arg1)";
};
String S_TRISTATE_NOT_ALLOWED
{
    Text = "Tristate cannot be set at ($Arg1)";
};
String S_ERROR_IN_SET_TEXT
{
    Text = "Set text did not function";
};
String S_ATTEMPT_TO_WRITE_READONLY
{
    Text = "Attempt to write on read-only ($Arg1)";
};
String S_NO_SELECT_FALSE
{
    Text = "Select FALSE not allowed. Use MultiSelect at ($Arg1)";
};
String S_ENTRY_NOT_FOUND
{
    Text = "\"($Arg2)\" entry at ($Arg1) not found";
};
String S_METHOD_FAILED
{
    Text = "($Arg1) of entry \"($Arg2)\" failed";
};
String S_HELPID_ON_TOOLBOX_NOT_FOUND
{
    Text = "HelpID in ToolBox not found at ($Arg1)";
};
String S_BUTTON_DISABLED_ON_TOOLBOX
{
    Text = "The button is disabled in ToolBox at ($Arg1)";
};
String S_BUTTON_HIDDEN_ON_TOOLBOX
{
    Text = "The button is hidden in ToolBox at ($Arg1)";
};
String S_CANNOT_MAKE_BUTTON_VISIBLE_IN_TOOLBOX
{
    Text = "Button cannot be made visible in ToolBox at ($Arg1)";
};
String S_TEAROFF_FAILED
{
    Text = "TearOff failed in ToolBox at ($Arg1)";
};

// Has to stay in for old res files
String S_NO_SELECTED_ENTRY_DEPRECATED
{
    Text = "No entry is selected in TreeListBox at ($Arg1)";
};
String S_NO_SELECTED_ENTRY
{
    Text = "Es ist kein Eintrag Selektiert in ($Arg2) bei ($Arg1)";
};
String S_SELECT_DESELECT_VIA_STRING_NOT_IMPLEMENTED
{
    Text = "Select/Deselect with string not implemented at ($Arg1)";
};
String S_ALLOWED_ONLY_IN_FLOATING_MODE
{
    Text = "Method only allowed in floating mode at ($Arg1)";
};
String S_ALLOWED_ONLY_IN_DOCKING_MODE
{
    Text = "Method only allowed in docking mode at ($Arg1)";
};
String S_SIZE_NOT_CHANGEABLE
{
    Text = "Size cannot be altered at ($Arg1)";
};
String S_NO_OK_BUTTON
{
    Text = "There is no OK button at ($Arg1)";
};
String S_NO_CANCEL_BUTTON
{
    Text = "There is no Cancel button at ($Arg1)";
};
String S_NO_YES_BUTTON
{
    Text = "There is no Yes button at ($Arg1)";
};
String S_NO_NO_BUTTON
{
    Text = "There is no No button at ($Arg1)";
};
String S_NO_RETRY_BUTTON
{
    Text = "There is no Repeat button at ($Arg1)";
};
String S_NO_HELP_BUTTON
{
    Text = "There is no Help button at ($Arg1)";
};
String S_NO_DEFAULT_BUTTON
{
    Text = "There is no Default button defined at ($Arg1)";
};
String S_BUTTON_ID_NOT_THERE
{
    Text = "There is no button with ID ($Arg1) at ($Arg2)";
};
String S_BUTTONID_REQUIRED
{
    Text = "A button ID needs to be given at ($Arg1)";
};
String S_UNKNOWN_TYPE
{
    Text = "Unknown object type ($Arg1) from UId or method '($Arg2)' not supported";
};
String S_UNPACKING_STORAGE_FAILED
{
    Text = "Unpacking storage \"($Arg1)\" to \"($Arg2)\" failed";
};
String S_NO_LIST_BOX_BUTTON
{
    Text = "ListBoxButton does not exist in ($Arg1)";
};
String S_UNO_URL_EXECUTE_FAILED_NO_DISPATCHER
{
    Text = "UNO URL \"($Arg1)\" could not be executed: No dispatcher was found.";
};
String S_UNO_URL_EXECUTE_FAILED_NO_FRAME
{
    Text = "UNO URL \"($Arg1)\" could not be executed: No ActiveFrame on desktop.";
};
String S_NO_MENU
{
    Text = "There is no menu at ($Arg1)";
};
String S_UNO_URL_EXECUTE_FAILED_DISABLED
{
    Text = "UNO URL \"($Arg1)\" could not be run: Disabled";
};
String S_NO_SCROLLBAR
{
    Text = "No scroll bar at ($Arg1)";
};
String S_NO_SAX_PARSER
{
    Text = "No SAX Parser when using ($Arg1). Initialize with 'SAXReadFile' first.";
};

