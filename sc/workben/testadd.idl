/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: testadd.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 23:17:40 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef SC_WORKBEN_TESTADD_IDL
#define SC_WORKBEN_TESTADD_IDL

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/table/XCellRange.idl>
#include <com/sun/star/sheet/XVolatileResult.idl>


module stardiv
{
module starcalc
{
module test
{

/** test-interface for an AddIn implementation
 */
[ uik(2DB48150-7FBB-11d3-9F510050-042A51C9), ident("XTestAddIn", 1.0) ]
interface XTestAddIn:com::sun::star::uno::XInterface
{
    long countParams([in]sequence<any> aArgs);
    double addOne([in]double fValue);
    string repeatStr([in]string aStr, [in]long nCount);
    string getDateString([in]com::sun::star::beans::XPropertySet xCaller, [in]double fValue);
    long getColorValue([in]com::sun::star::table::XCellRange xRange);
    sequence< sequence<double> > transpose([in]sequence< sequence<double> > aMatrix);
    sequence< sequence<long> > transposeInt([in]sequence< sequence<long> > aMatrix);
    com::sun::star::sheet::XVolatileResult callAsync([in]string aString);
    string repeatMultiple([in]long nCount, [in]any aFirst, [in]sequence<any> aFollow);
    any getStrOrVal([in]long nFlag);
};

};
};
};



#endif

