 /*************************************************************************
 *
 *  $RCSfile: formatsh.sdi,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: kz $ $Date: 2004-08-02 12:56:37 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

 // ===========================================================================
interface TableFont : Object
[
    uuid ( "2E4AC1C0-137C-11D3-B25B-006097DA68F3" )
]
{
    SID_ATTR_CHAR_FONT          [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_FONTHEIGHT    [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_COLOR         [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_WEIGHT    [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ATTR_CHAR_POSTURE   [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ATTR_CHAR_UNDERLINE [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ULINE_VAL_NONE      [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ULINE_VAL_SINGLE    [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ULINE_VAL_DOUBLE    [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ULINE_VAL_DOTTED    [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
}

 // ===========================================================================
interface FormatForSelection : Selection
[
    uuid ( "40F448A0-137C-11D3-B25B-006097DA68F3" )
]
{
    //Auch das Basic muss wieder laufen
    SbxObject Font SID_PROP_FONT
    [
    ]
    SbxObject Interior SID_PROP_INTERIOR // status(Final)
    [
    ]

    // Slot's die in der DrawShell disabled werden. {
    SID_STYLE_FAMILY2           [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_APPLY             [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_WATERCAN          [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_NEW_BY_EXAMPLE    [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_UPDATE_BY_EXAMPLE [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_NEW               [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_FAMILY4           [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_EDIT              [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    SID_STYLE_DELETE            [ ExecMethod = ExecuteStyle; StateMethod = GetStyleState; ]
    // } Slot's die in der DrawShell disabled werden.

    SID_ATTR_ALIGN_HOR_JUSTIFY    [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_VER_JUSTIFY    [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_INDENT [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_HYPHENATION [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_DEGREES     [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_LOCKPOS     [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_MARGIN      [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]
    SID_ATTR_ALIGN_ORIENTATION      [ ExecMethod = ExecuteAlignment; StateMethod = GetAttrState; ]

    // pseudo slots from Format menu
    SID_ALIGN_ANY_LEFT      [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_HCENTER   [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_RIGHT     [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_JUSTIFIED [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_TOP       [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_VCENTER   [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_BOTTOM    [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_HDEFAULT  [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_ALIGN_ANY_VDEFAULT  [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]

    SID_SCATTR_PROTECTION [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_BACKGROUND_COLOR    [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_BRUSH      [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_STRIKEOUT [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_CONTOUR [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_SHADOWED [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ATTR_CHAR_RELIEF [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_ALIGNLEFT       [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ALIGNRIGHT      [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ALIGNTOP        [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ALIGNBOTTOM     [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ALIGNCENTERVER  [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ALIGNBLOCK      [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]
    SID_ALIGNCENTERHOR  [ ExecMethod = ExecuteTextAttr; StateMethod = GetTextAttrState; ]

    SID_V_ALIGNCELL         [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]
    SID_H_ALIGNCELL         [ ExecMethod = ExecuteAlignment; StateMethod = GetAlignState; ]

    SID_TEXTDIRECTION_LEFT_TO_RIGHT [ ExecMethod = ExecuteTextDirection; StateMethod = GetTextDirectionState; ]
    SID_TEXTDIRECTION_TOP_TO_BOTTOM [ ExecMethod = ExecuteTextDirection; StateMethod = GetTextDirectionState; ]
    SID_ATTR_PARA_LEFT_TO_RIGHT     [ ExecMethod = ExecuteTextDirection; StateMethod = GetTextDirectionState; ]
    SID_ATTR_PARA_RIGHT_TO_LEFT     [ ExecMethod = ExecuteTextDirection; StateMethod = GetTextDirectionState; ]
    SID_VERTICALTEXT_STATE          [ StateMethod = GetTextDirectionState ; Export = FALSE; ]
    SID_CTLFONT_STATE               [ StateMethod = GetTextDirectionState ; Export = FALSE; ]

    SID_ATTR_NUMBERFORMAT_VALUE       [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState;]
    SID_NUMBER_FORMAT       [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState;]
    SID_NUMBER_TWODEC       [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_SCIENTIFIC   [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_DATE         [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_CURRENCY     [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_PERCENT      [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_TIME         [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_STANDARD     [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_INCDEC       [ ExecMethod = ExecuteNumFormat;]
    SID_NUMBER_DECDEC       [ ExecMethod = ExecuteNumFormat;]

    SID_ATTR_BORDER             [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]   //XXX
    SID_ATTR_BORDER_INNER       [                           StateMethod = GetBorderState; ] // status()
    SID_ATTR_BORDER_OUTER       [ ExecMethod = ExecuteAttr; StateMethod = GetBorderState; ]
    SID_ATTR_BORDER_SHADOW      [ ExecMethod = ExecuteAttr; StateMethod = GetBorderState; ]
    SID_ATTR_ALIGN_LINEBREAK    [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_FRAME_LINESTYLE         [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]
    SID_FRAME_LINECOLOR         [ ExecMethod = ExecuteAttr; StateMethod = GetAttrState; ]

    SID_FORMATPAINTBRUSH    [ ExecMethod = ExecFormatPaintbrush; StateMethod = StateFormatPaintbrush; ]
}


 // ===========================================================================
shell ScFormatShell
{
    import FormatForSelection[Automation];
//  import Interior ".Interior";
    import TableFont ".Font";
}


