#! /bin/bash

ONLY_ONE=0
DO_PPT=0
DO_XLS=0
DO_XLS_HTML=0
DO_HTML=0
DO_DOC=0
DO_DOC_PDF=0
PARS=""
while [[ $# > 0 ]]
do
	if [[ "X$1" == "Xclean" ]]
	then
		PARS=$PARS" "$1
		rm -r -f instdir
	fi
	if [[ "X$1" == "Xhtml" || "X$1" == "Xall" ]]
	then
		PARS=$PARS" "$1
		DO_HTML=1
	fi
	if [[ "X$1" == "Xdoc" || "X$1" == "Xall" ]]
	then
		PARS=$PARS" "$1
		DO_DOC=1
	fi
	if [[ "X$1" == "Xdoc-pdf" || "X$1" == "Xall" ]]
	then
		PARS=$PARS" "$1
		DO_DOC_PDF=1
	fi
	if [[ "X$1" == "Xxls" || "X$1" == "Xall" ]]
	then
		PARS=$PARS" "$1
		DO_XLS=1
	fi
	if [[ "X$1" == "Xxls-html" ]]
	then
		PARS=$PARS" "$1
		DO_XLS_HTML=1
	fi
	if [[ "X$1" == "Xppt" || "X$1" == "Xall" ]]
	then
		PARS=$PARS" "$1
		DO_PPT=1
	fi
	if [[ "X$1" == "Xone" ]]
	then
		PARS=$PARS" "$1
		ONLY_ONE=1
	fi
	if [[ "X$1" == "Xbuild" ]]
	then
		echo
		rm cactus-libreoffice*.zip
		rm lo.*
		echo tar does, expanding
		./expand.sh
		echo tar expanded
		echo building release file
		. instdir/sdk/settings/dk.mk 
		VERSION=$(echo $BUILDID | sed 's/\./-/g')
		CV=`git tag | sort -V | tail -1`

		echo tar
		tar -cf lo.tar instdir
		echo brotli zip
		brotli -Z -v lo.tar
		echo zip
		NAME=cactus-libreoffice_${VERSION}_${CV}.zip
		zip -9 $NAME lo.tar.br
		echo built $NAME
		du -s --apparent-size lo* cactus*
		exit 
	fi
	shift
done

if [[ -z "$PARS" ]]
then
	echo Must provide at least 1 valid parameter, none were provided
	echo useage:
	echo create-test OPTIONS
	echo where OPTIONS is at least one of:
	echo "There are two groups of options conversion tests and "
	echo "library processing tasks:"
	echo
	echo "   Conversion tasks which take file from the current"
	echo "   directory and process them putting the result into"
	echo "   the 'converted' subdirectory."
	echo
       	echo "      html:  meaning run the tests of xlsx to html files."
       	echo "      doc:   meaning run the tests of doc to docx files."
       	echo "      ppt:   meaning run the tests of ppt to pptx files."
       	echo "      xls:   meaning run the tests of xls to xlsx files."
       	echo "      xls-html:   meaning run the tests of xls to html files."
	echo "      one:   means just run one test of any type specified"
	echo "             The test run is the one named alphabtically"
        echo "             as the first."
	echo
	echo "   Processing tasks:"
	echo "      clean: meaning extract the from the LibreOff*.tar.gz"
	echo "            built by the standard make."
       	echo "      build: means construct the layer file. Note if this"
	echo "             is provided no other options are taken into"
	echo "             account."
	exit 1
fi

echo Active command line is : $PARS
rm -r -f converted
mkdir -p converted

if [ ! -f instdir/program/soffice.bin ]
then
	echo soffice.bin does not exist
	./expand.sh
	echo expanded
fi

if [[ $DO_HTML == 1 ]]
then
	echo testing xlsx and ods files
	for FILE in $(ls *.xlsx *.ods)
	do
		echo processing $FILE
		instdir/program/soffice.bin \
       			--headless \
       			--norestore \
       			--invisible \
       			--nodefault \
       			--nofirststartwizard \
       			--nolockcheck \
       			--nologo \
       			--convert-to "html" \
       			--outdir converted $FILE
		if [[ $ONLY_ONE == 1 ]]
		then
			break
		fi
	done
	echo
fi

if [[ $DO_DOC == 1 ]]
then
	echo testing doc to docx
	for FILE in $(ls *.doc)
	do
		echo processing $FILE
		instdir/program/soffice.bin \
       			--headless \
       			--norestore \
       			--invisible \
       			--nodefault \
       			--nofirststartwizard \
       			--nolockcheck \
       			--nologo \
       			--convert-to "docx" \
       			--outdir converted $FILE
		if [[ $ONLY_ONE == 1 ]]
		then
			break
		fi
	done
	echo
fi

if [[ $DO_DOC_PDF == 1 ]]
then
	echo testing doc ior docx to pdf
	for FILE in $(ls *.doc *.docx)
	do
		echo processing $FILE
		instdir/program/soffice.bin \
       			--headless \
       			--norestore \
       			--invisible \
       			--nodefault \
       			--nofirststartwizard \
       			--nolockcheck \
       			--nologo \
       			--convert-to "pdf" \
       			--outdir converted $FILE
		if [[ $ONLY_ONE == 1 ]]
		then
			break
		fi
	done
	echo
fi

if [[ $DO_PPT == 1 ]]
then
	echo testing ppt to pptx
	for FILE in $(ls *.ppt)
	do
		echo processing $FILE
		instdir/program/soffice.bin \
       			--headless \
       			--norestore \
       			--invisible \
       			--nodefault \
       			--nofirststartwizard \
       			--nolockcheck \
       			--nologo \
       			--convert-to "pptx" \
       			--outdir converted $FILE
		if [[ $ONLY_ONE == 1 ]]
		then
			break
		fi
	done
	echo
fi

if [[ $DO_XLS == 1 ]]
then
	echo testing xls to xlsx
	for FILE in $(ls *.xls)
	do
		echo processing $FILE
		instdir/program/soffice.bin \
       			--headless \
       			--norestore \
       			--invisible \
       			--nodefault \
       			--nofirststartwizard \
       			--nolockcheck \
       			--nologo \
       			--convert-to "xlsx" \
       			--outdir converted $FILE
		if [[ $ONLY_ONE == 1 ]]
		then
			break
		fi
	done
	echo
fi


if [[ $DO_XLS_HTML == 1 ]]
then
	echo testing xls to xlsx
	for FILE in $(ls *.xls)
	do
		echo processing $FILE
		instdir/program/soffice.bin \
       			--headless \
       			--norestore \
       			--invisible \
       			--nodefault \
       			--nofirststartwizard \
       			--nolockcheck \
       			--nologo \
       			--convert-to "html" \
       			--outdir converted $FILE
		if [[ $ONLY_ONE == 1 ]]
		then
			break
		fi
	done
	echo
fi

