
// This file was generated by: ./generatePresetsCXX.pl

// Please, DO NOT EDIT.

// We mean it.

#include <oox/drawingml/customshapeproperties.hxx>
#include <oox/token/tokenmap.hxx>
#include <com/sun/star/awt/Rectangle.hpp>
#include <com/sun/star/awt/Size.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeAdjustmentValue.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeSegment.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeParameterPair.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeParameterType.hpp>

using namespace ::com::sun::star;
using namespace ::com::sun::star::beans;
using namespace ::com::sun::star::drawing;
using namespace ::com::sun::star::uno;

namespace oox { namespace drawingml {

namespace
{
class ShapeCaccentBorderCallout1 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -38333);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 7
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-accentBorderCallout1"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCaccentBorderCallout2 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (6);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -46667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    6, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,2,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-accentBorderCallout2"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCaccentBorderCallout3 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (8);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 100000);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        {
            Any aAny ((sal_Int32) 112963);
            aAdjSequence [6].Value = aAny;
            aAdjSequence [6].Name = "adj7";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [7].Value = aAny;
            aAdjSequence [7].Name = "adj8";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logheight*$6 /100000",
            "logwidth*$7 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 7);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 6);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,3,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 11
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-accentBorderCallout3"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCaccentCallout1 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -38333);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 7
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-accentCallout1"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCaccentCallout2 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (6);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -46667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    6, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,2,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-accentCallout2"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCaccentCallout3 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (8);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 100000);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        {
            Any aAny ((sal_Int32) 112963);
            aAdjSequence [6].Value = aAny;
            aAdjSequence [6].Name = "adj7";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [7].Value = aAny;
            aAdjSequence [7].Name = "adj8";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logheight*$6 /100000",
            "logwidth*$7 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 7);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 6);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,3,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 11
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-accentCallout3"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonBackPrevious : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonBackPrevious"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonBeginning : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *1/8",
            "?8 *1/4",
            "?6 +?9 -0",
            "?6 +?10 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        13, 14
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonBeginning"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonBlank : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 3
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonBlank"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonDocument : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "?0 *9/32",
            "logwidth/2",
            "?6 +0-?5 ",
            "?6 +?5 -0",
            "?0 *3/16",
            "?8 +0-?9 ",
            "?3 +?9 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    12, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    12, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 13
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,4,
                4,0,
                7,0,
                5,0,
                1,1,
                2,5,
                4,0,
                19,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,4,
                4,0,
                1,1,
                2,2,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        12, 13
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonDocument"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonEnd : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *3/4",
            "?8 *7/8",
            "?6 +?9 -0",
            "?6 +?10 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        13, 14
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonEnd"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonForwardNext : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonForwardNext"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonHelp : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "logwidth/2",
            "?4 +0-?1 ",
            "?0 *3/4",
            "?6 *1/7",
            "?6 *3/14",
            "?6 *2/7",
            "?6 *3/7",
            "?6 *4/7",
            "?6 *17/28",
            "?6 *21/28",
            "?6 *11/14",
            "?3 +?9 -0",
            "?3 +?12 -0",
            "?3 +?13 -0",
            "?3 +?14 -0",
            "?5 +?8 -0",
            "?5 +?10 -0",
            "?5 +?11 -0",
            "?6 *1/14",
            "?6 *3/28",
            "logwidth",
            "logheight",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(-10800000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(-10800000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(-10800000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    24, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 25
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 27
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 31
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    32, 33
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    34, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    36, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    38, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    40, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    42, 43
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    44, 45
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    46, 47
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    48, 49
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    50, 51
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    52, 53
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    54, 55
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    56, 57
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    58, 59
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    60, 61
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    62, 63
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    64, 65
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    66, 67
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    24, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 25
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 25
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                17,3,
                2,3,
                17,3,
                4,0,
                1,1,
                17,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,3,
                2,3,
                17,3,
                4,0,
                1,1,
                17,1,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                17,3,
                2,3,
                17,3,
                4,0,
                1,1,
                17,1,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        24, 25
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonHelp"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonHome : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *1/16",
            "?8 *1/8",
            "?8 *3/16",
            "?8 *5/16",
            "?8 *7/16",
            "?8 *9/16",
            "?8 *11/16",
            "?8 *3/4",
            "?8 *13/16",
            "?8 *7/8",
            "?3 +?9 -0",
            "?3 +?11 -0",
            "?3 +?12 -0",
            "?3 +?16 -0",
            "?6 +?10 -0",
            "?6 +?13 -0",
            "?6 +?14 -0",
            "?6 +?15 -0",
            "?6 +?17 -0",
            "?6 +?18 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    29, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 30
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 30
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    29, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 30
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 30
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,10,
                4,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                1,1,
                2,7,
                4,0,
                19,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,10,
                4,0,
                1,1,
                2,1,
                1,1,
                2,1,
                1,1,
                2,3,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        29, 30
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonHome"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonInformation : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "logwidth/2",
            "?4 +0-?1 ",
            "?0 *3/4",
            "?6 *1/32",
            "?6 *5/16",
            "?6 *3/8",
            "?6 *13/32",
            "?6 *19/32",
            "?6 *11/16",
            "?6 *13/16",
            "?6 *7/8",
            "?3 +?7 -0",
            "?3 +?8 -0",
            "?3 +?9 -0",
            "?3 +?13 -0",
            "?3 +?14 -0",
            "?5 +?8 -0",
            "?5 +?10 -0",
            "?5 +?11 -0",
            "?5 +?12 -0",
            "?6 *3/32",
            "logwidth",
            "logheight",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0",
            "(16200000)/60000.0",
            "(21600000)/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    25, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 26
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 1
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 1
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 30
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 1
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 17
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    25, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 26
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 26
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                17,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,1,
                4,0,
                1,1,
                17,1,
                1,1,
                2,9,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                17,1,
                1,1,
                2,9,
                4,0,
                20,0,
                7,0,
                5,0,
                1,1,
                17,1,
                4,0,
                1,1,
                17,1,
                1,1,
                2,9,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        25, 26
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonInformation"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonMovie : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *1455/21600",
            "?8 *1905/21600",
            "?8 *2325/21600",
            "?8 *16155/21600",
            "?8 *17010/21600",
            "?8 *19335/21600",
            "?8 *19725/21600",
            "?8 *20595/21600",
            "?8 *5280/21600",
            "?8 *5730/21600",
            "?8 *6630/21600",
            "?8 *7492/21600",
            "?8 *9067/21600",
            "?8 *9555/21600",
            "?8 *13342/21600",
            "?8 *14580/21600",
            "?8 *15592/21600",
            "?6 +?9 -0",
            "?6 +?10 -0",
            "?6 +?11 -0",
            "?6 +?12 -0",
            "?6 +?13 -0",
            "?6 +?14 -0",
            "?6 +?15 -0",
            "?6 +?16 -0",
            "?3 +?17 -0",
            "?3 +?18 -0",
            "?3 +?19 -0",
            "?3 +?20 -0",
            "?3 +?21 -0",
            "?3 +?22 -0",
            "?3 +?23 -0",
            "?3 +?24 -0",
            "?3 +?25 -0",
            "?3 +?26 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    44, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    44, 45
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 45
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    32, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    32, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    32, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 39
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    44, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    44, 45
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 45
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,18,
                4,0,
                7,0,
                5,0,
                1,1,
                2,18,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,18,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        44, 45
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonMovie"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonReturn : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *7/8",
            "?8 *3/4",
            "?8 *5/8",
            "?8 *3/8",
            "?8 *1/4",
            "?3 +?10 -0",
            "?3 +?11 -0",
            "?3 +?13 -0",
            "?6 +?9 -0",
            "?6 +?10 -0",
            "?6 +?11 -0",
            "?6 +?12 -0",
            "?6 +?13 -0",
            "?8 *1/8",
            "logwidth",
            "logheight",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(-5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(-5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(-5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    23, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 24
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 30
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    39, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    41, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    43, 44
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    45, 46
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    47, 48
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    23, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 24
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 24
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,4,
                17,1,
                2,1,
                17,1,
                2,3,
                17,1,
                2,1,
                17,1,
                2,1,
                4,0,
                7,0,
                5,0,
                1,1,
                2,4,
                17,1,
                2,1,
                17,1,
                2,3,
                17,1,
                2,1,
                17,1,
                2,1,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                17,1,
                2,1,
                17,1,
                2,3,
                17,1,
                2,1,
                17,1,
                2,3,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        23, 24
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonReturn"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCactionButtonSound : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *1/8",
            "?8 *5/16",
            "?8 *5/8",
            "?8 *11/16",
            "?8 *3/4",
            "?8 *7/8",
            "?3 +?9 -0",
            "?3 +?10 -0",
            "?3 +?12 -0",
            "?3 +?14 -0",
            "?6 +?10 -0",
            "?6 +?11 -0",
            "?6 +?13 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    22, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 18
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    22, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 23
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,5,
                4,0,
                7,0,
                5,0,
                1,1,
                2,5,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,5,
                4,0,
                1,1,
                2,1,
                1,1,
                2,1,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        22, 23
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-actionButtonSound"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCarc : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 16200000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) 0);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(21599999-$0 ,$0 ,21599999))",
            "if(0-$1 ,0,if(21599999-$1 ,$1 ,21599999))",
            "?1 +0-?0 ",
            "?2 +21600000-0",
            "if(?2 ,?2 ,?3 )",
            "logwidth/2",
            "?5 *sin(pi*(?0 )/10800000)",
            "logheight/2",
            "?7 *cos(pi*(?0 )/10800000)",
            "?5 *(cos(atan2(?6 ,?8 )))",
            "?7 *(sin(atan2(?6 ,?8 )))",
            "?5 *sin(pi*(?1 )/10800000)",
            "?7 *cos(pi*(?1 )/10800000)",
            "?5 *(cos(atan2(?11 ,?12 )))",
            "?7 *(sin(atan2(?11 ,?12 )))",
            "logwidth/2",
            "?15 +?9 -0",
            "logheight/2",
            "?17 +?10 -0",
            "?15 +?13 -0",
            "?17 +?14 -0",
            "21600000+0-?0 ",
            "?4 +0-?21 ",
            "max(?16 ,?19 )",
            "if(?22 ,logwidth,?23 )",
            "5400000+0-?0 ",
            "27000000+0-?0 ",
            "if(?25 ,?25 ,?26 )",
            "?4 +0-?27 ",
            "max(?18 ,?20 )",
            "if(?28 ,logheight,?29 )",
            "10800000+0-?0 ",
            "32400000+0-?0 ",
            "if(?31 ,?31 ,?32 )",
            "?4 +0-?33 ",
            "min(?16 ,?19 )",
            "if(?34 ,0,?35 )",
            "16200000+0-?0 ",
            "37800000+0-?0 ",
            "if(?37 ,?37 ,?38 )",
            "?4 +0-?39 ",
            "min(?18 ,?20 )",
            "if(?40 ,0,?41 )",
            "?0 +0-5400000",
            "?1 +5400000-0",
            "(?43 +?44 )/2",
            "(?0 )/60000.0",
            "(?4 )/60000.0",
            "(?0 )/60000.0",
            "(?4 )/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 20
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    46, 47
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    48, 49
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        36, 42
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        24, 30
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-arc"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbentArrow : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) 43750);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$1 ,0,if(50000-$1 ,$1 ,50000))",
            "?0 *2/1",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "if(0-$2 ,0,if(50000-$2 ,$2 ,50000))",
            "min(logwidth,logheight)",
            "?4 *?2 /100000",
            "?4 *?0 /100000",
            "?5 *1/2",
            "?6 +0-?7 ",
            "?4 *?3 /100000",
            "logwidth+0-?9 ",
            "logheight+0-?8 ",
            "min(?10 ,?11 )",
            "100000*?12 /?4 ",
            "if(0-$3 ,0,if(?13 -$3 ,$3 ,?13 ))",
            "?4 *?14 /100000",
            "?15 +0-?5 ",
            "max(?16 ,0)",
            "?5 +?17 -0",
            "logwidth+0-?9 ",
            "?8 +?5 -0",
            "?20 +?8 -0",
            "?8 +?15 -0",
            "?20 +?17 -0",
            "logheight",
            "logwidth",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 24
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 21
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    19, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    15, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 13);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 24
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 27
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    19, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 6
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 24
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,1,
                17,1,
                2,6,
                17,1,
                2,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        25, 24
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bentArrow"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbentConnector2 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap.setProperty(PROP_AdjustmentValues, Sequence< OUString >(0));
    }
    {
        static const char *aStrings[] = {
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        aPropertyMap.setProperty(PROP_Handles, Sequence< OUString >(0));
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 1
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,2,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 1
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bentConnector2"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbentConnector3 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logwidth*$0 /100000",
            "logheight/2",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 1
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 3
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        2, 3
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bentConnector3"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbentConnector4 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logwidth*$0 /100000",
            "(?0 +logwidth)/2",
            "logheight*$1 /100000",
            "(0+?2 )/2",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 5
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,4,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 5
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bentConnector4"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbentConnector5 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (3);
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logwidth*$0 /100000",
            "logwidth*$2 /100000",
            "(?0 +?1 )/2",
            "logheight*$1 /100000",
            "(0+?3 )/2",
            "(logheight+?3 )/2",
            "logwidth",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 3
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 5
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 7
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,5,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bentConnector5"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbentUpArrow : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (3);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "if(0-$1 ,0,if(50000-$1 ,$1 ,50000))",
            "if(0-$2 ,0,if(50000-$2 ,$2 ,50000))",
            "min(logwidth,logheight)",
            "?3 *?2 /100000",
            "?3 *?1 /50000",
            "logwidth+0-?5 ",
            "?3 *?1 /100000",
            "logwidth+0-?7 ",
            "?3 *?0 /200000",
            "?8 +0-?9 ",
            "?8 +?9 -0",
            "?3 *?0 /100000",
            "logheight+0-?12 ",
            "?11 *1/2",
            "(?13 +logheight)/2",
            "(?4 +logheight)/2",
            "logheight",
            "logwidth"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 13
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    6, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 17
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 17
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,8,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 13
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        11, 17
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bentUpArrow"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbevel : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 12500);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "logwidth+0-?2 ",
            "logheight+0-?2 ",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefX";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                21,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                19,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                20,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                1,1,
                2,3,
                4,0,
                1,1,
                2,1,
                1,1,
                2,1,
                1,1,
                2,1,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        2, 2
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 4
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bevel"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCblockArc : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (3);
        {
            Any aAny ((sal_Int32) 10800000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) 0);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(21599999-$0 ,$0 ,21599999))",
            "if(0-$1 ,0,if(21599999-$1 ,$1 ,21599999))",
            "if(0-$2 ,0,if(50000-$2 ,$2 ,50000))",
            "?1 +0-?0 ",
            "?3 +21600000-0",
            "if(?3 ,?3 ,?4 )",
            "0+0-?5 ",
            "logwidth/2",
            "?7 *sin(pi*(?0 )/10800000)",
            "logheight/2",
            "?9 *cos(pi*(?0 )/10800000)",
            "?7 *sin(pi*(?1 )/10800000)",
            "?9 *cos(pi*(?1 )/10800000)",
            "?7 *(cos(atan2(?8 ,?10 )))",
            "?9 *(sin(atan2(?8 ,?10 )))",
            "?7 *(cos(atan2(?11 ,?12 )))",
            "?9 *(sin(atan2(?11 ,?12 )))",
            "logwidth/2",
            "?17 +?13 -0",
            "logheight/2",
            "?19 +?14 -0",
            "?17 +?15 -0",
            "?19 +?16 -0",
            "min(logwidth,logheight)",
            "?23 *?2 /100000",
            "?7 +0-?24 ",
            "?9 +0-?24 ",
            "?25 *sin(pi*(?1 )/10800000)",
            "?26 *cos(pi*(?1 )/10800000)",
            "?25 *sin(pi*(?0 )/10800000)",
            "?26 *cos(pi*(?0 )/10800000)",
            "?25 *(cos(atan2(?27 ,?28 )))",
            "?26 *(sin(atan2(?27 ,?28 )))",
            "?25 *(cos(atan2(?29 ,?30 )))",
            "?26 *(sin(atan2(?29 ,?30 )))",
            "?17 +?31 -0",
            "?19 +?32 -0",
            "?17 +?33 -0",
            "?19 +?34 -0",
            "21600000+0-?0 ",
            "?5 +0-?39 ",
            "max(?18 ,?35 )",
            "max(?21 ,?37 )",
            "max(?41 ,?42 )",
            "if(?40 ,logwidth,?43 )",
            "5400000+0-?0 ",
            "27000000+0-?0 ",
            "if(?45 ,?45 ,?46 )",
            "?5 +0-?47 ",
            "max(?20 ,?36 )",
            "max(?22 ,?38 )",
            "max(?49 ,?50 )",
            "if(?48 ,logheight,?51 )",
            "10800000+0-?0 ",
            "32400000+0-?0 ",
            "if(?53 ,?53 ,?54 )",
            "?5 +0-?55 ",
            "min(?18 ,?35 )",
            "min(?21 ,?37 )",
            "min(?57 ,?58 )",
            "if(?56 ,0,?59 )",
            "16200000+0-?0 ",
            "37800000+0-?0 ",
            "if(?61 ,?61 ,?62 )",
            "?5 +0-?63 ",
            "min(?20 ,?36 )",
            "min(?22 ,?38 )",
            "min(?65 ,?66 )",
            "if(?64 ,0,?67 )",
            "(?18 +?37 )/2",
            "(?20 +?38 )/2",
            "(?21 +?35 )/2",
            "(?22 +?36 )/2",
            "?0 +0-5400000",
            "?1 +5400000-0",
            "(?73 +?74 )/2",
            "(?0 )/60000.0",
            "(?5 )/60000.0",
            "(?1 )/60000.0",
            "(?6 )/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 20
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (3);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 36
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RadiusRangeMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RadiusRangeMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    76, 77
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    78, 79
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                17,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        60, 68
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        44, 52
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-blockArc"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCborderCallout1 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -38333);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 7
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-borderCallout1"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCborderCallout2 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (6);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -46667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    6, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,2,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-borderCallout2"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCborderCallout3 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (8);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 100000);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        {
            Any aAny ((sal_Int32) 112963);
            aAdjSequence [6].Value = aAny;
            aAdjSequence [6].Name = "adj7";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [7].Value = aAny;
            aAdjSequence [7].Name = "adj8";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logheight*$6 /100000",
            "logwidth*$7 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 7);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 6);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,3,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 11
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-borderCallout3"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbracePair : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 8333);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(25000-$0 ,$0 ,25000))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "?1 *?0 /50000",
            "logwidth+0-?3 ",
            "logwidth+0-?2 ",
            "logheight/2",
            "?6 +0-?2 ",
            "?6 +?2 -0",
            "logheight+0-?2 ",
            "?2 *29289/100000",
            "?2 +?10 -0",
            "logwidth+0-?11 ",
            "logheight+0-?10 ",
            "logwidth/2",
            "logheight",
            "logwidth",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(-5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(-5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(-5400000)/60000.0",
            "(5400000)/60000.0",
            "(-5400000)/60000.0",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(-5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 25000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 30
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    39, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    41, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    43, 44
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    45, 46
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    47, 48
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                17,2,
                2,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,2,
                2,1,
                17,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,1,
                2,1,
                17,2,
                2,1,
                17,1,
                1,1,
                17,1,
                2,1,
                17,2,
                2,1,
                17,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        11, 11
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        12, 13
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bracePair"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCbracketPair : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 16667);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "logwidth+0-?2 ",
            "logheight+0-?2 ",
            "?2 *29289/100000",
            "logwidth+0-?5 ",
            "logheight+0-?5 ",
            "logwidth/2",
            "logheight/2",
            "logheight",
            "logwidth",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 21
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 27
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,1,
                2,1,
                17,1,
                1,1,
                17,1,
                2,1,
                17,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        5, 5
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-bracketPair"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCcallout1 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -38333);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 7
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-callout1"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCcallout2 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (6);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -46667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    6, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-callout2"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

class ShapeCcallout3 : public CustomShapeProvider
{
  virtual PropertyMap getProperties() SAL_OVERRIDE
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (8);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = "adj1";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = "adj2";
        }
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = "adj3";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = "adj4";
        }
        {
            Any aAny ((sal_Int32) 100000);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = "adj5";
        }
        {
            Any aAny ((sal_Int32) -16667);
            aAdjSequence [5].Value = aAny;
            aAdjSequence [5].Name = "adj6";
        }
        {
            Any aAny ((sal_Int32) 112963);
            aAdjSequence [6].Value = aAny;
            aAdjSequence [6].Name = "adj7";
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [7].Value = aAny;
            aAdjSequence [7].Name = "adj8";
        }
        aPropertyMap.setProperty(PROP_AdjustmentValues, aAdjSequence);
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logheight*$4 /100000",
            "logwidth*$5 /100000",
            "logheight*$6 /100000",
            "logwidth*$7 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap.setProperty(PROP_Equations, createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings ));
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 5);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 4);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = "Position";
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = "RangeXMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = "RangeXMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = "RangeYMaximum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = "RangeYMinimum";
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = "RefX";
                Any aAny ((sal_Int32) 7);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = "RefY";
                Any aAny ((sal_Int32) 6);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap.setProperty(PROP_Handles, aPropSequenceSequence);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredX, (sal_Bool) sal_False);
    }
    {
        aPropertyMap.setProperty(PROP_MirroredY, (sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = "Coordinates";
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 6
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = "Segments";
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,3,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = "TextFrames";
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 11
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap.setProperty(PROP_Path, aPropSequence);
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap.setProperty(PROP_ViewBox, aRectangle);
    }
    aPropertyMap.setProperty( PROP_Type, OUString("ooxml-callout3"));

    return aPropertyMap;
  }
};

// This is a generated source file. DO NOT EDIT.

} // anonymous namespace
void CustomShapeProperties::initializePresetsMap1()
{
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentBorderCallout1" ) ] = new ShapeCaccentBorderCallout1();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentBorderCallout2" ) ] = new ShapeCaccentBorderCallout2();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentBorderCallout3" ) ] = new ShapeCaccentBorderCallout3();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentCallout1" ) ] = new ShapeCaccentCallout1();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentCallout2" ) ] = new ShapeCaccentCallout2();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentCallout3" ) ] = new ShapeCaccentCallout3();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonBackPrevious" ) ] = new ShapeCactionButtonBackPrevious();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonBeginning" ) ] = new ShapeCactionButtonBeginning();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonBlank" ) ] = new ShapeCactionButtonBlank();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonDocument" ) ] = new ShapeCactionButtonDocument();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonEnd" ) ] = new ShapeCactionButtonEnd();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonForwardNext" ) ] = new ShapeCactionButtonForwardNext();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonHelp" ) ] = new ShapeCactionButtonHelp();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonHome" ) ] = new ShapeCactionButtonHome();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonInformation" ) ] = new ShapeCactionButtonInformation();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonMovie" ) ] = new ShapeCactionButtonMovie();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonReturn" ) ] = new ShapeCactionButtonReturn();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonSound" ) ] = new ShapeCactionButtonSound();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "arc" ) ] = new ShapeCarc();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bentArrow" ) ] = new ShapeCbentArrow();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bentConnector2" ) ] = new ShapeCbentConnector2();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bentConnector3" ) ] = new ShapeCbentConnector3();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bentConnector4" ) ] = new ShapeCbentConnector4();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bentConnector5" ) ] = new ShapeCbentConnector5();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bentUpArrow" ) ] = new ShapeCbentUpArrow();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bevel" ) ] = new ShapeCbevel();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "blockArc" ) ] = new ShapeCblockArc();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "borderCallout1" ) ] = new ShapeCborderCallout1();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "borderCallout2" ) ] = new ShapeCborderCallout2();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "borderCallout3" ) ] = new ShapeCborderCallout3();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bracePair" ) ] = new ShapeCbracePair();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bracketPair" ) ] = new ShapeCbracketPair();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "callout1" ) ] = new ShapeCcallout1();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "callout2" ) ] = new ShapeCcallout2();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "callout3" ) ] = new ShapeCcallout3();
}

} } // oox // drawingml

