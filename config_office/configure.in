dnl /******************************************************************
dnl *
dnl * Name: configure.in
dnl * Auth: Willem van Dorp, Ross Nicholson, Oisin Boydell - Sun Microsystems Ireland
dnl * Date: May 2000
dnl *
dnl * Desc: This file serves as input for the GNU autoconf package
dnl *       in order to create a configure script.
dnl *       In this stage configure just checks the pre-requisites
dnl *       necessary to build OpenOffice.
dnl *
dnl *
dnl ******************************************************************/
clear;
AC_PREREQ(2.12)
AC_INIT()
AC_ARG_WITH(gcc-home,
[  --with-gcc-home         if you built gcc-2.95.2 from source to a specific
                          directory, and used the --with-shared option,
                          please supply your gcc home directory here.
                          Note that this is not the location of the gcc binary but the 
                          location of the entire distribution.
                          
                          Usage: --with-gcc-home=<absolute path to gcc home>
],,)
AC_ARG_WITH(stlport4-home,
[  --with-stlport4-home    The location that STLport4 is installed in. The STL
                          header files are assumed to be in stlport4-home/stlport
                          and the STLport4 library in stlport4-home/lib.

                          Usage: --with-stlport4-home=<absolute path to stlport4 home>
],,)
AC_ARG_WITH(jdk-home,
[  --with-jdk-home         if you have installed JDK 1.2.2, on your system,
                          please supply the path here.
                          Note that this is not the location of the Java binary but the
                          location of the entire distribution.
 
                          Usage: --with-jdk-home=<absolute path to JDK 1.2.2 home>
],,)
AC_ARG_WITH(perl-home,
[  --with-perl-home        if you have installed the Perl 5 Distribution, on your system,
                          please supply the path here.
                          Note that this is not the location of the Perl binary but the
                          location of the entire distribution.
 
                          Usage: --with-perl-home=<absolute path to Perl 5 home>
],,)
AC_ARG_WITH(cl-home,
[  --with-cl-home          for Windows NT users, please supply the path
                          for the Microsoft C/C++ compiler. 
                          Note that this is not the location of the compiler binary but the
                          location of the entire distribution.
 
                          Usage: --with-cl-home=<absolute path to Microsoft C/C++ compiler home>
],,)
AC_ARG_WITH(local-solenv,
[  --with-local-solenv     if you have solenv in a location other than OpenOffice/solenv,
                          please supply the path here.
 
                          Usage: --with-local-solenv=<absolute path to solenv>
],,)
AC_ARG_WITH(local-solver,
[  --with-local-solver     if you have solver in a location other than OpenOffice/solver,
                          please supply the path here.
 
                          Usage: --with-local-solver=<absolute path to solver>
],,)
AC_ARG_ENABLE(check-only,
[  --enable-check-only     Use this option option if you just want to check your environment.
                          This option stops the generation of an env.set
 
                          Usage: --enable-check-only=yes
],,)
AC_ARG_ENABLE(macos9,
[  --enable-macos9         Use this option option if you want to generate a macos9 
                          environment on macosx.
                          
                          Usage: --enable-macos9
],,)
AC_ARG_ENABLE(xprint,
[  --disable-xprint         Use this option if you want to build OpenOffice
                          without Xprint printing functionality.                          

                          Usage: --disable-xprint
],,)
AC_ARG_WITH(lang,
[  --with-lang             Use this option to build OpenOffice with additional language
                          support. US English is always included by default. Separate 
                          multiple languages with commas. For all languages, use
			  --with-lang=ALL.                          

                          Usage: --with-lang=SPAN,SWED,TURK
],,)
AC_ARG_WITH(asm-home,
[  --with-asm-home         For Windows users, please supply the path for the
                          ml.exe assembler.

                          Usage: --with-asm-home=<path to ml.exe directory>
],,)
AC_ARG_WITH(unzip-home,
[  --with-unzip-home         For Windows users, please supply the path for 
                          unzip.exe.

                          Usage: --with-unzip-home=<path to unzip.exe directory>
],,)
AC_ARG_ENABLE(sgistl,
[  --enable-sgistl         for IRIX users, use this option option to build OpenOffice 
                          using SGI's STL.

                          Usage: --enable-check-only=yes
],,)
dnl ===================================================================
dnl Message.
dnl ===================================================================
echo "********************************************************************"
echo "*                                                                  *"
echo "*   OpenOffice build configuration.                                *"
echo "*                                                                  *"
echo "*   The configure proces checks your platform to see whether       *"
echo "*   you can build OpenOffice on it.                                *"
echo "*   This proces checks all pre-requisites and generates a file     *"
echo "*   containing the necessary environment variables.                *"
echo "*   Source this file after configure has ended succesfully.        *"
echo "*                                                                  *"
echo "*   Any warning that is generated during the configure process     *"
echo "*   must be taken into account, since it can be a reason for       *"
echo "*   an unsuccessfull build of OpenOffice.                          *"
echo "*                                                                  *"
echo "********************************************************************"
echo "********************************************************************"
echo "*                                                                  *"
echo "*   Checking the platform pre-requisites.                          *"
echo "*                                                                  *"
echo "********************************************************************"
dnl ===================================================================
dnl Configure pre-requisites.
dnl ===================================================================
cat /dev/null > warn
AC_PATH_PROGS(AWK, awk gawk )
if test -z "$AWK"; then
   AC_MSG_ERROR([install awk to run this script])
fi
AC_PATH_PROGS(SED, sed )
if test -z "$SED"; then
   AC_MSG_ERROR([install sed to run this script])
fi
dnl ===================================================================
dnl Checks for the operating system and processor.
dnl ===================================================================
dnl checking the os
AC_MSG_CHECKING([the operating system])
_os=`uname`
if test `echo $_os | $AWK -F_ '{ print $1 }'` = "CYGWIN"; then
   _os="WINNT"
fi
if test "$_os" = "SunOS" -o "$_os" = "Linux" -o "$_os" = "WINNT" -o "$_os" = "Darwin" -o "$_os" = "FreeBSD" -o "$_os" = "OSF1" -o "$_os" = "NetBSD" -o "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
   AC_MSG_RESULT([checked ($_os)])
else
   AC_MSG_ERROR([$_os operating system is not suitable to build OpenOffice!])
fi
_machine_type=`uname -m`
dnl check whether we're using solaris 7
if test "$_os" = "SunOS"; then 
   AC_MSG_CHECKING([the solaris operating system release])
   _os_release=`uname -r | $AWK -F. '{ print $2 }'`
   if test "$_os_release" != "8" -a "$_os_release" != "7" -a "$_os_release" != "6"; then
      AC_MSG_ERROR([use solaris 6, 7 or 8 to build OpenOffice])
   else
      AC_MSG_RESULT([ok ($_os_release)])
   fi
fi
dnl check whether we're using a sparc or i386 processor
if test "$_os" = "SunOS"
then
   AC_MSG_CHECKING([the processor type])
   _processor=`uname -p`
   if test "$_processor" = "sparc" -o "$_processor" = "i386"
   then
      AC_MSG_RESULT([ok ($_processor)])
   else
      AC_MSG_ERROR([only sparc and i386 processors are supported])
   fi
fi
dnl ===================================================================
dnl Checks for compilers. 
dnl ===================================================================
if test "$_os" = "SunOS" -o "$_os" = "IRIX" -o "$_os" = "IRIX64" -o "$_os" = "OSF1"; then
   if test "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
      if test "$CC" != "gcc"; then
           CC=cc; export CC;
          CXX=CC; export CXX;
      fi
   else
      CC=cc; export CC;
   fi
fi   
if test "$_os" != "WINNT" && test -z "$with_gcc_home"; then
   AC_PROG_CC
fi
if test "$_os" = "Linux" -o "$_os" = "FreeBSD" -o "$_os" = "NetBSD" -o \( \( "$_os" = "IRIX" -o "$_os" = "IRIX64" \) -a "$CC" = "gcc" \) ; then
   dnl ******************************************
   dnl Testing for GNU compiler and version...
   dnl ******************************************
   dnl Check whether the gnu gcc compiler is used.
   if test -z "$with_gcc_home"; then
      if test "$CC" = "gcc"; then
         AC_PATH_PROG(GCC, gcc)
         COMPATH=`echo $GCC | $SED -n "s/\/gcc//p"`
         _gcc_include_start=/usr/lib/gcc-lib
         _gxx_include_start=/usr/include
      fi
   else
      dnl Compiler has been installed to its own directory and it's home is arg with_gcc_home
      _gcc_path="$with_gcc_home/bin/gcc"
      if test -x $_gcc_path; then
         CC=gcc; export CC;
         GCC=$_gcc_path
         COMPATH="$with_gcc_home/bin"
         PATH=$COMPATH:$PATH; export PATH;
         _gcc_include_start=$with_gcc_home
         _gxx_include_start=$with_gcc_home
      fi
   fi

   if test $GCC; then
      AC_MSG_CHECKING([the GNU gcc compiler version])
      _gcc_releasetype=`$GCC --version | $AWK -F"-" '{ print \$1 }'`
      if test "$_gcc_releasetype" = "egcs"; then
         AC_MSG_WARN([found egcs- version,  use (stable=gcc-) version of the compiler])
         AC_MSG_WARN([found egcs- version,  use (stable=gcc-) version of the compiler]) >> warn
         _gcc_version=`$GCC --version | $AWK -F"-" '{ print \$2 }'`
      else
         _gcc_version=`$GCC --version`
      fi
      _gcc_major=`echo $_gcc_version | $AWK -F. '{ print \$1 }'` 
      if test "$_gcc_major" != "2"; then
         AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler])
         AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler]) >> warn
         COMPATH="NO_GCC"
      else
         _gcc_middle=`$GCC --version | $AWK -F. '{ if ($2 != 95) print "false"; else print "true" }'` 
         if test "$_gcc_middle" = "false"; then
            AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler])
            AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler]) >> warn
            COMPATH="NO_GCC"
         else
            _gcc_minor=`$GCC --version | $AWK -F. '{ if ($3 < 2) print "false"; else print "true" }'` 
            if test "$_gcc_minor" = "false"; then
               AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler])
               AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler]) >> warn
               COMPATH="NO_GCC"
            else
               dnl compiler will do
               AC_MSG_RESULT([checked (gcc $_gcc_version)])
               dnl find include paths now
               AC_MSG_CHECKING([the GNU gcc include paths])
               _gcc_include_path=`find $_gcc_include_start -name $_gcc_version -print 2> /dev/null`
               if test "$_gcc_include_path"; then
                  _multiple=`echo $_gcc_include_path | $AWK '{ if ($2) print "true"; else print "false" }'`
                  if test "$_multiple" = "false"; then
                     _gcc_include_path="$_gcc_include_path/include"

                     _gxx_include_path=`find $_gxx_include_start -name "g++-3" -print 2> /dev/null`
                     if test "$_gxx_include_path"; then
                        _multiple=`echo $_gxx_include_path | $AWK '{ if ($2) print "true"; else print "false" }'`
                        if test "$_multiple" = "false"; then
                           AC_MSG_RESULT([checked])
                        else
                           AC_MSG_WARN([found multiple g++-3 directories, please rename so you have one distinct])
                           AC_MSG_WARN([found multiple g++-3 directories, please rename so you have one distinct]) >> warn
                        fi
                     else
                        _gxx_include_path2=`find $_gxx_include_start -name "g++-2" -print 2> /dev/null`
                        if test "$_gxx_include_path2"; then
                           _multiple=`echo $_gxx_include_path2 | $AWK '{ if ($2) print "true"; else print "false" }'`
                           if test "$_multiple" = "false"; then
                              AC_MSG_RESULT([checked])
                              _gxx_include_path="$_gxx_include_path2"
                           else
                              AC_MSG_WARN([found multiple g++-2 directories, please rename so you have one distinct])
                              AC_MSG_WARN([found multiple g++-2 directories, please rename so you have one distinct]) >> warn
                           fi
                        else
                           _gxx_include_path3=`find $_gxx_include_start -name "g++" -print 2> /dev/null`
                           if test "$_gxx_include_path3"; then
                              _multiple=`echo $_gxx_include_path3 | $AWK '{ if ($2) print "true"; else print "false" }'`
                              if test "$_multiple" = "false"; then
                                 AC_MSG_RESULT([checked])
                                 _gxx_include_path="$_gxx_include_path3"
                              else
                                 AC_MSG_WARN([found multiple g++ directories, please rename so you have one distinct])
                                 AC_MSG_WARN([found multiple g++ directories, please rename so you have one distinct]) >> warn
                                 _gxx_include_path="NO_GXX_INCLUDE"
                              fi
                           else
                              AC_MSG_WARN([could not find g++-3 or g++-2 or g++ directories, please use ./configure --help])
                              AC_MSG_WARN([could not find g++-3 or g++-2 or g++ directories, please use ./configure --help]) >> warn
                           fi
                        fi
                     fi
                  else
                     AC_MSG_WARN([found multiple 2.95.2/include directories, please rename so you have one distinct])
                     AC_MSG_WARN([found multiple 2.95.2/include directories, please rename so you have one distinct]) >> warn
                     _gcc_include_path="NO_GCC_INCLUDE"
                  fi
               else
		if test "$_os" = "FreeBSD" -o "$_os" = "NetBSD" ; then
                  _gcc_include_path="/usr/include/g++"
		else
                  AC_MSG_WARN([could not find 2.95.2/include directory of the gcc compiler])
                  AC_MSG_WARN([could not find 2.95.2/include directory of the gcc compiler]) >> warn
                  _gcc_include_path="NO_GCC_INCLUDE"
		fi
               fi
            fi
         fi
      fi
   else
      AC_MSG_WARN([no gcc compiler found])
      AC_MSG_WARN([no gcc compiler found]) >> warn
      COMPATH="NO_GCC"
   fi
fi
if test "$_os" = "SunOS"; then
   if test "$CC" = "cc"; then
      AC_PATH_PROGS(_cc, cc)
      COMPATH=`echo $_cc | $SED -n "s/\/bin\/cc//p"`
      AC_MSG_CHECKING([the SUN Workshop C compiler version])
      dnl cc -V outputs to standard error!!!!
      _workshop_version=`$CC -V 2>&1 | $AWK '/^cc/ { print $7 }'`
      if test "$_workshop_version" = "C"; then
         _workshop_version=`$CC -V 2>&1 | $AWK '/^cc/ { print $8 }'`
      fi   
      _workshop_major=`echo $_workshop_version | $AWK -F. '{ print $1 }'` 
      if test "$_workshop_major" != "5"; then
         AC_MSG_WARN([found version "$_workshop_version", use version 5.0 or 5.2 of the Sun Workshop C compiler])
         AC_MSG_WARN([found version "$_workshop_version", use version 5.0 or 5.2 of the Sun Workshop C compiler]) >> warn
         COMPATH="NO_COMPATH"
      else
         _workshop_minor=`echo $_workshop_version | $AWK -F. '{ if ($2 == 0) print "true"; else if ($2 == 2) print "true"; else print "false" }'` 
         if test "$_workshop_minor" = "false"; then
            AC_MSG_WARN([found version "$_workshop_version", use version 5.0 or 5.2 of the Sun Workshop C compiler])
            AC_MSG_WARN([found version "$_workshop_version", use version 5.0 or 5.2 of the Sun Workshop C compiler]) >> warn
            COMPATH="NO_COMPATH"
         else
            dnl compiler will do
            AC_MSG_RESULT([checked])
         fi
      fi
   fi
fi
if test "$_os" = "Darwin"; then
   if test "$CC" = "cc"; then
      AC_PATH_PROGS(_cc, cc)
      COMPATH=`echo $_cc | $SED -n "s/\/cc//p"`
      AC_MSG_CHECKING([the gcc compiler version])
      dnl cc -v outputs to standard error!!!!
      cc_version=`$CC -v 2>&1 | $AWK '/Apple Computer/ { print $15 }'`
      cc_major=`echo $cc_version | $AWK -F. '{ print $1 }'`
      if test "$cc_major" != "2"; then
         AC_MSG_WARN([found version "$cc_version", use version 2.95.2 of the gcc compiler])
         AC_MSG_WARN([found version "$cc_version", use version 2.95.2 of the gcc compiler]) >> warn
         COMPATH="NO_COMPATH"
      else
         cc_middle=`echo $cc_version | $AWK -F. '{ if ($2 != 95) print "false"; else print "true" }'`
         if test "$cc_middle" = "false"; then
            AC_MSG_WARN([found version "$cc_version", use version 2.95.2 of the gcc compiler])
            AC_MSG_WARN([found version "$cc_version", use version 2.95.2 of the gcc compiler]) >> warn
            COMPATH="NO_COMPATH"
         else
            cc_minor=`echo $cc_version | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
            if test "$cc_minor" = "false"; then
               AC_MSG_WARN([found version "$cc_version", use version 2.95.2 of the gcc compiler])
               AC_MSG_WARN([found version "$cc_version", use version 2.95.2 of the gcc compiler]) >> warn
               COMPATH="NO_COMPATH"
            else
               dnl compiler will do
               AC_MSG_RESULT([checked])
            fi
         fi
      fi
   fi
fi     
if test "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
   if test "$CC" = "cc"; then
      AC_PATH_PROGS(_cc, cc)
      COMPATH=`echo $_cc | $SED -n "s/\/usr\/bin\/cc//p"`
      AC_MSG_CHECKING([the SGI MIPSpro C compiler version])
      dnl cc -version outputs to standard error!!!!
      _mipspro_version=`$CC -version 2>&1 | $AWK '{ print $4 }'`
      _mipspro_major=`echo $_mipspro_version | $AWK -F. '{ print $1 }'`
      if test "$_mipspro_major" != "7"; then
         AC_MSG_WARN([found version "$_mipspro_version", use version 7.2+ of the SGI MIPSpro C compiler])
         AC_MSG_WARN([found version "$_mipspro_version", use version 7.2+ of the SGI MIPSpro C compiler]) >> warn
         COMPATH="NO_COMPATH"
      else
         _mipspro_minor=`echo $_mipspro_version | $AWK -F. '{ if ($2 <= 1) print "false"; else print "true" }'`
         if test "$_mipspro_minor" = "false"; then
            AC_MSG_WARN([found version "$_mipspro_version", use version 7.2+ of the SGI MIPSpro C compiler])
            AC_MSG_WARN([found version "$_mipspro_version", use version 7.2+ of the SGI MIPSpro C compiler]) >> warn
            COMPATH="NO_COMPATH"
         else
            dnl compiler will do
            AC_MSG_RESULT([checked])
         fi
      fi
   fi
fi

if test "$_os" = "OSF1"; then
   if test "$CC" = "cc"; then
      AC_PATH_PROGS(_cc, cc)
      COMPATH=`echo $_cc | $SED -n "s/\/usr\/bin\/cc//p"`
      AC_MSG_WARN([******* $_cc , $COMPATH])
      AC_MSG_CHECKING([the Compaq C compiler version])
      dnl cc -V outputs to standard error!!!!
      _compaqc_version=`$CC -V 2>&1 | $AWK '{ print $3 }'`
      _compaqc_major=`echo $_compaqc_version | $AWK -F. '{ print $1 }'`
      if test "$_compaqc_major" != "T6"; then
         AC_MSG_WARN([found version "$_compaqc_version", use version 6 of the Compaq C compiler])
         AC_MSG_WARN([found version "$_compaqc_version", use version 6 of the Compaq C compiler]) >> warn
         COMPATH="NO_COMPATH"
      else
         dnl compiler will do
         AC_MSG_RESULT([checked])
      fi
   fi
fi

dnl Check if there is a Microsoft C/C++ compiler.
if test "$_os" = "WINNT"; then
   AC_MSG_CHECKING([the Microsoft C/C++ Compiler])
   if test -x $with_cl_home/bin/cl; then
      COMPATH=$with_cl_home
      AC_MSG_RESULT([found.])
   else
      COMPATH="NO_CL"
      AC_MSG_RESULT([not found.])
   fi
fi     

dnl Check if stdc headers are available excluding windows.
if test "$_os" != "WINNT"; then
   AC_HEADER_STDC
fi

dnl Check if palm-appl.h is available on Linux or FreeBSD
if test "$_os" = "Linux" -o "$_os" = "FreeBSD"; then
   AC_MSG_CHECKING([pam_appl.h])
   if test -f "/usr/include/security/pam_appl.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_WARN([pam_appl.h could not be found in /usr/include/security])
      AC_MSG_WARN([pam_appl.h could not be found in /usr/include/security]) >> warn
   fi
fi
dnl ***************************************
dnl Testing for c++ compiler and version...
dnl ***************************************

AC_PROG_CXX
if test "$_os" = "Linux" -o "$_os" = "FreeBSD" -o "$_os" = "NetBSD" -o "$_os" = "IRIX" -o "$_os" = "IRIX64" ; then
   dnl Check whether the gnu gcc compiler is used.
   if test "$CC" = "gcc"; then
      AC_MSG_CHECKING([g++ Compiler])
      dnl Check whether the wrapper g++ exists.
      if test -z "$GXX"; then
         AC_MSG_WARN([GNU g++/c++ was not found])
         AC_MSG_WARN([GNU g++/c++ was not found]) >> warn
      else
         AC_MSG_RESULT([checked]) 
      fi
   fi
fi
if test "$_os" = "SunOS"; then
   CXX=CC; export CXX;
   dnl Workshop C++ compiler packaged with Workshop C compiler
   if test "$CC" = "cc"; then
   AC_MSG_CHECKING([Sun Workshop C++ Compiler])
      if test "$CXX" != "CC"; then
         AC_MSG_WARN([Sun Workshop C++ was not found])
         AC_MSG_WARN([Sun Worlshop C++ was not found]) >> warn
      else
         AC_MSG_RESULT([checked]) 
      fi
   fi 
fi
if test "$_os" = "Darwin"; then
   CXX=c++; export CXX;
   dnl c++ packaged with cc (gcc) for Macosx
   if test "$CC" = "cc"; then
      AC_MSG_CHECKING([Macosx c++ Compiler])
      if test "$CXX" != "c++"; then
         AC_MSG_WARN([Macosx C++ was not found])
         AC_MSG_WARN([Macosx C++ was not found]) >> warn
      else
         AC_MSG_RESULT([checked]) 
      fi
   fi 
fi 
if test "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
   dnl MIPSpro C++ compiler packaged with MIPSpro C compiler
   if test "$CC" = "cc"; then
      CXX=CC; export CXX;
      AC_MSG_CHECKING([SGI MIPSpro C++ Compiler])
      if test "$CXX" != "CC"; then
         AC_MSG_WARN([SGI MIPSpro C++ was not found])
         AC_MSG_WARN([SGI MIPSpro C++ was not found]) >> warn
      else
         AC_MSG_RESULT([checked])
      fi
   fi
fi
if test "$_os" = "OSF1"; then
   CXX="cxx"; export CXX;
   AC_MSG_CHECKING([Compaq C++ compiler version])
   dnl cxx -V outputs to standard error!!!!
   _compaqcxx_version=`$CXX -V 2>&1 | $AWK '{ print $3 }'`
   _compaqcxx_major=`echo $_compaqcxx_version | $AWK -F. '{ print $1 }'`
   if test "$_compaqcxx_major" != "V6"; then
      AC_MSG_WARN([found version "$_compaqc_version", use version 6 of the Compaq C++ compiler])
      AC_MSG_WARN([found version "$_compaqc_version", use version 6 of the Compaq C++ compiler]) >> warn
   else
      dnl compiler will do
      AC_MSG_RESULT([checked])
   fi
fi

dnl **************************************************************
dnl Testing for required  Solaris and workshop compiler patches...
dnl **************************************************************
dnl Check whether the OS is SunOS.
if test "$_os" = "SunOS"; then
   _temp=`showrev -p | $AWK -F" " '{ print $2 }'` 
   if test "$_os_release" = "7"; then
      dnl ***************
      dnl patch 106327-06
      dnl ***************
      AC_MSG_CHECKING([for patch 106327-06 or greater])
      _patch=`echo $_temp | $AWK '/106327-06/ { print "found" }'`
      _patch="false"
      for i in $_temp
      do
         _patch_major=`echo $i | $AWK -F"-" '{ print $1 }'`
         if test "$_patch_major" = "106327"; then
            _patch_rev=`echo $i | $AWK -F"-" '{ print $2 }'`
            if test "$_patch_rev" -ge "6"; then
               _patch="found"
            fi
        fi
      done
      if test "$_patch" = "found"; then
         AC_MSG_RESULT([found])
      else
         AC_MSG_WARN([patch 106327-06 not found, please install compiler patch 106327-06 or greater])
         AC_MSG_WARN([patch 106327-06 not found, please install compiler patch 106327-06 or greater]) >> warn
      fi
      dnl ***************
      dnl patch 106950-11
      dnl ***************
      AC_MSG_CHECKING([for patch 106950-11 or greater])
      _patch=`echo $_temp | $AWK '/106950-11/ { print "found" }'`
      _patch="false"
      for i in $_temp
      do
         _patch_major=`echo $i | $AWK -F"-" '{ print $1 }'`
         if test "$_patch_major" = "106950"; then
            _patch_rev=`echo $i | $AWK -F"-" '{ print $2 }'`
            if test "$_patch_rev" -ge "11"; then
               _patch="found"
            fi
         fi
      done
      if test "$_patch" = "found"; then
         AC_MSG_RESULT([found])
      else
         AC_MSG_WARN([patch 106950-11 not found, please install linker patch 106950-11 or greater])
         AC_MSG_WARN([patch 106950-11 not found, please install linker patch 106950-11 or greater]) >> warn
      fi
   else
      if test "$_os_release" = "6"; then
         dnl ***************
         dnl patch 105591-09
         dnl ***************
         AC_MSG_CHECKING([for patch 105591-09 or greater])
         _patch=`echo $_temp | $AWK '/105591-09/ { print "found" }'`
         _patch="false"
         for i in $_temp
         do
            _patch_major=`echo $i | $AWK -F"-" '{ print $1 }'`
            if test "$_patch_major" = "105591"; then
               _patch_rev=`echo $i | $AWK -F"-" '{ print $2 }'`
               if test "$_patch_rev" -ge "9"; then
                  _patch="found"
               fi
           fi
         done
         if test "$_patch" = "found"; then
            AC_MSG_RESULT([found])
         else
            AC_MSG_WARN([patch 105591-09 not found, please install compiler patch 105591-09 or greater])
            AC_MSG_WARN([patch 105591-09 not found, please install compiler patch 105591-09 or greater]) >> warn
         fi
         dnl ***************
         dnl patch 107733-08
         dnl ***************
         AC_MSG_CHECKING([for patch 107733-08 or greater])
         _patch=`echo $_temp | $AWK '/107733-08/ { print "found" }'`
         _patch="false"
         for i in $_temp
         do
            _patch_major=`echo $i | $AWK -F"-" '{ print $1 }'`
            if test "$_patch_major" = "107733"; then
               _patch_rev=`echo $i | $AWK -F"-" '{ print $2 }'`
               if test "$_patch_rev" -ge "8"; then
                  _patch="found"
               fi
           fi
         done
         if test "$_patch" = "found"; then
            AC_MSG_RESULT([found])
         else
            AC_MSG_WARN([patch 107733-06 not found, please install linker patch 107733-08 or greater])
            AC_MSG_WARN([patch 107733-06 not found, please install linker patch 107733-08 or greater]) >> warn
         fi
      fi
   fi
fi

dnl ===================================================================
dnl When using Sun Workshop compiler, there is a bug with the cc
dnl preprocessor, so use CC preprocessor for the following tests.
dnl See Issuezilla #445.
dnl ===================================================================
if test "$_os" = "SunOS"; then
AC_LANG_CPLUSPLUS
AC_TRY_CPP("", , )
fi

dnl ===================================================================
dnl Checks for SGI STL
dnl ===================================================================
if test -n "$enable_sgistl"; then
	if test "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
		AC_MSG_CHECKING([for SGI STL])
		if test -d /usr/include/CC ; then
			AC_MSG_RESULT([yes.])

		else
			AC_MSG_RESULT([not found.])
		fi
	else
		AC_MSG_ERROR([IRIX not found.])
	fi
else

dnl ===================================================================
dnl Checks for STLPORT4
dnl ===================================================================
AC_MSG_CHECKING([for STLport4 headers])
if test -d "$with_stlport4_home"; then
	STLPORT4=$with_stlport4_home
        if test "$_os" != "WINNT"; then
           AC_TRY_CPP($STLPORT4/stlport/hash_map, AC_MSG_RESULT([checked.]), AC_MSG_ERROR([STLport4 headers not found.]))
        else
           dnl AC_TRY_CPP doesn't work on Windows because C++ preprocessor is not found by autoconf.
           if test -f "$STLPORT4/stlport/hash_map"; then
              AC_MSG_RESULT([checked.])
           else
              AC_MSG_ERROR([STLport4 headers not found.])
           fi
        fi
        if test "$_os" != "WINNT"; then
		AC_MSG_CHECKING([for STLport4 libraries])
		if test "$_os" = "SunOS"; then
			if test -f "$STLPORT4/lib/libstlport_sunpro.so"; then
				AC_MSG_RESULT([checked])
			else
				AC_MSG_ERROR([STLport4 libraries not found])
			fi
		elif test "$_os" = "Darwin"; then
			if test -f "$STLPORT4/lib/libstlport_gcc.dylib"; then
				AC_MSG_RESULT([checked])
			else
				AC_MSG_ERROR([STLport4 libraries not found])
			fi
		elif test "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
			if test -f "$STLPORT4/lib/libstlport_mipspro_41.so"; then
				AC_MSG_RESULT([checked])
			else
				if test -f "$STLPORT4/lib/libstlport_gcc.so"; then
					AC_MSG_RESULT([checked])
				else
					AC_MSG_ERROR([STLport4 libraries not found])
				fi
			fi
		else
			if test -f "$STLPORT4/lib/libstlport_gcc.so"; then
				AC_MSG_RESULT([checked])
			else
				AC_MSG_ERROR([STLport4 libraries not found])
			fi
		fi
	fi
else
	AC_MSG_WARN([No STLPORT4 directory specified with the --with-stlport4-home option. Will build the one provided.])
dnl AC_MSG_ERROR([No STLPORT4 directory found. You must use the --with-stlport4-home option.])
fi

fi
dnl ===================================================================
dnl Checks for JDK.
dnl ===================================================================
JAVA_HOME=; export JAVA_HOME
if test -z "$with_jdk_home"; then
   AC_PATH_PROG(JAVA, javac)
else
   _java_path="$with_jdk_home/bin/javac"
   dnl Check if there is a java compiler at all.
   if test -x "$_java_path"; then
      JAVA=$_java_path
   fi
fi
AC_MSG_CHECKING([the installed JDK])
if test "$JAVA"; then
   _correct_jdk_exists="false"
   dnl java -version sends output to stderr!
   _jdk=`$JAVA -J-version 2>&1 | $AWK -F'"' '{ print \$2 }'`
   if test "$_os" = "SunOS" -o "$_os" = "IRIX" -o "$_os" = "IRIX64" -o "$_os" = "OSF1"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
   fi
   if test "$_os" = "Linux" -a "$_machine_type" = "i686"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
      _jdk_middle3=`echo $_jdk | $AWK -F. '{ if ($2 != 3) print "false"; else print "true" }'`

      if test "$_jdk_middle" = "false" -a "$_jdk_middle3" = "true"; then
         _jdk_minor="true"
      fi
   fi
   if test "$_os" = "FreeBSD" -o "$_os" = "NetBSD"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
   fi
   if test "$_os" = "Linux" -a "$_machine_type" = "sparc"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
   fi
   if test "$_os" = "Linux" -a "$_machine_type" = "ppc"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
   fi
   if test "$_os" = "Linux" -a "$_machine_type" = "armv4l"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
   fi
   if test "$_os" = "WINNT"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
   fi
   if test "$_os" = "Darwin"; then
      _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 3) print "false"; else print "true" }'`
   fi
   if test "$_jdk_middle" = "true"; then
      if test "$_os" = "SunOS" -o "$_os" = "IRIX" -o "$_os" = "IRIX64"; then
         _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
      fi
      if test "$_os" = "FreeBSD"; then
         _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
      fi
      if test "$_os" = "NetBSD"; then
         _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
      fi
      if test "$_os" = "Linux"; then
         if test "$_machine_type" = "i686"; then
            _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
         fi
         if test "$_machine_type" = "sparc"; then
            _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
         fi 
         if test "$_machine_type" = "ppc"; then
            _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
         fi 
         if test "$_machine_type" = "armv4l"; then
            _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
         fi 
      fi
      if test "$_os" = "OSF1"; then
         _jdk_minor=`echo $_jdk | $AWK -F- '{print $1}' | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
      fi
      if test "$_os" = "WINNT"; then
            _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 2) print "false"; else print "true" }'`
      fi
      if test "$_os" = "Darwin"; then
            _jdk_minor=`echo $_jdk | $AWK -F. '{ if ($3 != 0) print "false"; else print "true" }'`
      fi
   fi
   if test "$_jdk_minor" = "true"; then
      _correct_jdk_exists="true"
      JAVA_HOME=`echo $JAVA | $SED -n "s/\/bin\/javac//p"`
      AC_MSG_RESULT([checked (JDK $_jdk)])
   else
      _correct_jdk_exists="false"
   fi
else
   _correct_jdk_exists="false"
fi
if test "$_correct_jdk_exists" = "false"; then
   JAVA_HOME="NO_JAVA_HOME"
   AC_MSG_WARN([Correct jdk not found])
   AC_MSG_WARN([Correct jdk not found]) >> warn
fi
dnl ===================================================================
dnl Checks for specific files.
dnl ===================================================================
dnl AC_CHECK_FILE(set_soenv.1)
dnl ===================================================================
dnl Checks for programs.
dnl ===================================================================
dnl Check whether there's a C pre-processor.
if test "$_os" = "Linux" -o "$_os" = "FreeBSD" -o "$_os" = "NetBSD" ; then
   AC_PROG_CPP
fi
dnl Check whether there's a C++ pre-processor.
if test "$_os" = "Linux" -o "$_os" = "FreeBSD" -o "$_os" = "NetBSD" ; then
   AC_PROG_CXXCPP
fi
dnl Check for a BSD compatible install program.
dnl AC_PROG_INSTALL
dnl Check whether ln -s works on the current file system.
dnl AC_PROG_LN_S
dnl Check whether there's a Perl version available.
if test -z "$with_perl_home"; then
   AC_PATH_PROG(PERL, perl)
else
   _perl_path="$with_perl_home/bin/perl"
   if test -x "$_perl_path"; then
      PERL=$_perl_path
   fi
fi
if test "$PERL"; then
   AC_MSG_CHECKING([the Perl version])
   dnl ***************************************
   dnl Testing Perl version.
   dnl ***************************************
   _perl_temp=`$PERL -version 2> /dev/null | $AWK -F" " '/built for/ { print $4 }'`
   if test "$_perl_temp" = "version"; then
      _perl_version=`$PERL -version 2> /dev/null | $AWK -F" " '/built for/ { print $5 }'`
   else
      _perl_version=`echo $_perl_temp | $SED -n "s/v//p"`
   fi
   _perl_major=`echo $_perl_version | $AWK -F"." '{ if ($1 < 5) print "false"; else print "true" }'`
   if test "$_perl_major" = "true"; then
      PERL=`echo $PERL | $SED -n "s/\/perl$//p"`
      AC_MSG_RESULT([checked (Perl $_perl_version)])
   else
      AC_MSG_ERROR([found Perl version "$_perl_version", use version 5 of Perl])
   fi 
else
   AC_MSG_ERROR([Perl not found, install version 5 of Perl])
fi

dnl Write the Perl compiler directive into the set_soenv script.
echo "#!$PERL/perl -w" > set_soenv
cat set_soenv.1 >> set_soenv
chmod +x set_soenv

dnl Check whether the tcsh can be used.
if test "$_os" != "WINNT"; then
   AC_PATH_PROG(TCSH, tcsh)
   if test -z "$TCSH"; then
      AC_MSG_ERROR([tcsh not found in \$PATH])
      TCSH="NO_TCSH";
   else
      TCSH=`echo $TCSH | $SED -n "s/\/tcsh//p"`
   fi
else
   AC_MSG_WARN([Windows does not have tcsh])
   TCSH="NO_TCSH"
fi
dnl ===================================================================
dnl Checks for libraries.
dnl ===================================================================
dnl ***************************************
dnl testing for X libraries and includes...
dnl ***************************************
if test "$_os" != "WINNT" -a "$_os" != "Darwin"; then
   AC_PATH_X
   AC_PATH_XTRA
   if test "x$x_includes" = "x"; then
     x_includes="/usr/include"
   fi
   if test "x$x_libraries" = "x"; then
     x_libraries="/usr/lib"
   fi
   dnl The variables $x_libraries and $x_includes are set.
   if test -z "$x_libraries"; then
      AC_MSG_ERROR([No X libraries found]) # Exit
   fi
   if test -z "$x_includes"; then
      AC_MSG_ERROR([No X includes found]) # Exit
   fi
   CFLAGS=$X_CFLAGS
   LDFLAGS="$X_LDFLAGS $X_LIBS"
   AC_CHECK_LIB(X11, XOpenDisplay, x_libs="-lX11 $X_EXTRA_LIBS", [AC_MSG_ERROR([X Development libraries not found])])
else
   x_includes="no_x_includes"
   x_libraries="no_x_libraries"
fi
dnl ***************************************
dnl testing libc version for Linux...
dnl ***************************************
if test "$_os" = "Linux"; then
   AC_CHECK_LIB(c, gnu_get_libc_version, HAVE_LIBC=yes; export HAVE_LIBC)
   AC_MSG_CHECKING([the installed libc is at least version 2.1.1])
   if test "$HAVE_LIBC"; then
      AC_MSG_RESULT([checked])
   else
      AC_MSG_ERROR([libc is less than version 2.1.1, upgrade libc])
   fi
fi
dnl ***************************************
dnl testing bison and flex exist
dnl ***************************************
AC_PATH_PROG(BISON, bison)
if test -z "$BISON"; then
   AC_MSG_WARN([no bison found in \$PATH, install bison]) >> warn
fi
AC_PATH_PROG(FLEX, flex)
if test -z "$FLEX"; then
   AC_MSG_WARN([no flex found in \$PATH, install flex]) >> warn
fi
dnl ***************************************
dnl testing that patch exists
dnl ***************************************
AC_PATH_PROG(PATCH, patch)
if test -z "$PATCH"; then
   AC_MSG_WARN([\"patch\" not found in \$PATH, install the development tool named\"patch"\]) >> warn
fi
dnl ***************************************
dnl testing bash tools path on Windows
dnl ***************************************
if test "$_os" = "WINNT"; then
	AC_PATH_PROG(CYGWIN, bash)
	CYGWIN=`dirname $CYGWIN`
fi
dnl ***************************************
dnl testing ml.exe assembler path
dnl ***************************************
if test "$_os" = "WINNT"; then
if test ! -x "$with_asm_home/ml.exe"; then
   AC_PATH_PROG(ML_EXE, ml.exe)
   if test -z "$ML_EXE"; then
      with_asm_home="NO_ASM_HOME"
   else
      with_asm_home="ASM_IN_PATH"
   fi
fi
else
	with_asm_home="NO_ASM_HOME"
fi
dnl ***************************************
dnl testing unzip.exe path
dnl ***************************************
if test "$_os" = "WINNT"; then
if test ! -x "$with_unzip_home/unzip.exe"; then
   AC_PATH_PROG(UNZIP_EXE, unzip.exe)
   if test -z "$UNZIP_EXE"; then
      with_unzip_home="NO_UNZIP_HOME"
   else
      with_unzip_home="UNZIP_IN_PATH"
   fi
fi
else
        with_unzip_home="NO_UNZIP_HOME"
fi

dnl ===================================================================
dnl Test for the presence of the required gpc.{c,h} files
dnl ===================================================================

AC_MSG_CHECKING([GPC files])
if test -e ../external/gpc/gpc.h; then
	HAVE_GPC_H="yes"
fi
if test -e ../external/gpc/gpc.c; then
	HAVE_GPC_C="yes"
fi

if test "$HAVE_GPC_H" == "yes" -a "$HAVE_GPC_C" == "yes"; then
	AC_MSG_RESULT([GPC files found])
else
	AC_MSG_ERROR([GPC files not found])
fi

dnl ===================================================================
dnl Setting up the environment.
dnl ===================================================================
echo "********************************************************************"
echo "*                                                                  *"
echo "*   Setting up the build environment variables.                    *"
echo "*                                                                  *"
echo "********************************************************************"

# Get UPD number from ../solenv/inc/minor.mk
upd=`grep RSCVERSION= ../solenv/inc/minor.mk | $AWK -F"=" '{ print $2 }'` 

if test -z "$COMPATH"; then
   COMPATH="NO_COMPATH"
fi
if test -z "$_gcc_include_path"; then
   _gcc_include_path="NO_GCC_INCLUDE"
fi
if test -z "$_gxx_include_path"; then
   _gxx_include_path="NO_GXX_INCLUDE"
fi
if test -z "$JAVA_HOME"; then
   JAVA_HOME="NO_JAVA_HOME"
fi
if test -z "$TCSH"; then
   TCSH="NO_TCSH"
fi
if test -z "$STLPORT4"; then 
   STLPORT4="NO_STLPORT4"
fi
if test -z "$PERL"; then
   PERL="NO_PERL"
fi
if test -z "$x_libraries"; then
   x_libraries="no_x_libraries"
fi
if test -z "$x_includes"; then
   x_includes="no_x_includes"
fi
if test -z "$with_local_solenv"; then
   _LOCAL_SOLENV="DEFAULT"
else
   _LOCAL_SOLENV=$with_local_solenv
fi
if test -z "$with_local_solver"; then
   _LOCAL_SOLVER="DEFAULT"
else
   _LOCAL_SOLVER=$with_local_solver
fi
if test -z "$CYGWIN"; then
   CYGWIN="NO_CYGWIN"
fi
if test "$enable_xprint" = "no"; then
   enable_xprint="NO_XPRINT"
else
   enable_xprint="TRUE"
fi
if test -z "$with_lang"; then
   with_lang=,ENUS,
else
   with_lang=","$with_lang",ENUS,"
fi
# Substituting blank spaces in windows pathnames with '#'
if test "$_os" = "WINNT"; then
#   COMPATH=`echo $COMPATH | $SED "s/ /#/g"`
   JAVA_HOME=`echo $JAVA_HOME | $SED "s/ /#/g"`
   PERL=`echo $PERL | $SED "s/ /#/g"`
   _LOCAL_SOLENV=`echo $_LOCAL_SOLENV | $SED "s/ /#/g"`
   _LOCAL_SOLVER=`echo $_LOCAL_SOLVER | $SED "s/ /#/g"`
   CYGWIN=`echo $CYGWIN | $SED "s/ /#/g"`
fi

# Print args passed to set_soenv.
if test 1 = 1; then
echo
echo "\$COMPATH="$COMPATH
echo "\$_gcc_include_path="$_gcc_include_path
echo "\$_gxx_include_path="$_gxx_include_path
echo "\$JAVA_HOME="$JAVA_HOME
echo "\$TCSH="$TCSH
echo "\$PERL="$PERL
echo "\$x_libraries="$x_libraries
echo "\$x_includes="$x_includes
echo "\$_LOCAL_SOLENV="$_LOCAL_SOLENV
echo "\$_LOCAL_SOLVER="$_LOCAL_SOLVER
echo "\$upd="$upd
echo "\$CYGWIN="$CYGWIN
dnl if test -z "$STLPORT4" ; then
dnl STLPORT4=/usr/include/CC
dnl else
   echo "\$STLPORT4="$STLPORT4
dnl fi
echo "\$enable_xprint="$enable_xprint
echo "\$with_lang="$with_lang
echo "\$with_asm_home="$with_asm_home
echo "\$with_unzip_home="$with_unzip_home
echo
fi

# Executing the set_soenv script to setup the environment variables.
if test -z "$enable_check_only"; then
   './set_soenv' $COMPATH $_gcc_include_path $_gxx_include_path $JAVA_HOME $TCSH $PERL $x_libraries $x_includes $_LOCAL_SOLENV $_LOCAL_SOLVER $upd $CYGWIN $STLPORT4 $enable_xprint $with_lang $with_asm_home $with_unzip_home
else
   echo
   echo Test Complete
   echo No environment file will be generated
   echo
   num_warnings=`wc -l warn`
   _num=`echo $num_warnings | $AWK '{ print $1 }'`
   if test $_num -gt 0; then
      echo The following warning\(s\) were generated by configure
      echo ----------------------------------------------------
      echo
      cat warn
      echo
   else
      echo There were no warnings
   fi
   echo
fi   
AC_OUTPUT()


