<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="xml_sax_XDocumentHandler" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: xml_sax_XDocumentHandler.xba,v $ 
'*
'*  $Revision: 1.1 $ 
'*
'*  last change:$Date: 2003-01-27 17:56:02 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global vXMLData As Variant

'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.xml.sax.XDocumentHandler
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim i As Integer
   
    Test.StartMethod("startDocument()")
    bOK = true
    oObj.startDocument()
    Test.MethodTested("startDocument()", bOK)
    out.log("StartDocument")

'  Imports the XML-data
    For i = 0 to ubound(vXMLData)
        Dim data As Variant
        data = vXMLData(i)
        If data(0) = "start" then
            Dim oAttr As Object
            oAttr = createUnoService("basichelper.AttributeList")

            Dim upBound as Integer
            upBound = ubound(data())
            If upBound > 1 then
                Dim j As Integer
                Dim args As Variant
                args = DimArray(upBound - 2)
                For j = 0 to ubound(args())
                    args(j) = data(2 + j)
                Next j
                oAttr.initialize(args())
            EndIf

            oObj.startElement(data(1), oAttr)
            out.log("&lt;" + data(1) + "&gt;")
        EndIf
        If data(0) = "end" then
            oObj.endElement(data(1))
            out.log("&lt;/" + data(1) + "&gt;")
        EndIf
        If data(0) = "chars" then 
            oObj.characters(data(1))
            out.log(data(1))
        EndIf
    Next i

    out.log("EndDocument")
    Test.StartMethod("endDocument()")
    oObj.endDocument()
    bOK = CheckImport()
    Test.MethodTested("endDocument()", bOK)    

    Test.StartMethod("startElement()")
    bOK = true
    Test.MethodTested("startElement()", bOK)

    Test.StartMethod("endElement()")
    bOK = true
    Test.MethodTested("endElement()", bOK)


    Test.StartMethod("characters()")
    bOK = true
    Test.MethodTested("characters()", bOK)

    Test.StartMethod("ignorableWhitespace()")
    bOK = true
    Test.MethodTested("ignorableWhitespace()", bOK)

    Test.StartMethod("processingInstruction()")
    bOK = true
    Test.MethodTested("processingInstruction()", bOK)

    Test.StartMethod("setDocumentLocator()")
    bOK = true
    Test.MethodTested("setDocumentLocator()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
