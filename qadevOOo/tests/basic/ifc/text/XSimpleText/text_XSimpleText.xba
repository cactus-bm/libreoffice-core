<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XSimpleText" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: text_XSimpleText.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:54:54 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XSimpleText
'*************************************************************************
On Error Goto ErrHndl
    Dim oCursor As Object
    Dim oPosCursor As Variant
    Dim cIfcShortName As String
    Dim bOK As Boolean
    Dim oldString, newString As String

    cIfcShortName = "XSimpleText"

    Test.StartMethod("createTextCursor()")
    bOK = true
    oCursor = oObj.createTextCursor()
    bOK = bOK AND NOT (isNull(oCursor))
    bOK = bOK AND hasUnoInterfaces(oCursor, "com.sun.star.text.XTextCursor")
    Test.MethodTested("createTextCursor()", bOK)

    Test.StartMethod("createTextCursorByRange()")
    bOK = true
    oPosCursor = oObj.createTextCursorbyRange(oCursor)
    bOK = bOK AND NOT isNull(oPosCursor)
    bOK = bOK AND hasUnoInterfaces(oPosCursor, "com.sun.star.text.XTextCursor")
    Test.MethodTested("createTextCursorByRange()", bOK)

    Test.StartMethod("insertString()")
    bOK = true
    oldString = oObj.String
    Out.Log("String before inserting:'" + oldString + "'")
    oCursor.gotoStart(false)
    oObj.insertString(oCursor, cIfcShortName, false)
    Dim newStr As String
    newStr = oObj.String
    Out.Log("String content after inserting:'" + newStr + "'")
    Dim expectedStr As String
    expectedStr = cIfcShortName + oldString
    Out.Log("Expected string:'" + expectedStr + "'")
    bOK = bOK AND (expectedStr = newStr)
    oObj.setString(oldString)
    Test.MethodTested("insertString()", bOK)

    ' some cursor navigation to verify if controlcharacters have benn inserted:)
    Test.StartMethod("insertControlCharacter()")
    bOK = true
    oldString = oObj.getString()
    newString = "XSimpleText"
    Out.Log("Set string to '" + newString + "'")
    oObj.setString(newString)
    Out.Log("Current string content of object: '" + oObj.getString() + "'")
    oCursor.gotoStart(false)
    Out.Log("Insert control characters...")
'    oObj.insertControlCharacter(oCursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, false)
    oObj.insertControlCharacter(oCursor, com.sun.star.text.ControlCharacter.LINE_BREAK, false)
    Out.Log("Now string content of object: '" + oObj.getString() + "'")
    Dim breakPos As Integer
    breakPos = inStr(oObj.getString(), chr(10))
    Out.Log("Line break found at " + breakPos)
    bOK = bOK AND breakPos > 0
    oObj.String = oldString
    Out.Log("Return string to old state:'" + oObj.getString() + "'" )
    Test.MethodTested("insertControlCharacter()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
