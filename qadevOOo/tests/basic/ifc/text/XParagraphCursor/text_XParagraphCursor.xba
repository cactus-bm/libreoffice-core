<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XParagraphCursor" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: text_XParagraphCursor.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:53:26 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global oText As Object

'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XParagraphCursor
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim i As Integer

    for i = 0 to 2
        oText.insertString(oObj, "" + i +"Start of paragraph.", false)
        oText.insertString(oObj, Chr(10) + cObjectName + " " + cIfcShortName + Chr(10), false)
        oText.insertString(oObj, "Paragraph's end." + i, false)
        oText.insertControlCharacter(oObj, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, false)
    next i

    oObj.gotoStart(false)

    Test.StartMethod("gotoStartOfParagraph()")
    bOK = true
    oObj.gotoStartOfParagraph(false)
    oText.insertString(oObj, "1", false)
    bOK = bOK AND inStr(1, oText.String, "10Start") &lt;&gt; 0
    Test.MethodTested("gotoStartOfParagraph()", bOK)

    Test.StartMethod("gotoEndOfParagraph()")
    bOK = true
    oObj.gotoEndOfParagraph(false)
    oText.insertString(oObj, "2", false)
    bOK = bOK AND inStr(1, oText.String, "end.02") &lt;&gt; 0
    Test.MethodTested("gotoEndOfParagraph()", bOK)

    Test.StartMethod("gotoNextParagraph()")
    bOK = true
    oObj.gotoNextParagraph(false)
    oObj.gotoNextParagraph(false)
    oObj.gotoEndOfParagraph(false)
    oText.insertString(oObj, "3", false)
    bOK = bOK AND inStr(1, oText.String, "end.23") &lt;&gt; 0
    Test.MethodTested("gotoNextParagraph()", bOK)

    Test.StartMethod("gotoPreviousParagraph()")
    bOK = true
    oObj.gotoPreviousParagraph(false)
    oObj.gotoEndOfParagraph(false)
    oText.insertString(oObj, "4", false)
    bOK = bOK AND inStr(1, oText.String, "end.14") &lt;&gt; 0
    Test.MethodTested("gotoPreviousParagraph()", bOK)

    Test.StartMethod("isStartOfParagraph()")
    bOK = true
    oObj.gotoStartOfParagraph(false)
    bOK = bOK AND oObj.isStartOfParagraph()
    bOK = bOK AND NOT oObj.isEndOfParagraph()
    Test.MethodTested("isStartOfParagraph()", bOK)

    Test.StartMethod("isEndOfParagraph()")
    bOK = true
    oObj.gotoEndOfParagraph(false)
    bOK = bOK AND oObj.isEndOfParagraph()
    bOK = bOK AND NOT oObj.isStartOfParagraph()
    Test.MethodTested("isEndOfParagraph()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
