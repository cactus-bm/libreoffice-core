<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XSentenceCursor" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: text_XSentenceCursor.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:54:33 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XSentenceCursor
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    oObj.Text.String = "Sentence two. Sentence three."

	oObj.gotoEnd(false)

    Test.StartMethod("gotoStartOfSentence()")
    bOK = true
    oObj.gotoStartOfSentence(false)
    oObj.String = "1"
    Out.Log("Current text: '" + oObj.Text.String + "'")
    bOK = bOK AND inStr(1, oObj.Text.String, "1Sentence three.") &lt;&gt; 0
    Test.MethodTested("gotoStartOfSentence()", bOK)

    Test.StartMethod("isStartOfSentence()")
    Test.StartMethod("isEndOfSentence()")
    bOK = true
    oObj.gotoStartOfSentence(false)
    bOK = bOK AND oObj.isStartOfSentence()
    bOK = bOK AND NOT oObj.isEndOfSentence()
    oObj.gotoEndOfSentence(false)
    bOK = bOK AND NOT oObj.isStartOfSentence()
    bOK = bOK AND oObj.isEndOfSentence()
    Test.MethodTested("isStartOfSentence()", bOK)
    Test.MethodTested("isEndOfSentence()", bOK)


    Test.StartMethod("gotoEndOfSentence()")
    bOK = true
    oObj.gotoEndOfSentence(false)
    oObj.String = "2"
    Out.Log("Current text: '" + oObj.Text.String + "'")
    bOK = bOK AND inStr(1, oObj.Text.String, "three.2") &lt;&gt; 0
    Test.MethodTested("gotoEndOfSentence()", bOK)

    Test.StartMethod("gotoPreviousSentence()")
    bOK = true
    oObj.gotoPreviousSentence(false)
    oObj.String = "3"
    Out.Log("Current text: '" + oObj.Text.String + "'")
    bOK = bOK AND inStr(1, oObj.Text.String, "3Sentence two.") &lt;&gt; 0
    Test.MethodTested("gotoPreviousSentence()", bOK)

    Test.StartMethod("gotoNextSentence()")
    bOK = true
    oObj.gotoNextSentence(false)
    oObj.String = "4"
    Out.Log("Current text: '" + oObj.Text.String + "'")
    bOK = bOK AND inStr(1, oObj.Text.String, "41") &lt;&gt; 0
    Test.MethodTested("gotoNextSentence()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
