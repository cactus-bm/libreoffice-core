<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="form_XReset" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: form_XReset.xba,v $ 
'*
'*  $Revision: 1.1 $ 
'*
'*  last change:$Date: 2003-01-27 17:48:56 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************



Dim nCB1Val as Integer, nCB2Val As Integer


Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.form.XReset
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oListener1 as Object, oListener2 As Object
    Dim nCount As Integer

    bOK = true
    nCount = 0  'oCollection.count
    nCB1Val = 0
    nCB2Val = 0

    Out.Log("create two listeners...")
    oListener1 = createUNOListener("CB1_", "com.sun.star.form.XResetListener")
    oListener2 = createUNOListener("CB2_", "com.sun.star.form.XResetListener")

    ' add listeners to objectif initialized
    if NOT (isNull(oListener1)) then
        oObj.addResetListener(oListener1)
    end if
    if NOT (isNull(oListener2)) then
        oObj.addResetListener(oListener2)
    end if


    Test.StartMethod("addResetListener()")
    oObj.reset()
    wait(1000)
    bOK = bOK AND (nCB1Val = 1) AND (nCB2Val = 1)
    Test.MethodTested("addResetListener()", bOK)

    Test.StartMethod("removeResetListener()")
    Out.Log("removing Listener 2")
    oObj.removeResetListener(oListener2)
    oObj.reset()
    wait(1000)
    bOK = bOK AND (nCB1Val = 2) AND (nCB2Val = 1)
    Test.MethodTested("removeResetListener()", bOK)

    Test.StartMethod("reset()")
    bOK = bOK AND (nCB1Val = 2) AND (nCB2Val = 1)
    Test.MethodTested("reset()", bOK)

    Out.Log("removing Listener 1")
    oObj.removeResetListener(oListener1)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
' callback routine called resetting for listener1
Sub CB1_resetted
    Out.Log("Callback CB1 resetted")
    nCB1Val = nCB1Val + 1
End Sub' callback routine called resetting for listener2

Sub CB2_resetted
    Out.Log("Callback CB2 resetted")
    nCB2Val = nCB2Val + 1
End Sub

' callback routine is invoked before resetting a component.
Function CB1_approveReset() as Boolean
    Out.Log("Callback CB1 approve Reset")
    CB1_approveReset = true
end Function

Function CB2_approveReset() as Boolean
    Out.Log("Callback CB2 approve Reset")
    CB2_approveReset = true
end Function
</script:module>
