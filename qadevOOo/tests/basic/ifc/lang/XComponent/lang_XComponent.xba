<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="lang_XComponent" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: lang_XComponent.xba,v $ 
'*
'*  $Revision: 1.1 $ 
'*
'*  last change:$Date: 2003-01-27 17:50:59 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     Global oComponentInstance As Object it will be disposed

'*************************************************************************


Dim bCB1 As Boolean, bCB2 As Boolean

' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.lang.XEventListener

On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oListener1 as Object, oListener2 As Object

    If isNull(oComponentInstance) Then Out.Log("oComponentInstance is not initialized")

    bCB1 = false
    bCB2 = false

    Out.Log("create two listeners")
    oListener1 = createUNOListener("CB1_", "com.sun.star.lang.XEventListener")
    oListener2 = createUNOListener("CB2_", "com.sun.star.lang.XEventListener")

    ' add listeners to object if initialized
    if NOT(isNull(oListener2)) then
        oComponentInstance.addEventListener(oListener2)
    end if
    if NOT(isNull(oListener1)) then
        oComponentInstance.addEventListener(oListener1)
    end if

    Out.Log("remove Listener2")
    oComponentInstance.removeEventListener(oListener2)

    ' dispose object and check the count
    Test.StartMethod("dispose()")
    bOK = true
    oComponentInstance.dispose()
    bOK = bCB1 AND NOT bCB2
    Test.MethodTested("dispose()", bOK)

    ' check if only one eventlistener-callback was executed
    Test.StartMethod("addEventListener()")
    bOK = bCB1 AND NOT bCB2
    Test.MethodTested("addEventListener()", bOK)

    ' check if there was only one of the listener callbacks executed
    Test.StartMethod("removeEventListener()")
    bOK = bCB1 AND NOT bCB2
    Test.MethodTested("removeEventListener()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
Sub CB1_disposing
    Out.Log("CallBack for Listener1 disposing was called.")
    bCB1 = true
End Sub
Sub CB2_disposing
    Out.Log("CallBack for Listener2 disposing was called.")
    bCB2 = true
End Sub

' $Log: not supported by cvs2svn $
' Revision 1.1  2003/01/15 16:39:49  cn
' NEW: initial version for OpenOffice.org
'
' Revision 1.1  2003/01/06 13:49:53  cn
' NEW: initial version
'
' Revision 1.8  2002/11/19 16:45:22  cn
' CHG: first review before going to OO
'
' Revision 1.7  2002/04/12 14:10:57  cn
' CHG: synchronize
'
' Revision 1.3  2002/03/05 13:39:59  pav
' CHG: header reconstructed
'
' Revision 1.2  2002/01/16 16:53:03  pav
' CHG: reviewed, little changes
'
' ADD: initial by avk

</script:module>