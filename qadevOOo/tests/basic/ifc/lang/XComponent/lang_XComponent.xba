<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="lang_XComponent" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: lang_XComponent.xba,v $
'
'   $Revision: 1.3 $
'
'   last change: $Author: rt $ $Date: 2006-07-25 10:01:52 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     Global oComponentInstance As Object it will be disposed

'*************************************************************************


Dim bCB1 As Boolean, bCB2 As Boolean

' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.lang.XEventListener

On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oListener1 as Object, oListener2 As Object

    If isNull(oComponentInstance) Then Out.Log("oComponentInstance is not initialized")

    bCB1 = false
    bCB2 = false

    Out.Log("create two listeners")
    oListener1 = createUNOListener("CB1_", "com.sun.star.lang.XEventListener")
    oListener2 = createUNOListener("CB2_", "com.sun.star.lang.XEventListener")

    ' add listeners to object if initialized
    if NOT(isNull(oListener2)) then
        oComponentInstance.addEventListener(oListener2)
    end if
    if NOT(isNull(oListener1)) then
        oComponentInstance.addEventListener(oListener1)
    end if

    Out.Log("remove Listener2")
    oComponentInstance.removeEventListener(oListener2)

    ' dispose object and check the count
    Test.StartMethod("dispose()")
    bOK = true
    oComponentInstance.dispose()
    bOK = bCB1 AND NOT bCB2
    Test.MethodTested("dispose()", bOK)

    ' check if only one eventlistener-callback was executed
    Test.StartMethod("addEventListener()")
    bOK = bCB1 AND NOT bCB2
    Test.MethodTested("addEventListener()", bOK)

    ' check if there was only one of the listener callbacks executed
    Test.StartMethod("removeEventListener()")
    bOK = bCB1 AND NOT bCB2
    Test.MethodTested("removeEventListener()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
Sub CB1_disposing
    Out.Log("CallBack for Listener1 disposing was called.")
    bCB1 = true
End Sub
Sub CB2_disposing
    Out.Log("CallBack for Listener2 disposing was called.")
    bCB2 = true
End Sub

</script:module>
