<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="frame_XDispatchProvider" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: frame_XDispatchProvider.xba,v $ 
'*
'*  $Revision: 1.1 $ 
'*
'*  last change:$Date: 2003-01-27 17:49:57 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global dispatchUrl As String

'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.frame.XDispatchProvider
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim url As new com.sun.star.util.URL
    Dim dispatcher As Object
    Dim descriptors(1) As new com.sun.star.frame.DispatchDescriptor
    Dim dispatchers As Variant

    Out.Log("Using Url for dispatch : " + dispatchUrl)

    url.Complete = dispatchUrl

    Dim oURLTransformer As Object
    oURLTransformer = createUnoService("com.sun.star.util.URLTransformer")
    Dim aUrl As Variant
    aUrl = Array(url)
    oURLTransformer.parseStrict(aUrl)

    Test.StartMethod("queryDispatch()")
    dispatcher = oObj.queryDispatch(aUrl(0), "frame", _
        com.sun.star.frame.FrameSearchFlag.ALL)
    bOK = NOT isNull(dispatcher)
    Out.Log("Dispatch is null : " + isNull(dispatcher))
    bOK = bOK AND hasUnoInterfaces(dispatcher, "com.sun.star.frame.XDispatch")
    Test.MethodTested("queryDispatch()", bOK)

    Test.StartMethod("queryDispatches()")
    bOK = true
    descriptors(0).FeatureURL = url
    descriptors(0).FrameName = "Frame1"
    descriptors(0).SearchFlags = com.sun.star.frame.FrameSearchFlag.ALL
    descriptors(1).FeatureURL = url
    descriptors(1).FrameName = "Frame2"
    descriptors(1).SearchFlags = com.sun.star.frame.FrameSearchFlag.ALL
    dispatchers = oObj.queryDispatches(descriptors())
    if isArray(dispatchers) then
       if ubound(descriptors()) &lt;&gt; ubound(dispatchers()) then
          bOK = false
          Out.Log("Number of returned dispatchers : " + _
              ubound(dispatchers()) + " - FAILED")
       endIf
    else
       bOK = false
       Out.Log("Returned value is not Array")
    EndIf

    Test.MethodTested("queryDispatches()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
