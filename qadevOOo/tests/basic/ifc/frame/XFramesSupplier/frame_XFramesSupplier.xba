<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="frame_XFramesSupplier" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: frame_XFramesSupplier.xba,v $ 
'*
'*  $Revision: 1.1 $ 
'*
'*  last change:$Date: 2003-01-27 17:50:11 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit




Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.frame.XFramesSupplier
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Test.StartMethod("getFrames()")
    bOK = true
    Dim frames As Object
    frames = oObj.getFrames()
    Dim cnt As Integer
    if (Not isNull(frames) ) then
        cnt = frames.getCount()
        bOK = cnt &lt;&gt; 0
        Out.log("There are " + cnt + " frames.")
    else
        Out.log("getFrames() returned null !!!")
        bOK = false
    end if
    Dim i As Integer
    for i = 0 to (cnt - 1)
        Dim fr As Object
        fr = frames.getByIndex(i)
        if (isNull(fr)) then
            Out.log("Frame(" + i + ") == null")
            bOK = false
        end if
    next i
    Test.MethodTested("getFrames()", bOK)

    Test.StartMethod("getActiveFrame()")
    bOK = true
    Dim active As Object
    active = oObj.getActiveFrame()
    active.setName("ActiveFrame")
    Dim hasActiveFrame As Boolean
    Dim activeIndex As Integer
    if (isNull(active)) then
        bOK = false
        Out.log("getActiveFrame() returned null")
    else
        hasActiveFrame = false
        for i = 0 to (cnt - 1)
            fr = frames.getByIndex(i)
            if (fr.getName() = "ActiveFrame") then
                hasActiveFrame = true
                activeIndex = i
            end if
        next i
        if (Not hasActiveFrame) then
            Out.log("getActiveFrame() isn't contained in getFrames() collection")
            bOK = false
        end if
    end if
    Test.MethodTested("getActiveFrame()", bOK)

    Test.StartMethod("setActiveFrame()")
    bOK = true
    Dim sFrame As Object
    if (cnt &gt; 1) then
        if (activeIndex &lt;&gt; 0) then
            sFrame = frames.getByIndex(0)
        else
            sFrame = frame.getByIndex(1)
        end if
    else
        sFrame = active
    end if
    sFrame.setName("Frame for set")
    oObj.setActiveFrame(sFrame)
    Dim gFrame As Object
    gFrame = oObj.getActiveFrame()
    if (gFrame.getName() &lt;&gt; "Frame for set") then
        bOK = false
        Out.log("Active frame set is not equal frame get: FAILED")
    end if
    Test.MethodTested("setActiveFrame()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
