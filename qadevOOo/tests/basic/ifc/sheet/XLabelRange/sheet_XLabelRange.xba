<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XLabelRange" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: sheet_XLabelRange.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:27:10 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XLabelRange
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK, bAllOK As Boolean
    Dim oldArea, newArea As Object
    Dim Area As New com.sun.star.table.CellRangeAddress

    Test.StartMethod("getLabelArea()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getLabelArea())
    Test.MethodTested("getLabelArea()", bOK)

    bAllOK = bAllOK AND bOK

    Test.StartMethod("setLabelArea()")
    bOK = true

    Area.Sheet = 0
    Area.StartColumn = 1
    Area.StartRow = 1
    Area.EndColumn = 5
    Area.EndRow = 5

    oldArea = oObj.getLabelArea()
    oObj.setLabelArea(Area)
    newArea = oObj.getLabelArea()
    bOK = bOK AND NOT isNULL(newArea)

    bOK = bOK AND newArea.Sheet = Area.Sheet
    bOK = bOK AND newArea.StartColumn = Area.StartColumn
    bOK = bOK AND newArea.StartRow = Area.StartRow
    bOK = bOK AND newArea.EndColumn = Area.EndColumn
    bOK = bOK AND newArea.EndRow = Area.EndRow

    oObj.setLabelArea(oldArea)
    Test.MethodTested("setLabelArea()", bOK)

    Test.StartMethod("getDataArea()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getDataArea())
    Test.MethodTested("getDataArea()", bOK)

    Test.StartMethod("setDataArea()")
    bOK = true

    Area.Sheet = 0
    Area.StartColumn = 1
    Area.StartRow = 1
    Area.EndColumn = 5
    Area.EndRow = 5

    oldArea = oObj.getDataArea()
    oObj.setDataArea(Area)
    newArea = oObj.getDataArea()
    bOK = bOK AND NOT isNULL(newArea)

    bOK = bOK AND newArea.Sheet = Area.Sheet
    bOK = bOK AND newArea.StartColumn = Area.StartColumn
    bOK = bOK AND newArea.StartRow = Area.StartRow
    bOK = bOK AND newArea.EndColumn = Area.EndColumn
    bOK = bOK AND newArea.EndRow = Area.EndRow

    oObj.setDataArea(oldArea)
    Test.MethodTested("setDataArea()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
