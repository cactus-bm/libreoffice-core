<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XSheetCellCursor" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: sheet_XSheetCellCursor.xba,v $ 
'*
'*  $Revision: 1.1 $ 
'*
'*  last change:$Date: 2003-01-27 17:52:58 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XSheetCellCursor
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim nCols As Integer, nRows As Long
    Dim ResetCols As Integer, ResetRows As Long
    Dim oRange As Variant

    ResetCols = oObj.getColumns().getCount()
    ResetRows = oObj.getRows().getCount()

    Test.StartMethod("collapseToCurrentRegion()")
    bOK = true
    oObj.collapseToCurrentRegion()
    nCols = oObj.getColumns().getCount()
    nRows = oObj.getRows().getCount()
    bOK = bOK AND (nCols &gt; 0) AND (nRows &gt; 0)
    Out.Log("collapseToCurrentRegion(): nCols = " &amp; nCols &amp; "(&gt;0) nRows = " &amp; nRows &amp; "(&gt;0)")
    Test.MethodTested("collapseToCurrentRegion()", bOK)

    'collapseToMergedArea goes into the area. But you must be insite
    ' of one cell of these area
    Test.StartMethod("collapseToMergedArea()")
    bOK = true
    oObj.collapseToSize(5,6)
    oRange = oObj.getCellRangeByPosition(0,0,2,2)
    oRange.merge(true)
    oObj.gotoStart()
    oObj.collapseToMergedArea()
    nCols = oObj.getColumns().getCount()
    nRows = oObj.getRows().getCount()
    bOK = bOK AND (nCols = 3) AND (nRows = 3)
    Out.Log("collapseToMergedArea(): nCols = " &amp; nCols &amp; "(3) nRows = " &amp; nRows &amp; "(3)")
    Test.MethodTested("collapseToMergedArea()", bOK)
    oRange.merge(false)


    Test.StartMethod("collapseToSize()")
    bOK = true
    oObj.collapseToSize(5,6)
    nCols = oObj.getColumns().getCount()
    nRows = oObj.getRows().getCount()
    bOK = bOK AND (nCols = 5 ) AND (nRows = 6)
    Out.Log("collapseToSize(): nCols = " &amp; nCols &amp; "(5) nRows = " &amp; nRows &amp; "(6)")
    Test.MethodTested("collapseToSize()", bOK)

    Test.StartMethod("collapseToCurrentArray()")
    oObj.collapseToSize(5,6)
    oRange = oObj.getCellRangeByPosition(0,0,2,3)
    oRange.setArrayFormula("A1:A3")
    bOK = true
    oObj.collapseToCurrentArray()
    nCols = oObj.getColumns().getCount()
    nRows = oObj.getRows().getCount()
    bOK = bOK AND (nCols = 3) AND (nRows = 4)
    Out.Log("collapseToCurrentArray(): nCols = " &amp; nCols &amp; "(3) nRows = " &amp; nRows &amp; "(4)")
    Test.MethodTested("collapseToCurrentArray()", bOK)
    oRange.setArrayFormula("")


    Test.StartMethod("expandToEntireColumns()")
    bOK = true
    oObj.collapseToSize(1,1)
    oObj.expandToEntireColumns()
    nCols = oObj.getColumns().getCount()
    nRows = oObj.getRows().getCount()
    bOK = bOK AND (nCols = 1) AND (nRows &gt;= 32000)
    Out.Log("expandToEntireColumns(): nCols = " &amp; nCols &amp; "(1) nRows = " &amp; nRows &amp; "(&gt;=32000)")
    Test.MethodTested("expandToEntireColumns()", bOK)

    Test.StartMethod("expandToEntireRows()")
    bOK = true
    oObj.collapseToSize(1,1)
    oObj.expandToEntireRows()
    nCols = oObj.getColumns().getCount()
    nRows = oObj.getRows().getCount()
    bOK = bOK AND (nCols &gt;= 256) AND (nRows = 1)
    Out.Log("expandToEntireRows(): nCols = " &amp; nCols &amp; "(&gt;=256) nRows = " &amp; nRows &amp; "(1)")
    Test.MethodTested("expandToEntireRows()", bOK)


    Out.Log("Reset to old range: " &amp; ResetCols &amp; "," &amp; ResetRows)
    oObj.collapseToSize(ResetCols, ResetRows)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
