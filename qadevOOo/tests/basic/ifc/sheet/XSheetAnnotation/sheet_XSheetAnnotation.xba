<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XSheetAnnotation" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: sheet_XSheetAnnotation.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:29:16 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XSheetAnnotation
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oldVal, newVal, valToSet As Boolean
    Dim vPos As Variant

    Test.StartMethod("getAuthor()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getAuthor()) = 8)
    Test.MethodTested("getAuthor()", bOK)

    Test.StartMethod("getDate()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getDate()) = 8)
    Test.MethodTested("getDate()", bOK)

    Test.StartMethod("getIsVisible()")
    Test.StartMethod("setIsVisible()")
    bOK = true
    oldVal = oObj.getIsVisible()
    Out.Log("value before: " + oldVal)
    if oldVal then 
        valToSet = false
    else
        valToSet = true
    endif
    Out.Log("setting value: " + valToSet)
    oObj.setIsVisible(valToSet)
    newVal = oObj.getIsVisible()
    Out.Log("value after: " + newVal)
    bOK = bOK AND (oObj.getIsVisible() = valToSet)
    Test.MethodTested("getIsVisible()", bOK)
    Test.MethodTested("setIsVisible()", bOK)

    Test.StartMethod("getPosition()")
    bOK = true
    vPos = oObj.getPosition()
    bOK = bOK AND isNumeric(vPos.Column)
    Test.MethodTested("getPosition()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
