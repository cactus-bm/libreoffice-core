<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XAreaLink" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: sheet_XAreaLink.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:21:25 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XAreaLink
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean


    Test.StartMethod("getSourceArea()")
    bOK = true
    Dim cArea As String
    cArea = oObj.getSourceArea()
    bOK = bOK AND NOT isNULL(cArea)
    Test.MethodTested("getSourceArea()", bOK)


    Test.StartMethod("setSourceArea()")
    bOK = true
    Dim oldArea As String
    Dim newArea As String
    oldArea = oObj.getSourceArea()
    newArea = "Sheet0.I6:G8"
    Out.Log("Set SourceArea to '" &amp; newArea &amp; "'")
    oObj.setSourceArea(newArea)
    newArea = oObj.getSourceArea()
    Out.Log("SourceArea is '" &amp; newArea &amp; "'")
    bOK = bOK AND oldArea &lt;&gt; newArea
    oObj.setSourceArea(oldArea)
    Test.MethodTested("setSourceArea()", bOK)

    Test.StartMethod("getDestArea()")
    Dim oArea As Object
    bOK = true
    oArea = oObj.getDestArea()
    bOK = bOK AND NOT isNULL(oArea)
    Test.MethodTested("getDestArea()", bOK)

    Test.StartMethod("setDestArea()")
    Dim sNewArea As New com.sun.star.table.CellRangeAddress
    Dim sOldArea As Object

    bOK = true
    sOldArea = oObj.getDestArea()

    sNewArea.Sheet = sOldArea.Sheet
    sNewArea.StartRow = sOldArea.StartRow + 1
    sNewArea.StartColumn = sOldArea.StartColumn + 1
    sNewArea.EndRow = sOldArea.EndRow + 1
    sNewArea.EndColumn = sOldArea.EndColumn + 1

    oObj.setDestArea(sNewArea)

    bOK = bOK AND NOT isNULL(oObj.getDestArea())
    if (bOK) then
        bOK = bOK AND (sOldArea.Sheet = oObj.getDestArea.Sheet)
        bOK = bOK AND (sOldArea.StartRow = oObj.getDestArea.StartRow - 1)
        bOK = bOK AND (sOldArea.StartColumn = oObj.getDestArea.StartColumn - 1)
        bOK = bOK AND (sOldArea.EndRow = oObj.getDestArea.EndRow - 1)
        bOK = bOK AND (sOldArea.EndColumn = oObj.getDestArea.EndColumn - 1)
    end if

    oObj.setDestArea(sOldArea)

    Test.MethodTested("setDestArea()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
