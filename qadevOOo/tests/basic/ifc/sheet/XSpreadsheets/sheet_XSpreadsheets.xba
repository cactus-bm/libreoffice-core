<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XSpreadsheets" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: sheet_XSpreadsheets.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:33:32 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global nGlobalLong As Long the number of sheets

'*************************************************************************






Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XSpreadsheets
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim l As Integer
    Dim sname As String
    Dim oSheet1, oSheet2 As Object


    Test.StartMethod("insertNewByName()")
    bOK = true
    for l = 1 to nGlobalLong
        sname = cIfcShortName &amp; CStr(l)
        oObj.insertNewByName(sname, l)
        oSheet1 = oObj.getByName(sname)
        oSheet2 = oObj.getByIndex(l)
        bOK = bOK AND NOT isNull(oSheet1)
        bOK = bOK AND NOT isNull(oSheet2)
        if (bOK) then
            bOK = bOK and oSheet1.name = oSheet2.name
        end if
    next l
    Test.MethodTested("insertNewByName()", bOK)

    Test.StartMethod("copyByName()")
    bOK = true
    l = 1
    sname = cIfcShortName &amp; "COPY"
    oObj.copyByName(cIfcShortName &amp; CStr(l), sname, l )
    oSheet1 = oObj.getByName(sname)
    oSheet2 = oObj.getByIndex(l)
    bOK = bOK AND NOT isNull(oSheet1)
    bOK = bOK AND NOT isNull(oSheet2)
    if (bOK) then
        bOK = bOK AND oSheet1.name = oSheet2.name
    end if
    Test.MethodTested("copyByName()", bOK)

    Test.StartMethod("moveByName()")
    bOK = true
    l = 1
    sname = cIfcShortName &amp; "2"
    oObj.moveByName(sname, l)
    oSheet1 = oObj.getByName(sname)
    oSheet2 = oObj.getByIndex(l)
    bOK = bOK AND NOT isNull(oSheet1)
    bOK = bOK AND NOT isNull(oSheet2)
    if (bOK) then
        bOK = bOK AND oSheet1.name = oSheet2.name
    end if
    Out.Log(cIfcShortName &amp; ":" &amp; "#1 - " &amp; bOK)

    sname = cIfcShortName &amp; "COPY"
    l = nGlobalLong + 1
    oObj.moveByName(sname, l)
    l = l - 1
    oSheet1 = oObj.getByName(sname)
    oSheet2 = oObj.getByIndex(l)
    bOK = bOK AND NOT isNull(oSheet1)
    bOK = bOK AND NOT isNull(oSheet2)
    if (bOK) then
        bOK = bOK and oSheet1.name =oSheet2.name
    end if
    Test.MethodTested("moveByName()", bOK)

    nGlobalLong = nGlobalLong * 2 + 1 ' nGlobalLong : 3 default sheets where already there
                                      ' nGlobalLong have been inserted
                                      ' + 1 has been created by Copy
Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
