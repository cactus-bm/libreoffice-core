<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XArrayFormulaRange" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: sheet_XArrayFormulaRange.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:22:03 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XArrayFormulaRange
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim bExpectedException As Boolean

    Test.StartMethod("setArrayFormula()")
    Test.StartMethod("getArrayFormula()")
    bOK = true

    if (cObjectName = "sc.ScTableSheetObj") then
        bExpectedException = true
        oObj.setArrayFormula("=1+2")
        wait(1) ' additional operator should exists here to avoid 
                ' resuming on 'else' after exception handling  
    else
        oObj.setArrayFormula("=1+2")
        bOK = bOK AND (oObj.getArrayFormula() = "{=1+2}")
        Out.Log("2")
    end if

    ' Setting of _empty_ formula should work for all objects.
    bExpectedException = false
    oObj.setArrayFormula("")
    bOK = bOK AND (oObj.getArrayFormula() = "")

    Test.MethodTested("getArrayFormula()", bOK)
    Test.MethodTested("setArrayFormula()", bOK)

Exit Sub
ErrHndl:
    if (bExpectedException) then
        Out.Log("It doesn't make sense to set formula over whole page.")
        Out.Log("Expected exception: " &amp; error)
    else
        Test.Exception()
        bOK = false
    end if
    resume next
End Sub
</script:module>
