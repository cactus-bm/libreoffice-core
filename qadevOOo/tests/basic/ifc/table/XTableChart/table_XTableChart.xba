<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="table_XTableChart" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: table_XTableChart.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:40:53 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.table.XTableChart
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim tAddr(0) As New com.sun.star.table.CellRangeAddress
    Dim objAddr As Object

    Test.StartMethod("getHasColumnHeaders()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getHasColumnHeaders())
    Test.MethodTested("getHasColumnHeaders()", bOK)

    Test.StartMethod("setHasColumnHeaders()")
    bOK = true
    oObj.setHasColumnHeaders(true)
    bOK = bOK AND oObj.getHasColumnHeaders() = true
    oObj.setHasColumnHeaders(false)
    bOK = bOK AND oObj.getHasColumnHeaders() = false
    Test.MethodTested("setHasColumnHeaders()", bOK)

    Test.StartMethod("getHasRowHeaders()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getHasRowHeaders())
    Test.MethodTested("getHasRowHeaders()", bOK)

    Test.StartMethod("setHasRowHeaders()")
    bOK = true
    oObj.setHasRowHeaders(true)
    bOK = bOK AND oObj.getHasRowHeaders()
    oObj.setHasRowHeaders(false)
    bOK = bOK AND oObj.getHasRowHeaders() = false
    Test.MethodTested("setHasRowHeaders()", bOK)

    Test.StartMethod("getRanges()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getRanges())
    Test.MethodTested("getRanges()", bOK)

    Test.StartMethod("setRanges()")
    bOK = true
    tAddr(0).Sheet = 0
    tAddr(0).StartRow = 0
    tAddr(0).StartColumn = 0
    tAddr(0).EndRow = 3
    tAddr(0).EndColumn = 3

    oObj.setRanges(tAddr())
    objAddr = oObj.getRanges()
    bOK = bOK AND NOT isNULL(objAddr)
    if bOK then
        Out.Log("oChart.getRanges() returned array of " &amp; ubound(objAddr) + 1 &amp; " element(s)")
        bOK = bOK AND (ubound(objAddr) &lt;&gt; -1)
    end if
    Test.MethodTested("setRanges()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
