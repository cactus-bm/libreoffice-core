<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="table_XCell" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: table_XCell.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:39:52 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.table.XCell
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim aFormula As String
    Dim aValue As Integer
    Dim aType As Variant

    Test.StartMethod("setFormula()")
    bOK = true
    Out.Log("setFormula(""=2+2"")")
    oObj.setFormula("=2+2")
    Test.MethodTested("setFormula()", bOK)

    Test.StartMethod("getFormula()")
    bOK = true
    aFormula = oObj.getFormula()
    Out.Log("getFormula() returned '" &amp; aFormula &amp; "'")
    bOK = bOK AND inStr(1, aFormula, "2+2")
    Test.MethodTested("getFormula()", bOK)

    Test.StartMethod("getValue()")
    bOK = true
    aValue = oObj.getValue()
    bOK = bOK AND aValue = 4
    Test.MethodTested("getValue()", bOK)

    Test.StartMethod("setValue()")
    bOK = true
    oObj.setValue(10)
    bOK = bOK AND oObj.getValue = 10
    Test.MethodTested("setValue()", bOK)

    Test.StartMethod("getType()")
    bOK = true
    aType = oObj.getType()
    bOK = bOK AND (aType = com.sun.star.table.CellContentType.EMPTY OR _
                   aType = com.sun.star.table.CellContentType.VALUE OR _
                   aType = com.sun.star.table.CellContentType.TEXT  OR _
                   aType = com.sun.star.table.CellContentType.FORMULA)
    Test.MethodTested("getType()", bOK)

    Test.StartMethod("getError()")
    bOK = true
    bOK = bOK AND (oObj.getError() = 0)
    oObj.setFormula("=sqrt(-2)")
    bOK = bOK AND (oObj.getError() &lt;&gt; 0)
    Test.MethodTested("getError()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
