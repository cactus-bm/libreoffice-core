<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="util_XModeSelector" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: util_XModeSelector.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 20:09:25 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.util.XModeSelector
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim i As Integer
    Dim modes As Variant
    Dim oldMode As String, newMode As String, resMode As String

    Test.StartMethod("getSupportedModes()")
    bOK = true
    modes = oObj.getSupportedModes()
    for i = lbound(modes()) to ubound(modes())
        out.Log("  " + modes(i))
    next i
    bOK = bOK AND ubound(modes()) &gt; 0
    Test.MethodTested("getSupportedModes()", bOK)

    Test.StartMethod("supportsMode()")
    bOK = true
    bOK = bOK AND oObj.supportsMode(modes(0))
    Test.MethodTested("supportsMode()", bOK)

    Test.StartMethod("getMode()")
    Test.StartMethod("setMode()")
    bOK = true
    oldMode = oObj.getMode()
    if oldMode = modes(0) then newMode = modes(1) else newMode = modes(0)
    oObj.setMode(newMode)
    resMode = oObj.getMode()
    bOK = bOK AND (newMode = resMode)
    Test.MethodTested("getMode()", bOK)
    Test.MethodTested("setMode()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
