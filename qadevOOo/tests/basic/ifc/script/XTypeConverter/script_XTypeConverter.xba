<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="script_XTypeConverter" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: script_XTypeConverter.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 19:07:39 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.script.XTypeConverter
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oCoreRefl As Object

    oCoreRefl = createUNOService("com.sun.star.reflection.CoreReflection")

    Test.StartMethod("convertTo()")
    bOK = true
    Dim tXInterface As Variant
    Dim tXInterfaceObject As Variant
    Dim cObjTypeName As String
    Dim oObjToConv As Object

    Out.Log("Creating a Type object for XInterface")
    tXInterface = oCoreRefl.forName("com.sun.star.io.XInputStream")
    Out.Log("Created " + tXInterface.Name)

    oObjToConv = createUnoService("com.sun.star.io.Pipe")
    Out.Log("Converting object of type " + oCoreRefl.getType(oObjToConv).Name + " to " + tXInterface.Name)
    tXInterfaceObject = oObj.convertTo(oObjToConv, tXInterface)

    if (isNULL(tXInterfaceObject)) then
        Out.Log("Returned object is NULL!!!")
        bOK = false
    elseif (isEmpty(tXInterfaceObject)) then
        cObjTypeName = "Empty"
    else
        cObjTypeName = oCoreRefl.getType(tXInterfaceObject).Name
    end if

    Out.Log("New object is of type " + cObjTypeName + ".")

    bOK = bOK AND NOT isNULL(tXInterfaceObject)
    bOK = bOK AND inStr(1, cObjTypeName, "XInterface")
    Test.MethodTested("convertTo()", bOK)


    Test.StartMethod("convertToSimpleType()")
    Dim oldType As String
    Dim newType As String
    Dim oldVal As Integer
    Dim newVal

    bOK = true

    oldVal = 65
    oldType = oCoreRefl.getType(oldVal).Name
    newVal = oObj.convertToSimpleType(oldVal, com.sun.star.uno.TypeClass.STRING)
    newType = oCoreRefl.getType(newVal).Name

    bOK = bOK AND newType &lt;&gt; oldType
    bOK = bOK AND inStr(1, newVal, "65")
    Out.Log("Old value is " + oldVal + " of type " + oldType + ", new value is " + _
                             newVal + " of type " + newType + ".")
    Test.MethodTested("convertToSimpleType()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
