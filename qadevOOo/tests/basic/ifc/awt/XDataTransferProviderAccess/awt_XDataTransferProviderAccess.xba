<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="awt_XDataTransferProviderAccess" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: awt_XDataTransferProviderAccess.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 17:55:52 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.awt.XDataTransferProviderAccess
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    ' Here create a window for testing getDragGestureRecognizer(), getDragSource(), getDropTarget() methods
    Dim oWndDescr As new com.sun.star.awt.WindowDescriptor
    Dim oBounds As new com.sun.star.awt.Rectangle
    oWndDescr.Type = com.sun.star.awt.WindowClass.TOP
    oWndDescr.WindowServiceName = ""
    oWndDescr.ParentIndex = -1
    oBounds.X = 10 : oBounds.Y = 20
    oBounds.Width = 110 : oBounds.Height = 120
    oWndDescr.Bounds = oBounds
    with com.sun.star.awt.WindowAttribute
        oWndDescr.WindowAttributes = .CLOSEABLE AND .MOVEABLE AND .SIZEABLE AND .BORDER AND .SHOW
    end with

    Dim oWnd As Object
    oWnd = oObj.createWindow(oWndDescr)

    Test.StartMethod("getDragGestureRecognizer()")
    bOK = true
    Dim oRecognizer As Object
    oRecognizer = oObj.getDragGestureRecognizer(oWnd)
    Out.Log("Recognizer is NULL : " &amp; isNULL(oRecognizer))
    bOK = bOK AND NOT isNULL(oRecognizer)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oRecognizer, "com.sun.star.datatransfer.dnd.XDragGestureRecognizer")
        if (NOT bOK) then Out.Log("Returned object doesn't support XDragGestureRecognizer interface.")
    end if
    Test.MethodTested("getDragGestureRecognizer()", bOK)

    Test.StartMethod("getDragSource()")
    bOK = true
    Dim oDragSource As Object
    oDragSource = oObj.getDragSource(oWnd)
    Out.Log("DragSource is NULL : " &amp; isNULL(oDragSource))
    bOK = bOK AND NOT isNULL(oDragSource)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oDragSource, "com.sun.star.datatransfer.dnd.XDragSource")
        if (NOT bOK) then Out.Log("Returned object doesn't support XDragSource interface.")
    end if
    Test.MethodTested("getDragSource()", bOK)

    Test.StartMethod("getDropTarget()")
    bOK = true
    Dim oDropTarget As Object
    oDropTarget = oObj.getDropTarget(oWnd)
    Out.Log("DropTarget is NULL : " &amp; isNULL(oDropTarget))
    bOK = bOK AND NOT isNULL(oDropTarget)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oDropTarget, "com.sun.star.datatransfer.dnd.XDropTarget")
        if (NOT bOK) then Out.Log("Returned object doesn't support XDropTarget interface.")
    end if
     Test.MethodTested("getDropTarget()", bOK)

    Test.StartMethod("getClipboard()")
    bOK = true
    Dim oClipboard As Object
    oClipboard = oObj.getClipboard("")
    Out.Log("Clipboard is NULL : " &amp; isNULL(oClipboard))
    bOK = bOK AND NOT isNULL(oClipboard)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oClipboard, "com.sun.star.datatransfer.clipboard.XClipboard")
        if (NOT bOK) then Out.Log("Returned object doesn't support XClipboard interface.")
    end if
    Test.MethodTested("getClipboard()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
