<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="awt_XCurrencyField" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: awt_XCurrencyField.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 17:55:22 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.awt.XCurrencyField
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Test.StartMethod("getValue()")
    Dim value As Double
    value = oObj.getValue()
    bOK = True
    Test.MethodTested("getValue()", bOK)

    Test.StartMethod("setValue()")
    oObj.setValue(value + 1.1)
    bOK = oObj.getValue() = (value + 1.1)
    Test.MethodTested("setValue()", bOK)

    Test.StartMethod("getMin()")
    Dim min As Double
    min = oObj.getMin()
    bOK = True
    Test.MethodTested("getMin()", bOK)

    Test.StartMethod("setMin()")
    oObj.setMin(min + 1.1)
    bOK = oObj.getMin() = (min + 1.1)
    Test.MethodTested("setMin()", bOK)

    Test.StartMethod("getMax()")
    Dim max As Double
    max = oObj.getMax()
    bOK = True
    Test.MethodTested("getMax()", bOK)

    Test.StartMethod("setMax()")
    oObj.setMax(max + 1.1)
    bOK = oObj.getMax() = (max + 1.1)
    Test.MethodTested("setMax()", bOK)

    Test.StartMethod("getFirst()")
    Dim first As Double
    first = oObj.getFirst()
    bOK = True
    Test.MethodTested("getFirst()", bOK)

    Test.StartMethod("setFirst()")
    oObj.setFirst(first + 1.1)
    bOK = oObj.getFirst() = first + 1.1
    Test.MethodTested("setFirst()", bOK)

    Test.StartMethod("getLast()")
    Dim last As Double
    last = oObj.getLast()
    bOK = True
    Test.MethodTested("getLast()", bOK)

    Test.StartMethod("setLast()")
    oObj.setLast(last + 1.1)
    bOK = oObj.getLast() = (last + 1.1)
    Test.MethodTested("setLast()", bOK)

    Test.StartMethod("getSpinSize()")
    Dim spinSize As Double
    spinSize = oObj.getSpinSize()
    bOK = True
    Test.MethodTested("getSpinSize()", bOK)

    Test.StartMethod("setSpinSize()")
    oObj.setSpinSize(spinSize + 1.1)
    bOK = oObj.getSpinSize() = (spinSize + 1.1)
    Test.MethodTested("setSpinSize()", bOK)

    Test.StartMethod("getDecimalDigits()")
    Dim digits As Integer
    digits = oObj.getDecimalDigits()
    bOK = True
    Test.MethodTested("getDecimalDigits()", bOK)

    Test.StartMethod("setDecimalDigits()")
    oObj.setDecimalDigits(digits + 1)
    bOK = oObj.getDecimalDigits() = (digits + 1)
    Test.MethodTested("setDecimalDigits()", bOK)

    Test.StartMethod("isStrictFormat()")
    Dim strict As Boolean
    strict = oObj.isStrictFormat()
    bOK = True
    Test.MethodTested("isStrictFormat()", bOK)

    Test.StartMethod("setStrictFormat()")
    oObj.setStrictFormat(Not strict)
    bOK = oObj.isStrictFormat() &lt;&gt; strict
    Test.MethodTested("setStrictFormat()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
