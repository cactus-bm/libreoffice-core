<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="container_XNameReplace" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: container_XNameReplace.xba,v $
'
'   $Revision: 1.3 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 18:18:59 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'      Global cNameToReplace As String 'name of instance to be replased
'      Global oReplaceInstance As Variant 'instance, that will be inserted
'      instead old one

'*************************************************************************

Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.container.XNameReplace
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oOldObject As Object
    Dim cOldObjName As String
    Dim oNewControl As Object
    Dim cNewObjName As String        
    Dim NewAddress As Object
    Dim InstAddress As Object
    Dim cReplInstName As String

    Test.StartMethod("replaceByName()")
    bOK = true

    if (cObjectName = "sc.ScCellRangesObj") then
        oOldObject = oObj.getByName(cNameToReplace)
        InstAddress = oReplaceInstance.getRangeAddress

        oObj.replaceByName(cNameToReplace, oReplaceInstance)

        oNewControl = oObj.getByName(cNameToReplace)
        NewAddress = oNewControl.getRangeAddress

        bOK = bOK AND NewAddress.Sheet = InstAddress.Sheet
        bOK = bOK AND NewAddress.StartColumn = InstAddress.StartColumn
        bOK = bOK AND NewAddress.EndColumn = InstAddress.EndColumn
        bOK = bOK AND NewAddress.StartRow = InstAddress.StartRow
        bOK = bOK AND NewAddress.EndRow = InstAddress.EndRow
        
    elseif typename(oReplaceInstance) = "String" then
        Dim oNewObj as Variant
        Dim oOldObj as Variant
        oOldObj = oObj.getByName(cNameToReplace)
        oObj.replaceByName(cNameToReplace, oReplaceInstance)
        oNewObj = oObj.getByName(cNameToReplace)
        bOK = bOK and not PropertyTester.equals(oOldObj, oNewObj)
    else
        oOldObject = oObj.getByName(cNameToReplace)
        cReplInstName = oReplaceInstance.Name
        Out.Log("ReplaceInstance.name = '" &amp; cReplInstName &amp; "'")
        cOldObjName = oOldObject.Name
        Out.Log("OldObject.name = '" &amp; cOldObjName &amp; "'")

        oObj.replaceByName(cNameToReplace, oReplaceInstance)
        oNewControl = oObj.getByName(cNameToReplace)

        cReplInstName = oReplaceInstance.Name
        Out.Log("ReplaceInstance.name = '" &amp; cReplInstName &amp; "'")
        cNewObjName = oNewControl.Name
        Out.Log("NewObject.name = '" &amp; cNewObjName &amp; "'")

        bOK = bOK AND (oReplaceInstance.Name = cNameToReplace)
    end if

    Test.MethodTested("replaceByName()", bOK)
    
Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
