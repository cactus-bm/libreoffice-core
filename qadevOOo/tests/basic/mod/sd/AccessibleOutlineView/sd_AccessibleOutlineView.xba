<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sd_AccessibleOutlineView" script:language="StarBasic">


'*************************************************************************
'*
'*  $RCSfile: sd_AccessibleOutlineView.xba,v $ 
'*
'*  $Revision: 1.5 $ 
'*
'*  last change:$Date: 2004-03-19 14:32:07 $ 
'*
'*  The Contents of this file are made available subject to the terms of
'*  either of the following licenses
'*
'*         - GNU Lesser General Public License Version 2.1
'*         - Sun Industry Standards Source License Version 1.1
'*
'*  Sun Microsystems Inc., October, 2000
'*
'*  GNU Lesser General Public License Version 2.1
'*  =============================================
'*  Copyright 2000 by Sun Microsystems, Inc.
'*  901 San Antonio Road, Palo Alto, CA 94303, USA
'*
'*  This library is free software; you can redistribute it and/or
'*  modify it under the terms of the GNU Lesser General Public
'*  License version 2.1, as published by the Free Software Foundation.
'*
'*  This library is distributed in the hope that it will be useful,
'*  but WITHOUT ANY WARRANTY; without even the implied warranty of
'*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'*  Lesser General Public License for more details.
'*
'*  You should have received a copy of the GNU Lesser General Public
'*  License along with this library; if not, write to the Free Software
'*  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'*  MA  02111-1307  USA
'*
'*
'*  Sun Industry Standards Source License Version 1.1
'*  =================================================
'*  The contents of this file are subject to the Sun Industry Standards
'*  Source License Version 1.1 (the "License"); You may not use this file
'*  except in compliance with the License. You may obtain a copy of the
'*  License at http://www.openoffice.org/license.html.
'*
'*  Software provided under this License is provided on an "AS IS" basis,
'*  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
'*  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
'*  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
'*  See the License for the specific provisions governing your rights and
'*  obligations concerning the Software.
'*
'*  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
'*
'*  Copyright: 2000 by Sun Microsystems, Inc.
'*
'*  All Rights Reserved.
'*
'*  Contributor(s): _______________________________________
'*
'*
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:
Global oDPn As Variant
Global fireCount as Integer


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' sd.AccessibleOutlineView
'*************************************************************************
On Error Goto ErrHndl
    Dim aSlotID As String
    Dim urls As Variant
    Dim url as new com.sun.star.util.URL
    Dim UrlTransformer As Object, xDispatcher As Object
    Dim oCntr As Object, oWin As Object, xRoot As Object
    Dim oSearchedContext As Object

    oDoc = utils.createImpressDocument(cObjectName)
    oCntr = oDoc.getCurrentController()

    Out.log("Switching to outline view...")
    switchOutlineView(oDoc)
    
    oWin = utils.at_getCurrentWindow(oDoc)
    xRoot = utils.at_getAccessibleObject(oWin)
    oSearchedContext = utils.at_getAccessibleObjectForRole(xRoot, com.sun.star.accessibility.AccessibleRole.DOCUMENT)
    oObj = oSearchedContext
    oDPn = oDoc.getDrawPages()
    fireCount = 0

Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    utils.closeObject(oDoc)
End Sub


' This method is used for XAccessibleEventBroadcaster interface
Sub fireEvent()
    fireCount = fireCount + 1
    Out.log("fire event...")
    Dim oDP as Object
	oDP = oDPn.getByIndex(0)
    addShape(oDP, fireCount * 500, fireCount * 500)
    
    
    wait(500)
End Sub

Sub AddShape(oPage as Object, nPosX as Integer, nPosY as Integer)
    Dim aPoint As New com.sun.star.awt.Point
    Dim aSize As New com.sun.star.awt.Size
    Dim oRectangleShape As Object

    aPoint.x = nPosX
    aPoint.y = nPosY
    aSize.Width = 10000
    aSize.Height = 10000
    oRectangleShape = oDoc.createInstance("com.sun.star.drawing.RectangleShape")
    oRectangleShape.Size = aSize
    oRectangleShape.Position = aPoint
    oRectangleShape.FillColor = RGB(255, 0, 0)
    oPage.add(oRectangleShape)
End Sub

Sub switchOutlineView(xDoc as Object)
On Error Goto ErrHndl

        Dim Contrl as Variant, disp as Variant, transf as Object
        Dim URL as new com.sun.star.util.URL
        Dim noProps()
        Dim res as Boolean
        
        Contrl = xDoc.getCurrentController()
        URL.Complete = "slot:27010"
        transf = createUnoService("com.sun.star.util.URLTransformer")
        res = transf.parseStrict(URL)
        
        out.log("URL parsed :" + res)
        
        disp = Contrl.queryDispatch(URL, "", 0)

        out.log("disp get.")

        disp.dispatch(URL, noProps())
Exit Sub
ErrHndl:
    Test.Exception()
End Sub


</script:module>
