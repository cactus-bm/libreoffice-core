<?xml version="1.0" encoding="UTF-8"?>
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="toolkit_AccessibleList" script:language="StarBasic">

'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: toolkit_AccessibleList.xba,v $
'
'   $Revision: 1.3 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 22:22:16 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************

' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

' "com::sun::star::accessibility::XAccessibleEventBroadcaster#optional"
 ' needs the following Global variables:

' "com::sun::star::accessibility::XAccessibleSelection"
 ' needs the following Global variables:
Global multiSelection As Boolean

Global accButton As Object


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' com.sun.star.toolkit.AccessibleList
'*************************************************************************
On Error Goto ErrHndl
    Dim xController As Object, oWin As Object
    Dim xDispatcher As Object, xRoot As Object
    Dim tk As Object, urlTransformer As Object
    Dim url As New com.sun.star.util.URL
    Dim noProps()

    oDoc = utils.createDocument("swriter", cObjectName)
    tk = createUNOService("com.sun.star.awt.Toolkit")
    wait(500)

    xController = oDoc.getCurrentController()
    urlTransformer = createUNOService("com.sun.star.util.URLTransformer")
    url.Complete = ".uno:HyperlinkDialog"
    urlTransformer.parseStrict(url)
    xDispatcher = xController.queryDispatch(url,"",0)

    if (NOT isNull(xDispatcher)) then
        multiSelection = false
        xDispatcher.dispatch(url, noProps())
        wait(500)
        oWin = tk.getActiveTopWindow
        xRoot = utils.at_getAccessibleObject(oWin)
        accButton = utils.at_getAccessibleObjectForRole(xRoot, _
                  com.sun.star.accessibility.AccessibleRole.PUSH_BUTTON,"Close")
        
        'Selecting 'New Document' tab
        Dim oTree as Object
        oTree = utils.at_getAccessibleObjectForRole(xRoot, _
                                 com.sun.star.accessibility.AccessibleRole.TREE)

        oTree.selectAccessibleChild(3)
        wait(500)

        Out.log("# Getting the ListBox")
        Dim oParent as Object
        oParent = utils.at_getAccessibleObjectForRole(xRoot, _
                            com.sun.star.accessibility.AccessibleRole.PANEL,"",_
                                  "com.sun.star.comp.toolkit.AccessibleListBox")

        Out.log("# Getting the first child")

        oObj = oParent.getAccessibleChild(0)
        
        Out.Log("Implementation name: "+oObj.getImplementationName())

    else
        Out.Log("QueryDispatch FAILED. Cannot open Hyperlink dialog...")
    End If

    
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    if NOT isNull(accButton) then
        accButton.doAccessibleAction(0)
        wait(1000)
    End If
    utils.closeObject(oDoc)
End Sub

Sub fireEvent()
    oObj.grabFocus()
    accButton.grabFocus()
end Sub
</script:module>
