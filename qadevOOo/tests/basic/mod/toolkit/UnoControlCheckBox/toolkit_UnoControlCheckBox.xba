<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="toolkit_UnoControlCheckBox" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: toolkit_UnoControlCheckBox.xba,v $
'
'   $Revision: 1.3 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 22:27:18 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:
Global oComponentInstance As Object
Global oGraphics as Object
Global oContext as Object
Global oWinpeer as Object
Global oToolkit as Object
Global oModel as Object
Global oXWindow as Object
  Global oCtrlShape as Object

Global bIL_itemStateChanged As Boolean
Global oEventItemListener As Object


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' toolkit.UnoControlCheckBox
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oShape1, oShape2, oShape3 As Object
    Dim oCurrCtrl As Object
    Dim oWin, oKit, oDevice As Object
    Dim oDoc2 As Object

    bOK = true

    oDoc = utils.createDocument("swriter", cObjectName)
    oDoc2 = utils.createDocument("swriter", cObjectName &amp; "1")

    oShape1 = createUnoControlShape("CheckBox", "UnoControlCheckBox")
    oShape2 = createUnoControlShape("CheckBox", "UnoControlCheckBox")
    oShape3 = createControlShape("TextField")

    ToolkitTools.addShape(oShape1)
    ToolkitTools.addShape(oShape2)
    ToolkitTools.addShape(oShape3)

    oModel = oShape1.getControl()
    oCurrCtrl = oDoc.getCurrentController()
    oWin = oCurrCtrl.getControl(oModel).getPeer()
    oKit = oWin.getToolkit()
    oDevice = oKit.createScreenCompatibleDevice(200,200)
    oGraphics = oDevice.createGraphics()

    oObj = oCurrCtrl.getControl(oModel)
    oComponentInstance = oDoc.getCurrentcontroller.getControl(oShape2.getControl())
    oContext = oDoc
    oWinpeer = oWin
    oToolkit = oKit
    oXWindow =  oDoc2.getCurrentController().getFrame().getComponentWindow()

    bIL_itemStateChanged = False
    out.log("create listener for item events")
    Dim oIListener As Object
    oIListener = createUnoListener("IL_", "com.sun.star.awt.XItemListener")
    oObj.addItemListener(oIListener)    
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    'Re-open this document to close it successfully
    Dim oDoc2 As Object
    oDoc2 = utils.createDocument("swriter", cObjectName &amp; "1")
    oDoc2.Dispose()
End Sub

Sub IL_itemStateChanged(rEvent As Object)
    bIL_itemStateChanged = True
    Out.Log("CallBack for ItemListener itemStateChanged was called.")
    oEventItemListener = rEvent
End Sub

Sub IL_disposing(sEvent As Object)
End Sub
</script:module>
