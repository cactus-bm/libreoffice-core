<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="xmloff_Draw_XMLContentImporter" script:language="StarBasic">


'*************************************************************************
'
'   OpenOffice.org - a multi-platform office productivity suite
'
'   $RCSfile: xmloff_Draw_XMLContentImporter.xba,v $
'
'   $Revision: 1.2 $
'
'   last change: $Author: rt $ $Date: 2005-09-08 22:41:34 $
'
'   The Contents of this file are made available subject to
'   the terms of GNU Lesser General Public License Version 2.1.
'
'
'     GNU Lesser General Public License Version 2.1
'     =============================================
'     Copyright 2005 by Sun Microsystems, Inc.
'     901 San Antonio Road, Palo Alto, CA 94303, USA
'
'     This library is free software; you can redistribute it and/or
'     modify it under the terms of the GNU Lesser General Public
'     License version 2.1, as published by the Free Software Foundation.
'
'     This library is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'     Lesser General Public License for more details.
'
'     You should have received a copy of the GNU Lesser General Public
'     License along with this library; if not, write to the Free Software
'     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
'     MA  02111-1307  USA
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

' Required for com.sun.star.xml.sax.XDocumentHandler
  Global vXMLData As Variant

' Required for procedure CheckImport
  Global sName1, sName2 As String

' Required for  com.sun.star.document.XImporter:
  Global oSrcDocument As Object


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' xmloff.Draw.XMLContentImporter
'*************************************************************************
On Error Goto ErrHndl
    oDoc = utils.createDocument("sdraw", cObjectName)
    oObj = createUnoService("com.sun.star.comp.Draw.XMLContentImporter")

    oSrcDocument = oDoc
    oObj.setTargetDocument(oDoc)

    sName1 = "NewSlide1"
    sName2 = "NewSlide2"
    vXMLData = Array( _
            Array("start", "office:document", _
                "xmlns:office", "CDATA", "http://openoffice.org/2000/office", _
                "xmlns:draw", "CDATA", "http://openoffice.org/2000/drawing", _
                "office:class", "CDATA", "drawing", _
                "office:version", "CDATA", "1.0"), _
            Array("start", "office:body"), _
            Array("start", "draw:page", _
                "draw:name", "CDATA", sName1, _
                "draw:master-page-name", "CDATA", "Default"), _
            Array("end", "draw:page"), _
            Array("start", "draw:page", _
                "draw:name", "CDATA", sName2, _
                "draw:master-page-name", "CDATA", "Default"), _
            Array("end","draw:page"), _
            Array("end", "draw:page"), _
            Array("end", "office:body"), _
            Array("end", "office:document"))
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Function CheckImport() As Boolean
    Dim i As Integer
    Dim res, res1, res2 As Boolean
    Dim oPages, oPage As Object    
    Dim pageName As String
    out.log("checking of import...")
    res1 = False
    res2 = False
    oPages = oDoc.getDrawPages()
    out.log("Draw pages:")
    For i = 0 to ( oPages.getCount() - 1 )
        oPage = oPages.getByIndex(i)
        pageName = oPage.getName()
        out.log(pageName)
        If pageName = sName1 then
            res1 = True
        EndIf
        If pageName = sName2 then
            res2 = True
        EndIf
    Next i
    res = res1 and res2
    out.log("checking result: " + res)
    CheckImport() = res
End Function
</script:module>
