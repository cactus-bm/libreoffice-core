/*************************************************************************
 *
 *  $RCSfile: extrusioncontrols.src,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: hjs $ $Date: 2004-06-25 12:21:03 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#include "dialogs.hrc"
#include "extrusioncontrols.hrc"

#define MASKCOLOR   MaskColor = Color { Red=0xFFFF; Green=0x0000; Blue=0xFFFF; };

FloatingWindow RID_SVXFLOAT_EXTRUSION_DIRECTION
{
    Border = TRUE ;
    Hide = FALSE ;
    SVLook = TRUE ;
    Sizeable = FALSE ;
    Moveable = TRUE ;
    Closeable = TRUE ;
    Zoomable = TRUE ;

    Text [ de ] = "Extrusionsrichtung" ;
    Text [ en-US ] = "Extrusion Direction" ;

    Image IMG_DIRECTION + DIRECTION_NW
    {
        ImageBitmap = Bitmap { File = "directionnorthwest_22.bmp" ; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_NW
    {
        ImageBitmap = Bitmap { File = "directionnorthwest_22_h.bmp" ; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_N
    {
        ImageBitmap = Bitmap { File = "directionnorth_22.bmp" ; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_N
    {
        ImageBitmap = Bitmap { File = "directionnorth_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_NE
    {
        ImageBitmap = Bitmap { File = "directionnortheast_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_NE
    {
        ImageBitmap = Bitmap { File = "directionnortheast_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_W
    {
        ImageBitmap = Bitmap { File = "directionwest_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_W
    {
        ImageBitmap = Bitmap { File = "directionwest_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_NONE
    {
        ImageBitmap = Bitmap { File = "directionstraight_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_NONE
    {
        ImageBitmap = Bitmap { File = "directionstraight_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_E
    {
        ImageBitmap = Bitmap { File = "directioneast_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_E
    {
        ImageBitmap = Bitmap { File = "directioneast_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_SW
    {
        ImageBitmap = Bitmap { File = "directionsouthwest_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_SW
    {
        ImageBitmap = Bitmap { File = "directionsouthwest_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_S
    {
        ImageBitmap = Bitmap { File = "directionsouth_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_S
    {
        ImageBitmap = Bitmap { File = "directionsouth_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION + DIRECTION_SE
    {
        ImageBitmap = Bitmap { File = "directionsoutheast_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_DIRECTION_H + DIRECTION_SE
    {
        ImageBitmap = Bitmap { File = "directionsoutheast_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_PERSPECTIVE
    {
        ImageBitmap = Bitmap { File = "perspective_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_PERSPECTIVE_H
    {
        ImageBitmap = Bitmap { File = "perspective_16_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_PARALLEL
    {
        ImageBitmap = Bitmap { File = "parallel_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_PARALLEL_H
    {
        ImageBitmap = Bitmap { File = "parallel_16_h.bmp"; };
        MASKCOLOR
    };

    String STR_PERSPECTIVE
    {
        Text [ de ] = "~Perspektive" ;
        Text [ en-US ] = "~Perspective" ;
    };

    String STR_PARALLEL
    {
        Text [ de ] = "P~arallel" ;
        Text [ en-US ] = "P~arallel" ;
    };
    String STR_DIRECTION + DIRECTION_NW
    {
        Text [ de ] = "Extrusion nach Nordwesten";
        Text [ en-US ] = "Extrusion North-West";
    };
    String STR_DIRECTION + DIRECTION_N
    {
        Text [ de ] = "Extrusion nach Norden";
        Text [ en-US ] = "Extrusion North";
    };
    String STR_DIRECTION + DIRECTION_NE
    {
        Text [ de ] = "Extrusion nach Nordosten";
        Text [ en-US ] = "Extrusion North-East";
    };
    String STR_DIRECTION + DIRECTION_W
    {
        Text [ de ] = "Extrusion nach Westen";
        Text [ en-US ] = "Extrusion West";
    };
    String STR_DIRECTION + DIRECTION_NONE
    {
        Text [ de ] = "Extrusion nach hinten";
        Text [ en-US ] = "Extrusion Backwards";
    };
    String STR_DIRECTION + DIRECTION_E
    {
        Text [ de ] = "Extrusion nach Osten";
        Text [ en-US ] = "Extrusion East";
    };
    String STR_DIRECTION + DIRECTION_SW
    {
        Text [ de ] = "Extrusion nach Südwesten";
        Text [ en-US ] = "Extrusion South-West";
    };
    String STR_DIRECTION + DIRECTION_S
    {
        Text [ de ] = "Extrusion nach Süden";
        Text [ en-US ] = "Extrusion South";
    };
    String STR_DIRECTION + DIRECTION_SE
    {
        Text [ de ] = "Extrusion nach Südosten";
        Text [ en-US ] = "Extrusion South-East";
    };
};

FloatingWindow RID_SVXFLOAT_EXTRUSION_DEPTH
{
    Border = TRUE ;
    Hide = FALSE ;
    SVLook = TRUE ;
    Sizeable = FALSE ;
    Moveable = TRUE ;
    Closeable = TRUE ;
    Zoomable = TRUE ;

    Text [ de ] = "Extrusionstiefe" ;
    Text [ en-US ] = "Extrusion Depth" ;

    String STR_CUSTOM
    {
        Text [ de ] = "~Benutzerdefiniert...";
        Text [ en-US ] = "~Custom...";
    };

    String STR_INFINITY
    {
        Text [ de ] = "~Unendlich";
        Text [ en-US ] = "~Infinity";
    };

    Image IMG_DEPTH_0
    {
        ImageBitmap = Bitmap { File = "extrusion0inch_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_DEPTH_0_H
    {
        ImageBitmap = Bitmap { File = "extrusion0inch_16_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_DEPTH_1
    {
        ImageBitmap = Bitmap { File = "extrusion05inch_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_DEPTH_1_H
    {
        ImageBitmap = Bitmap { File = "extrusion05inch_16_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_DEPTH_2
    {
        ImageBitmap = Bitmap { File = "extrusion1inch_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_DEPTH_2_H
    {
        ImageBitmap = Bitmap { File = "extrusion1inch_16_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_DEPTH_3
    {
        ImageBitmap = Bitmap { File = "extrusion2inch_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_DEPTH_3_H
    {
        ImageBitmap = Bitmap { File = "extrusion2inch_16_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_DEPTH_4
    {
        ImageBitmap = Bitmap { File = "extrusion4inch_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_DEPTH_4_H
    {
        ImageBitmap = Bitmap { File = "extrusion4inch_16_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_DEPTH_INFINITY
    {
        ImageBitmap = Bitmap { File = "extrusioninfinity_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_DEPTH_INFINITY_H
    {
        ImageBitmap = Bitmap { File = "extrusioninfinity_16_h.bmp"; };
        MASKCOLOR
    };
};

FloatingWindow RID_SVXFLOAT_EXTRUSION_LIGHTING
{
    Border = TRUE ;
    Hide = FALSE ;
    SVLook = TRUE ;
    Sizeable = FALSE ;
    Moveable = TRUE ;
    Closeable = TRUE ;
    Zoomable = TRUE ;

    Text [ de ] = "Extrusionsbeleuchtung" ;
    Text [ en-US ] = "Extrusion Lighting" ;

    Image IMG_LIGHT_OFF + FROM_TOP_LEFT
    {
        ImageBitmap = Bitmap { File = "lightofffromtopleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_TOP
    {
        ImageBitmap = Bitmap { File = "lightofffromtop_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_TOP_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightofffromtopright_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightofffromleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightofffromright_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_BOTTOM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightofffrombottomleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_BOTTOM
    {
        ImageBitmap = Bitmap { File = "lightofffrombottom_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF + FROM_BOTTOM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightofffrombottomright_22.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHT_OFF_H + FROM_TOP_LEFT
    {
        ImageBitmap = Bitmap { File = "lightofffromtopleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_TOP
    {
        ImageBitmap = Bitmap { File = "lightofffromtop_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_TOP_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightofffromtopright_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightofffromleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightofffromright_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_BOTTOM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightofffrombottomleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_BOTTOM
    {
        ImageBitmap = Bitmap { File = "lightofffrombottom_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_OFF_H + FROM_BOTTOM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightofffrombottomright_22_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHT_ON + FROM_TOP_LEFT
    {
        ImageBitmap = Bitmap { File = "lightonfromtopleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_TOP
    {
        ImageBitmap = Bitmap { File = "lightonfromtop_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_TOP_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightonfromtopright_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightonfromleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightonfromright_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_BOTTOM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightonfrombottomleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_BOTTOM
    {
        ImageBitmap = Bitmap { File = "lightonfrombottom_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON + FROM_BOTTOM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightonfrombottomright_22.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHT_ON_H + FROM_TOP_LEFT
    {
        ImageBitmap = Bitmap { File = "lightonfromtopleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_TOP
    {
        ImageBitmap = Bitmap { File = "lightonfromtop_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_TOP_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightonfromtopright_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightonfromleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightonfromright_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_BOTTOM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightonfrombottomleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_BOTTOM
    {
        ImageBitmap = Bitmap { File = "lightonfrombottom_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_ON_H + FROM_BOTTOM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightonfrombottomright_22_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHT_PREVIEW + FROM_TOP_LEFT
    {
        ImageBitmap = Bitmap { File = "lightfromtopleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_TOP
    {
        ImageBitmap = Bitmap { File = "lightfromtop_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_TOP_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightfromtopright_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightfromleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightfromright_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_FRONT
    {
        ImageBitmap = Bitmap { File = "lightfromfront_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_BOTTOM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightfrombottomleft_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_BOTTOM
    {
        ImageBitmap = Bitmap { File = "lightfrombottom_22.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW + FROM_BOTTOM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightfrombottomright_22.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHT_PREVIEW_H + FROM_TOP_LEFT
    {
        ImageBitmap = Bitmap { File = "lightfromtopleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_TOP
    {
        ImageBitmap = Bitmap { File = "lightfromtop_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_TOP_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightfromtopright_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightfromleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightfromright_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_FRONT
    {
        ImageBitmap = Bitmap { File = "lightfromfront_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_BOTTOM_LEFT
    {
        ImageBitmap = Bitmap { File = "lightfrombottomleft_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_BOTTOM
    {
        ImageBitmap = Bitmap { File = "lightfrombottom_22_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHT_PREVIEW_H + FROM_BOTTOM_RIGHT
    {
        ImageBitmap = Bitmap { File = "lightfrombottomright_22_h.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHTING_BRIGHT
    {
        ImageBitmap = Bitmap { File = "brightlit_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHTING_NORMAL
    {
        ImageBitmap = Bitmap { File = "normallit_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHTING_DIM
    {
        ImageBitmap = Bitmap { File = "dimlit_16.bmp"; };
        MASKCOLOR
    };

    Image IMG_LIGHTING_BRIGHT_H
    {
        ImageBitmap = Bitmap { File = "brightlit_16_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHTING_NORMAL_H
    {
        ImageBitmap = Bitmap { File = "normallit_16_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_LIGHTING_DIM_H
    {
        ImageBitmap = Bitmap { File = "dimlit_16_h.bmp"; };
        MASKCOLOR
    };

    String STR_BRIGHT
    {
        Text [ de ] = "~Hell";
        Text [ en-US ] = "~Bright";
    };

    String STR_NORMAL
    {
        Text [ de ] = "~Normal";
        Text [ en-US ] = "~Normal";
    };

    String STR_DIM
    {
        Text [ de ] = "~Abgeblendet";
        Text [ en-US ] = "~Dim";
    };
};

FloatingWindow RID_SVXFLOAT_EXTRUSION_SURFACE
{
    Border = TRUE ;
    Hide = FALSE ;
    SVLook = TRUE ;
    Sizeable = FALSE ;
    Moveable = TRUE ;
    Closeable = TRUE ;
    Zoomable = TRUE ;

    Text [ de ] = "Extrusionsoberfläche" ;
    Text [ en-US ] = "Extrusion Surface" ;

    String STR_WIREFRAME
    {
        Text [ de ] = "~Drahtrahmen";
        Text [ en-US ] = "~Wire Frame";
    };

    String STR_MATTE
    {
        Text [ de ] = "~Matte";
        Text [ en-US ] = "~Matt";
    };

    String STR_PLASTIC
    {
        Text [ de ] = "~Plastik";
        Text [ en-US ] = "~Plastic";
    };

    String STR_METAL
    {
        Text [ de ] = "Me~tall";
        Text [ en-US ] = "Me~tal";
    };

    Image IMG_WIRE_FRAME
    {
        ImageBitmap = Bitmap { File = "wireframe_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_WIRE_FRAME_H
    {
        ImageBitmap = Bitmap { File = "wireframe_16_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_MATTE
    {
        ImageBitmap = Bitmap { File = "matte_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_MATTE_H
    {
        ImageBitmap = Bitmap { File = "matte_16_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_PLASTIC
    {
        ImageBitmap = Bitmap { File = "plastic_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_PLASTIC_H
    {
        ImageBitmap = Bitmap { File = "plastic_16_h.bmp"; };
        MASKCOLOR
    };
    Image IMG_METAL
    {
        ImageBitmap = Bitmap { File = "metal_16.bmp"; };
        MASKCOLOR
    };
    Image IMG_METAL_H
    {
        ImageBitmap = Bitmap { File = "metal_16_h.bmp"; };
        MASKCOLOR
    };

};

#define WIDTH                       140
#define HEIGHT                      (4 * 3 + 3 * 14)

ModalDialog RID_SVX_MDLG_EXTRUSION_DEPTH
{
    OutputSize = TRUE;
    SVLook = TRUE ;
    Moveable = TRUE;
    Closeable = TRUE;

    Size = MAP_APPFONT( WIDTH, HEIGHT );

    Text [ de ] = "Extrusionstiefe" ;
    Text [ en-US ] = "Extrusion Depth" ;

    FixedText FL_DEPTH
    {
        Pos = MAP_APPFONT ( 3 , 3 ) ;
        Size = MAP_APPFONT ( WIDTH - 50 - 12 , 8 ) ;
        Text [ de ] = "~Wert" ;
        Text [ en-US ] = "~Value" ;
    };
    MetricField MTR_DEPTH
    {
         //HelpId = HID_SD_CTL_FAVORITES ;
        Border = TRUE ;
        Pos = MAP_APPFONT ( 3 , 14 ) ;
        Size = MAP_APPFONT ( WIDTH - 50 - 12, 12 ) ;
        TabStop = TRUE ;
        Repeat = TRUE ;
        Spin = TRUE ;
        Minimum = 0 ;
        Maximum = 338666 ;
        StrictFormat = TRUE ;
        DecimalDigits = 2 ;
        Unit = FUNIT_MM ;
        SpinSize = 10 ;
    };
    OkButton BTN_OK
    {
        Pos = MAP_APPFONT ( WIDTH - 50 - 3 , 1 * 3 + 0 * 14 ) ;
        Size = MAP_APPFONT ( 50, 14 ) ;
        DefButton = TRUE ;
        TabStop = TRUE ;
    };
    CancelButton BTN_CANCEL
    {
        Pos = MAP_APPFONT ( WIDTH - 50 - 3 , 2 * 3 + 1 * 14 ) ;
        Size = MAP_APPFONT ( 50, 14 ) ;
        TabStop = TRUE ;
    };
    HelpButton BTN_HELP
    {
        Pos = MAP_APPFONT ( WIDTH - 50 - 3 , 3 * 3 + 2 * 14 ) ;
        Size = MAP_APPFONT ( 50, 14 ) ;
        TabStop = TRUE ;
    };
};

String RID_SVXSTR_EXTRUSION_COLOR
{
    Text [ de ] = "Extrusion Color";
    Text [ en-US ] = "Extrusion Color";
};

String RID_SVXSTR_DEPTH_0
{
    Text [ de ] = "~0 mm";
    Text [ en-US ] = "~0 mm";
};

String RID_SVXSTR_DEPTH_1
{
    Text [ de ] = "~1 mm";
    Text [ en-US ] = "~1 mm";
};

String RID_SVXSTR_DEPTH_2
{
    Text [ de ] = "~2.5 mm";
    Text [ en-US ] = "~2.5 mm";
};

String RID_SVXSTR_DEPTH_3
{
    Text [ de ] = "~5 mm";
    Text [ en-US ] = "~5 mm";
};

String RID_SVXSTR_DEPTH_4
{
    Text [ de ] = "10 ~mm";
    Text [ en-US ] = "10 ~mm";
};

String RID_SVXSTR_DEPTH_0_INCH
{
    Text [ de ] = "~0 inch";
    Text [ en-US ] = "0 inch";
};

String RID_SVXSTR_DEPTH_1_INCH
{
    Text [ de ] = "0.~5 inch";
    Text [ en-US ] = "0.~5 inch";
};

String RID_SVXSTR_DEPTH_2_INCH
{
    Text [ de ] = "~1 inch";
    Text [ en-US ] = "~1 inch";
};

String RID_SVXSTR_DEPTH_3_INCH
{
    Text [ de ] = "~2 inch";
    Text [ en-US ] = "~2 inch";
};

String RID_SVXSTR_DEPTH_4_INCH
{
    Text [ de ] = "~4 inch";
    Text [ en-US ] = "~4 inch";
};


