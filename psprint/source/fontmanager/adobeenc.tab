/*************************************************************************
 *
 *  $RCSfile: adobeenc.tab,v $
 *
 *  $Revision: 1.1.1.1 $
 *
 *  last change: $Author: pl $ $Date: 2001-05-08 11:45:34 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

struct AdobeConvEntry
{
    sal_Unicode         aUnicode;
    sal_uInt8           aAdobecode;
    const char*         pAdobename;
};

static AdobeConvEntry aAdobeStandardNoneCodes[] =
{
    { 0x00A6, 0, "brokenbar" },
    { 0x00A9, 0, "copyright" },
    { 0x00AC, 0, "logicalnot" },
    { 0x00AE, 0, "registered" },
    { 0x00B1, 0, "plusminus" },
    { 0x00B2, 0, "twosuperior" },
    { 0x00B3, 0, "threesuperior" },
    { 0x00B5, 0, "mu" },
    { 0x00B9, 0, "onesuperior" },
    { 0x00BC, 0, "onequarter" },
    { 0x00BD, 0, "onehalf" },
    { 0x00BE, 0, "threequarters" },
    { 0x00C0, 0, "Agrave" },
    { 0x00C1, 0, "Aacute" },
    { 0x00C2, 0, "Acircumflex" },
    { 0x00C3, 0, "Atilde" },
    { 0x00C4, 0, "Adieresis" },
    { 0x00C5, 0, "Aring" },
    { 0x00C7, 0, "Ccedilla" },
    { 0x00C8, 0, "Egrave" },
    { 0x00C9, 0, "Eacute" },
    { 0x00CA, 0, "Ecircumflex" },
    { 0x00CB, 0, "Edieresis" },
    { 0x00CC, 0, "Igrave" },
    { 0x00CD, 0, "Iacute" },
    { 0x00CE, 0, "Icircumflex" },
    { 0x00CF, 0, "Idieresis" },
    { 0x00D0, 0, "Eth" },
    { 0x00D1, 0, "Ntilde" },
    { 0x00D2, 0, "Ograve" },
    { 0x00D3, 0, "Oacute" },
    { 0x00D4, 0, "Ocircumflex" },
    { 0x00D5, 0, "Otilde" },
    { 0x00D6, 0, "Odieresis" },
    { 0x00D7, 0, "multiply" },
    { 0x00D9, 0, "Ugrave" },
    { 0x00DA, 0, "Uacute" },
    { 0x00DB, 0, "Ucircumflex" },
    { 0x00DC, 0, "Udieresis" },
    { 0x00DD, 0, "Yacute" },
    { 0x00DE, 0, "Thorn" },
    { 0x00E0, 0, "agrave" },
    { 0x00E1, 0, "aacute" },
    { 0x00E2, 0, "acircumflex" },
    { 0x00E3, 0, "atilde" },
    { 0x00E4, 0, "adieresis" },
    { 0x00E5, 0, "aring" },
    { 0x00E7, 0, "ccedilla" },
    { 0x00E8, 0, "egrave" },
    { 0x00E9, 0, "eacute" },
    { 0x00EA, 0, "ecircumflex" },
    { 0x00EB, 0, "edieresis" },
    { 0x00EC, 0, "igrave" },
    { 0x00ED, 0, "iacute" },
    { 0x00EE, 0, "icircumflex" },
    { 0x00EF, 0, "idieresis" },
    { 0x00F0, 0, "eth" },
    { 0x00F1, 0, "ntilde" },
    { 0x00F2, 0, "ograve" },
    { 0x00F3, 0, "oacute" },
    { 0x00F4, 0, "ocircumflex" },
    { 0x00F5, 0, "otilde" },
    { 0x00F6, 0, "odieresis" },
    { 0x00F7, 0, "divide" },
    { 0x00F9, 0, "ugrave" },
    { 0x00FA, 0, "uacute" },
    { 0x00FB, 0, "ucircumflex" },
    { 0x00FC, 0, "udieresis" },
    { 0x00FD, 0, "yacute" },
    { 0x00FE, 0, "thorn" },
    { 0x00FF, 0, "ydieresis" }
};


static const AdobeConvEntry aAdobeStandardConvTable[] =
{
    { 0x0020, 0x20, "space" },
    { 0x0021, 0x21, "exclam" },
    { 0x0022, 0x22, "quotedbl" },
    { 0x0023, 0x23, "numbersign" },
    { 0x0024, 0x24, "dollar" },
    { 0x0025, 0x25, "percent" },
    { 0x0026, 0x26, "ampersand" },
    { 0x0027, 0xA9, "quotesingle" },
    { 0x0028, 0x28, "parenleft" },
    { 0x0029, 0x29, "parenright" },
    { 0x002A, 0x2A, "asterisk" },
    { 0x002B, 0x2B, "plus" },
    { 0x002C, 0x2C, "comma" },
    { 0x002D, 0x2D, "hyphen" },
    { 0x002E, 0x2E, "period" },
    { 0x002F, 0x2F, "slash" },
    { 0x0030, 0x30, "zero" },
    { 0x0031, 0x31, "one" },
    { 0x0032, 0x32, "two" },
    { 0x0033, 0x33, "three" },
    { 0x0034, 0x34, "four" },
    { 0x0035, 0x35, "five" },
    { 0x0036, 0x36, "six" },
    { 0x0037, 0x37, "seven" },
    { 0x0038, 0x38, "eight" },
    { 0x0039, 0x39, "nine" },
    { 0x003A, 0x3A, "colon" },
    { 0x003B, 0x3B, "semicolon" },
    { 0x003C, 0x3C, "less" },
    { 0x003D, 0x3D, "equal" },
    { 0x003E, 0x3E, "greater" },
    { 0x003F, 0x3F, "question" },
    { 0x0040, 0x40, "at" },
    { 0x0041, 0x41, "A" },
    { 0x0042, 0x42, "B" },
    { 0x0043, 0x43, "C" },
    { 0x0044, 0x44, "D" },
    { 0x0045, 0x45, "E" },
    { 0x0046, 0x46, "F" },
    { 0x0047, 0x47, "G" },
    { 0x0048, 0x48, "H" },
    { 0x0049, 0x49, "I" },
    { 0x004A, 0x4A, "J" },
    { 0x004B, 0x4B, "K" },
    { 0x004C, 0x4C, "L" },
    { 0x004D, 0x4D, "M" },
    { 0x004E, 0x4E, "N" },
    { 0x004F, 0x4F, "O" },
    { 0x0050, 0x50, "P" },
    { 0x0051, 0x51, "Q" },
    { 0x0052, 0x52, "R" },
    { 0x0053, 0x53, "S" },
    { 0x0054, 0x54, "T" },
    { 0x0055, 0x55, "U" },
    { 0x0056, 0x56, "V" },
    { 0x0057, 0x57, "W" },
    { 0x0058, 0x58, "X" },
    { 0x0059, 0x59, "Y" },
    { 0x005A, 0x5A, "Z" },
    { 0x005B, 0x5B, "bracketleft" },
    { 0x005C, 0x5C, "backslash" },
    { 0x005D, 0x5D, "bracketright" },
    { 0x005E, 0x5E, "asciicircum" },
    { 0x005F, 0x5F, "underscore" },
    { 0x0060, 0xC1, "grave" },
    { 0x0061, 0x61, "a" },
    { 0x0062, 0x62, "b" },
    { 0x0063, 0x63, "c" },
    { 0x0064, 0x64, "d" },
    { 0x0065, 0x65, "e" },
    { 0x0066, 0x66, "f" },
    { 0x0067, 0x67, "g" },
    { 0x0068, 0x68, "h" },
    { 0x0069, 0x69, "i" },
    { 0x006A, 0x6A, "j" },
    { 0x006B, 0x6B, "k" },
    { 0x006C, 0x6C, "l" },
    { 0x006D, 0x6D, "m" },
    { 0x006E, 0x6E, "n" },
    { 0x006F, 0x6F, "o" },
    { 0x0070, 0x70, "p" },
    { 0x0071, 0x71, "q" },
    { 0x0072, 0x72, "r" },
    { 0x0073, 0x73, "s" },
    { 0x0074, 0x74, "t" },
    { 0x0075, 0x75, "u" },
    { 0x0076, 0x76, "v" },
    { 0x0077, 0x77, "w" },
    { 0x0078, 0x78, "x" },
    { 0x0079, 0x79, "y" },
    { 0x007A, 0x7A, "z" },
    { 0x007B, 0x7B, "braceleft" },
    { 0x007C, 0x7C, "bar" },
    { 0x007D, 0x7D, "braceright" },
    { 0x007E, 0x7E, "asciitilde" },
    { 0x00A1, 0xA1, "exclamdown" },
    { 0x00A2, 0xA2, "cent" },
    { 0x00A3, 0xA3, "sterling" },
    { 0x00A4, 0xA8, "currency" },
    { 0x00A5, 0xA5, "yen" },
    { 0x00A7, 0xA7, "section" },
    { 0x00A8, 0xC8, "dieresis" },
    { 0x00AA, 0xE3, "ordfeminine" },
    { 0x00AB, 0xAB, "guillemotleft" },
    { 0x00AF, 0xC5, "macron" },
    { 0x00B4, 0xC2, "acute" },
    { 0x00B6, 0xB6, "paragraph" },
    { 0x00B7, 0xB4, "periodcentered" },
    { 0x00B8, 0xCB, "cedilla" },
    { 0x00BA, 0xEB, "ordmasculine" },
    { 0x00BB, 0xBB, "guillemotright" },
    { 0x00BF, 0xBF, "questiondown" },
    { 0x00C6, 0xE1, "AE" },
    { 0x00D8, 0xE9, "Oslash" },
    { 0x00DF, 0xFB, "germandbls" },
    { 0x00E6, 0xF1, "ae" },
    { 0x00F8, 0xF9, "oslash" },
    { 0x0131, 0xF5, "dotlessi" },
    { 0x0141, 0xE8, "Lslash" },
    { 0x0142, 0xF8, "lslash" },
    { 0x0152, 0xEA, "OE" },
    { 0x0153, 0xFA, "oe" },
    { 0x0192, 0xA6, "florin" },
    { 0x02C6, 0xC3, "circumflex" },
    { 0x02C7, 0xCF, "caron" },
    { 0x02D8, 0xC6, "breve" },
    { 0x02D9, 0xC7, "dotaccent" },
    { 0x02DA, 0xCA, "ring" },
    { 0x02DB, 0xCE, "ogonek" },
    { 0x02DC, 0xC4, "tilde" },
    { 0x02DD, 0xCD, "hungarumlaut" },
    { 0x2013, 0xB1, "endash" },
    { 0x2014, 0xD0, "emdash" },
    { 0x2018, 0x60, "quoteleft" },
    { 0x2019, 0x27, "quoteright" },
    { 0x201A, 0xB8, "quotesinglbase" },
    { 0x201C, 0xAA, "quotedblleft" },
    { 0x201D, 0xBA, "quotedblright" },
    { 0x201E, 0xB9, "quotedblbase" },
    { 0x2020, 0xB2, "dagger" },
    { 0x2021, 0xB3, "daggerdbl" },
    { 0x2022, 0xB7, "bullet" },
    { 0x2026, 0xBC, "ellipsis" },
    { 0x2030, 0xBD, "perthousand" },
    { 0x2039, 0xAC, "guilsinglleft" },
    { 0x203A, 0xAD, "guilsinglright" },
    { 0x2044, 0xA4, "fraction" },
    { 0xFB01, 0xAE, "fi" },
    { 0xFB02, 0xAF, "fl" },
};

static const AdobeConvEntry aAdobeSymbolConvTable[] =
{
    { 0x0020, 0x20, "space" },
    { 0x0021, 0x21, "exclam" },
    { 0x0023, 0x23, "numbersign" },
    { 0x0025, 0x25, "percent" },
    { 0x0026, 0x26, "ampersand" },
    { 0x0028, 0x28, "parenleft" },
    { 0x0029, 0x29, "parenright" },
    { 0x002B, 0x2B, "plus" },
    { 0x002C, 0x2C, "comma" },
    { 0x002E, 0x2E, "period" },
    { 0x002F, 0x2F, "slash" },
    { 0x0030, 0x30, "zero" },
    { 0x0031, 0x31, "one" },
    { 0x0032, 0x32, "two" },
    { 0x0033, 0x33, "three" },
    { 0x0034, 0x34, "four" },
    { 0x0035, 0x35, "five" },
    { 0x0036, 0x36, "six" },
    { 0x0037, 0x37, "seven" },
    { 0x0038, 0x38, "eight" },
    { 0x0039, 0x39, "nine" },
    { 0x003A, 0x3A, "colon" },
    { 0x003B, 0x3B, "semicolon" },
    { 0x003C, 0x3C, "less" },
    { 0x003D, 0x3D, "equal" },
    { 0x003E, 0x3E, "greater" },
    { 0x003F, 0x3F, "question" },
    { 0x005B, 0x5B, "bracketleft" },
    { 0x005D, 0x5D, "bracketright" },
    { 0x005F, 0x5F, "underscore" },
    { 0x007B, 0x7B, "braceleft" },
    { 0x007C, 0x7C, "bar" },
    { 0x007D, 0x7D, "braceright" },
    { 0x00A9, 0xD3, "copyrightserif" },
    { 0x00A9, 0xE3, "copyrightsans" },
    { 0x00AC, 0xD8, "logicalnot" },
    { 0x00AE, 0xD2, "registeredserif" },
    { 0x00AE, 0xE2, "registeredsans" },
    { 0x00B0, 0xB0, "degree" },
    { 0x00B1, 0xB1, "plusminus" },
    { 0x00D7, 0xB4, "multiply" },
    { 0x00F7, 0xB8, "divide" },
    { 0x0192, 0xA6, "florin" },
    { 0x0391, 0x41, "Alpha" },
    { 0x0392, 0x42, "Beta" },
    { 0x0393, 0x47, "Gamma" },
    { 0x0394, 0x44, "Delta" },
    { 0x0395, 0x45, "Epsilon" },
    { 0x0396, 0x5A, "Zeta" },
    { 0x0397, 0x48, "Eta" },
    { 0x0398, 0x51, "Theta" },
    { 0x0399, 0x49, "Iota" },
    { 0x039A, 0x4B, "Kappa" },
    { 0x039B, 0x4C, "Lambda" },
    { 0x039C, 0x4D, "Mu" },
    { 0x039D, 0x4E, "Nu" },
    { 0x039E, 0x58, "Xi" },
    { 0x039F, 0x4F, "Omicron" },
    { 0x03A0, 0x50, "Pi" },
    { 0x03A1, 0x52, "Rho" },
    { 0x03A3, 0x53, "Sigma" },
    { 0x03A4, 0x54, "Tau" },
    { 0x03A5, 0x55, "Upsilon" },
    { 0x03A6, 0x46, "Phi" },
    { 0x03A7, 0x43, "Chi" },
    { 0x03A8, 0x59, "Psi" },
    { 0x03A9, 0x57, "Omega" },
    { 0x03B1, 0x61, "alpha" },
    { 0x03B2, 0x62, "beta" },
    { 0x03B3, 0x67, "gamma" },
    { 0x03B4, 0x64, "delta" },
    { 0x03B5, 0x65, "epsilon" },
    { 0x03B6, 0x7A, "zeta" },
    { 0x03B7, 0x68, "eta" },
    { 0x03B8, 0x71, "theta" },
    { 0x03B9, 0x69, "iota" },
    { 0x03BA, 0x6B, "kappa" },
    { 0x03BB, 0x6C, "lambda" },
    { 0x03BC, 0x6D, "mu" },
    { 0x03BD, 0x6E, "nu" },
    { 0x03BE, 0x78, "xi" },
    { 0x03BF, 0x6F, "omicron" },
    { 0x03C0, 0x70, "pi" },
    { 0x03C1, 0x72, "rho" },
    { 0x03C2, 0x56, "sigma1" },
    { 0x03C3, 0x73, "sigma" },
    { 0x03C4, 0x74, "tau" },
    { 0x03C5, 0x75, "upsilon" },
    { 0x03C6, 0x66, "phi" },
    { 0x03C7, 0x63, "chi" },
    { 0x03C8, 0x79, "psi" },
    { 0x03C9, 0x77, "omega" },
    { 0x03D1, 0x4A, "theta1" },
    { 0x03D2, 0xA1, "Upsilon1" },
    { 0x03D5, 0x6A, "phi1" },
    { 0x03D6, 0x76, "omega1" },
    { 0x2022, 0xB7, "bullet" },
    { 0x2026, 0xBC, "ellipsis" },
    { 0x2032, 0xA2, "minute" },
    { 0x2033, 0xB2, "second" },
    { 0x203E, 0x60, "radicalex" },
    { 0x2044, 0xA4, "fraction" },
    { 0x2111, 0xC1, "Ifraktur" },
    { 0x2118, 0xC3, "weierstrass" },
    { 0x211C, 0xC2, "Rfraktur" },
    { 0x2122, 0xD4, "trademarkserif" },
    { 0x2122, 0xE4, "trademarksans" },
    { 0x2126, 0x57, "Omega" },
    { 0x2135, 0xC0, "aleph" },
    { 0x2190, 0xAC, "arrowleft" },
    { 0x2191, 0xAD, "arrowup" },
    { 0x2192, 0xAE, "arrowright" },
    { 0x2193, 0xAF, "arrowdown" },
    { 0x2194, 0xAB, "arrowboth" },
    { 0x21B5, 0xBF, "carriagereturn" },
    { 0x21D0, 0xDC, "arrowdblleft" },
    { 0x21D1, 0xDD, "arrowdblup" },
    { 0x21D2, 0xDE, "arrowdblright" },
    { 0x21D3, 0xDF, "arrowdbldown" },
    { 0x21D4, 0xDB, "arrowdblboth" },
    { 0x2200, 0x22, "universal" },
    { 0x2202, 0xB6, "partialdiff" },
    { 0x2203, 0x24, "existential" },
    { 0x2205, 0xC6, "emptyset" },
    { 0x2206, 0x44, "Delta" },
    { 0x2207, 0xD1, "gradient" },
    { 0x2208, 0xCE, "element" },
    { 0x2209, 0xCF, "notelement" },
    { 0x220B, 0x27, "suchthat" },
    { 0x220F, 0xD5, "product" },
    { 0x2211, 0xE5, "summation" },
    { 0x2212, 0x2D, "minus" },
    { 0x2215, 0xA4, "fraction" },
    { 0x2217, 0x2A, "asteriskmath" },
    { 0x221A, 0xD6, "radical" },
    { 0x221D, 0xB5, "proportional" },
    { 0x221E, 0xA5, "infinity" },
    { 0x2220, 0xD0, "angle" },
    { 0x2227, 0xD9, "logicaland" },
    { 0x2228, 0xDA, "logicalor" },
    { 0x2229, 0xC7, "intersection" },
    { 0x222A, 0xC8, "union" },
    { 0x222B, 0xF2, "integral" },
    { 0x2234, 0x5C, "therefore" },
    { 0x223C, 0x7E, "similar" },
    { 0x2245, 0x40, "congruent" },
    { 0x2248, 0xBB, "approxequal" },
    { 0x2260, 0xB9, "notequal" },
    { 0x2261, 0xBA, "equivalence" },
    { 0x2264, 0xA3, "lessequal" },
    { 0x2265, 0xB3, "greaterequal" },
    { 0x2282, 0xCC, "propersubset" },
    { 0x2283, 0xC9, "propersuperset" },
    { 0x2284, 0xCB, "notsubset" },
    { 0x2286, 0xCD, "reflexsubset" },
    { 0x2287, 0xCA, "reflexsuperset" },
    { 0x2295, 0xC5, "circleplus" },
    { 0x2297, 0xC4, "circlemultiply" },
    { 0x22A5, 0x5E, "perpendicular" },
    { 0x22C5, 0xD7, "dotmath" },
    { 0x2320, 0xF3, "integraltp" },
    { 0x2321, 0xF5, "integralbt" },
    { 0x2329, 0xE1, "angleleft" },
    { 0x232A, 0xF1, "angleright" },
    { 0x25CA, 0xE0, "lozenge" },
    { 0x2660, 0xAA, "spade" },
    { 0x2663, 0xA7, "club" },
    { 0x2665, 0xA9, "heart" },
    { 0x2666, 0xA8, "diamond" },
};

static const AdobeConvEntry aAdobeDingBatsTable[] =
{
    { 0x2192, 0xD5, "a161" },
    { 0x2194, 0xD6, "a163" },
    { 0x2195, 0xD7, "a164" },
    { 0x2460, 0xAC, "a120" },
    { 0x2461, 0xAD, "a121" },
    { 0x2462, 0xAE, "a122" },
    { 0x2463, 0xAF, "a123" },
    { 0x2464, 0xB0, "a124" },
    { 0x2465, 0xB1, "a125" },
    { 0x2466, 0xB2, "a126" },
    { 0x2467, 0xB3, "a127" },
    { 0x2468, 0xB4, "a128" },
    { 0x2469, 0xB5, "a129" },
    { 0x25A0, 0x6E, "a73" },
    { 0x25B2, 0x73, "a76" },
    { 0x25BC, 0x74, "a77" },
    { 0x25C6, 0x75, "a78" },
    { 0x2605, 0x48, "a35" },
    { 0x260E, 0x25, "a4" },
    { 0x261B, 0x2A, "a11" },
    { 0x261E, 0x2B, "a12" },
    { 0x2660, 0xAB, "a109" },
    { 0x2663, 0xA8, "a112" },
    { 0x2665, 0xAA, "a110" },
    { 0x2666, 0xA9, "a111" },
    { 0x2701, 0x21, "a1" },
    { 0x2702, 0x22, "a2" },
    { 0x2703, 0x23, "a202" },
    { 0x2704, 0x24, "a3" },
    { 0x2706, 0x26, "a5" },
    { 0x2707, 0x27, "a119" },
    { 0x2708, 0x28, "a118" },
    { 0x2709, 0x29, "a117" },
    { 0x270C, 0x2C, "a13" },
    { 0x270D, 0x2D, "a14" },
    { 0x270E, 0x2E, "a15" },
    { 0x270F, 0x2F, "a16" },
    { 0x2710, 0x30, "a105" },
    { 0x2711, 0x31, "a17" },
    { 0x2712, 0x32, "a18" },
    { 0x2713, 0x33, "a19" },
    { 0x2714, 0x34, "a20" },
    { 0x2715, 0x35, "a21" },
    { 0x2716, 0x36, "a22" },
    { 0x2717, 0x37, "a23" },
    { 0x2718, 0x38, "a24" },
    { 0x2719, 0x39, "a25" },
    { 0x271A, 0x3A, "a26" },
    { 0x271B, 0x3B, "a27" },
    { 0x271C, 0x3C, "a28" },
    { 0x271D, 0x3D, "a6" },
    { 0x271E, 0x3E, "a7" },
    { 0x271F, 0x3F, "a8" },
    { 0x2720, 0x40, "a9" },
    { 0x2721, 0x41, "a10" },
    { 0x2722, 0x42, "a29" },
    { 0x2723, 0x43, "a30" },
    { 0x2724, 0x44, "a31" },
    { 0x2725, 0x45, "a32" },
    { 0x2726, 0x46, "a33" },
    { 0x2727, 0x47, "a34" },
    { 0x2729, 0x49, "a36" },
    { 0x272A, 0x4A, "a37" },
    { 0x272B, 0x4B, "a38" },
    { 0x272C, 0x4C, "a39" },
    { 0x272D, 0x4D, "a40" },
    { 0x272E, 0x4E, "a41" },
    { 0x272F, 0x4F, "a42" },
    { 0x2730, 0x50, "a43" },
    { 0x2731, 0x51, "a44" },
    { 0x2732, 0x52, "a45" },
    { 0x2733, 0x53, "a46" },
    { 0x2734, 0x54, "a47" },
    { 0x2735, 0x55, "a48" },
    { 0x2736, 0x56, "a49" },
    { 0x2737, 0x57, "a50" },
    { 0x2738, 0x58, "a51" },
    { 0x2739, 0x59, "a52" },
    { 0x273A, 0x5A, "a53" },
    { 0x273B, 0x5B, "a54" },
    { 0x273C, 0x5C, "a55" },
    { 0x273D, 0x5D, "a56" },
    { 0x273E, 0x5E, "a57" },
    { 0x273F, 0x5F, "a58" },
    { 0x2740, 0x60, "a59" },
    { 0x2741, 0x61, "a60" },
    { 0x2742, 0x62, "a61" },
    { 0x2743, 0x63, "a62" },
    { 0x2744, 0x64, "a63" },
    { 0x2745, 0x65, "a64" },
    { 0x2746, 0x66, "a65" },
    { 0x2747, 0x67, "a66" },
    { 0x2748, 0x68, "a67" },
    { 0x2749, 0x69, "a68" },
    { 0x274A, 0x6A, "a69" },
    { 0x274B, 0x6B, "a70" },
    { 0x274D, 0x6D, "a72" },
    { 0x274F, 0x6F, "a74" },
    { 0x2750, 0x70, "a203" },
    { 0x2751, 0x71, "a75" },
    { 0x2752, 0x72, "a204" },
    { 0x2756, 0x76, "a79" },
    { 0x2758, 0x78, "a82" },
    { 0x2759, 0x79, "a83" },
    { 0x275A, 0x7A, "a84" },
    { 0x275B, 0x7B, "a97" },
    { 0x275C, 0x7C, "a98" },
    { 0x275D, 0x7D, "a99" },
    { 0x275E, 0x7E, "a100" },
    { 0x2761, 0xA1, "a101" },
    { 0x2762, 0xA2, "a102" },
    { 0x2763, 0xA3, "a103" },
    { 0x2764, 0xA4, "a104" },
    { 0x2765, 0xA5, "a105" },
    { 0x2766, 0xA6, "a106" },
    { 0x2767, 0xA7, "a107" },
    { 0x2776, 0xB6, "a130" },
    { 0x2777, 0xB7, "a131" },
    { 0x2778, 0xB8, "a132" },
    { 0x2779, 0xB9, "a133" },
    { 0x277A, 0xBA, "a134" },
    { 0x277B, 0xBB, "a135" },
    { 0x277C, 0xBC, "a136" },
    { 0x277D, 0xBD, "a137" },
    { 0x277E, 0xBE, "a138" },
    { 0x277F, 0xBF, "a139" },
    { 0x2780, 0xC0, "a140" },
    { 0x2781, 0xC1, "a141" },
    { 0x2782, 0xC2, "a142" },
    { 0x2783, 0xC3, "a143" },
    { 0x2784, 0xC4, "a144" },
    { 0x2785, 0xC5, "a145" },
    { 0x2786, 0xC6, "a146" },
    { 0x2787, 0xC7, "a147" },
    { 0x2788, 0xC8, "a148" },
    { 0x2789, 0xC9, "a149" },
    { 0x278A, 0xCA, "a150" },
    { 0x278B, 0xCB, "a151" },
    { 0x278C, 0xCC, "a152" },
    { 0x278D, 0xCD, "a153" },
    { 0x278E, 0xCE, "a154" },
    { 0x278F, 0xCF, "a155" },
    { 0x2790, 0xD0, "a156" },
    { 0x2791, 0xD1, "a157" },
    { 0x2792, 0xD2, "a158" },
    { 0x2793, 0xD3, "a159" },
    { 0x2794, 0xD4, "a160" },
    { 0x2798, 0xD8, "a196" },
    { 0x2799, 0xD9, "a165" },
    { 0x279A, 0xDA, "a192" },
    { 0x279B, 0xDB, "a166" },
    { 0x279C, 0xDC, "a167" },
    { 0x279D, 0xDD, "a168" },
    { 0x279E, 0xDE, "a169" },
    { 0x279F, 0xDF, "a170" },
    { 0x27A0, 0xE0, "a171" },
    { 0x27A1, 0xE1, "a172" },
    { 0x27A2, 0xE2, "a173" },
    { 0x27A3, 0xE3, "a162" },
    { 0x27A4, 0xE4, "a174" },
    { 0x27A5, 0xE5, "a175" },
    { 0x27A6, 0xE6, "a176" },
    { 0x27A7, 0xE7, "a177" },
    { 0x27A8, 0xE8, "a178" },
    { 0x27A9, 0xE9, "a179" },
    { 0x27AA, 0xEA, "a193" },
    { 0x27AB, 0xEB, "a180" },
    { 0x27AC, 0xEC, "a199" },
    { 0x27AD, 0xED, "a181" },
    { 0x27AE, 0xEE, "a200" },
    { 0x27AF, 0xEF, "a182" },
    { 0x27B1, 0xF1, "a201" },
    { 0x27B2, 0xF2, "a183" },
    { 0x27B3, 0xF3, "a184" },
    { 0x27B4, 0xF4, "a197" },
    { 0x27B5, 0xF5, "a185" },
    { 0x27B6, 0xF6, "a194" },
    { 0x27B7, 0xF7, "a198" },
    { 0x27B8, 0xF8, "a186" },
    { 0x27B9, 0xF9, "a195" },
    { 0x27BA, 0xFA, "a187" },
    { 0x27BB, 0xFB, "a188" },
    { 0x27BC, 0xFC, "a189" },
    { 0x27BD, 0xFD, "a190" },
    { 0x27BE, 0xFE, "a191" },
};
