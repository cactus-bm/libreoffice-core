/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_system_XProxySettings_idl__
#define __com_sun_star_system_XProxySettings_idl__

#include <com/sun/star/uno/RuntimeException.idl>
#include <com/sun/star/uno/XInterface.idl>


module com { module sun { module star { module system {

/** Enables access to different proxy settings. If particular settings are not
    available an empty string will be returned.

    @deprecated
*/

published interface XProxySettings: com::sun::star::uno::XInterface
{
    /** Access to the FTP proxy address.
        @returns
        The address of the FTP proxy server, if any has been specified.
    */
    string getFtpProxyAddress( );

    /** Access to the FTP proxy port.
        @returns
        The port of the FTP proxy server, if any has been specified.
    */
    string getFtpProxyPort( );

    /** Access to the Gopher proxy address.
        @returns
        The address of the gopher proxy server, if any has been specified.
    */
    string getGopherProxyAddress( );

    /** Access to the Gopher proxy port.
        @returns
        The port of the gopher proxy server, if any has been specified.
    */
    string getGopherProxyPort( );

    /** Access to the Http proxy address.
        @returns
        The address of the http proxy server, if any has been specified.
    */
    string getHttpProxyAddress( );

    /** Access to the Http proxy port.
        @returns
        The port of the http proxy server, if any has been specified.
    */
    string getHttpProxyPort( );

    /** Access to the HTTPS proxy address.
        @returns
        The address of the HTTPS proxy server, if any has been specified.
    */
    string getHttpsProxyAddress( );

    /** Access to the HTTPS proxy port.
        @returns
        The port of the HTTPS proxy server, if any has been specified.
    */
    string getHttpsProxyPort( );

    /** Access to the Socks proxy address.
        @returns
        The address of the socks proxy server, if any has been specified.
    */
    string getSocksProxyAddress( );

    /** Access to the Socks proxy port.
        @returns
        The port of the socks proxy server, if any has been specified.
    */
    string getSocksProxyPort( );

    /** Access to the Proxy-Bypass address.
        @returns
        A string of ";" separated addresses for which no proxy server
        should be used.
    */
    string getProxyBypassAddress( );

    /** Either a proxy is enabled or not.
        @returns
        A value of <TRUE/> if a proxy is enabled.
        <p>A value of <FALSE/> if a proxy is disabled.</p>
    */
    boolean isProxyEnabled( );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
