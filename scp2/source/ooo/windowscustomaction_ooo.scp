/*************************************************************************
*
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: windowscustomaction_ooo.scp,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: kz $ $Date: 2006-07-05 21:15:46 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
************************************************************************/

#include "macros.inc"

WindowsCustomAction gid_Customaction_Regmsdocmsidll1
	Name = "Regmsdocmsidll1";
	Typ = "65";
	Source = "reg4msdocmsi.dll";
	Target = "InstallUiSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("ControlEvent", "SetupType", "Next", "DoAction", "Regmsdocmsidll1", "_IsSetupTypeMin = \"Typical\"", "1");
	Assignment2 = ("ControlEvent", "CustomSetup", "Next", "DoAction", "Regmsdocmsidll1", "1", "1");
	Assignment3 = ("ControlCondition", "FileTypeDialog", "CheckBox1", "Disable", "(\!gm_p_Wrt_Bin=2 And \&gm_p_Wrt_Bin=-1) Or (\!gm_p_Wrt_Bin=3 And \&gm_p_Wrt_Bin=2)");
	Assignment4 = ("ControlCondition", "FileTypeDialog", "CheckBox2", "Disable", "(\!gm_p_Calc_Bin=2 And \&gm_p_Calc_Bin=-1) Or (\!gm_p_Calc_Bin=3 And \&gm_p_Calc_Bin=2)");
	Assignment5 = ("ControlCondition", "FileTypeDialog", "CheckBox3", "Disable", "(\!gm_p_Impress_Bin=2 And \&gm_p_Impress_Bin=-1) Or (\!gm_p_Impress_Bin=3 And \&gm_p_Impress_Bin=2)");
End

WindowsCustomAction gid_Customaction_Regmsdocmsidll2
	Name = "Regmsdocmsidll2";
	Typ = "65";
	Source = "reg4msdocmsi.dll";
	Target = "InstallExecSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Regmsdocmsidll3
	Name = "Regmsdocmsidll3";
	Typ = "65";
	Source = "reg4msdocmsi.dll";
	Target = "DeinstallExecSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE\<\>\"\" And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Pythonmsidll1
	Name = "Pythonmsidll1";
	Typ = "65";
	Source = "pythonmsi.dll";
	Target = "InstallExecSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=3 And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Pythonmsidll2
	Name = "Pythonmsidll2";
	Typ = "65";
	Source = "pythonmsi.dll";
	Target = "DeinstallExecSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=2 And \!FEATURETEMPLATE=3 And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Regactivexdll1
	Name = "Regactivexdll1";
	Typ = "65";
	Source = "regactivex.dll";
	Target = "InstallActiveXControl";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "(\&FEATURETEMPLATE=3 Or (\!FEATURETEMPLATE=3 And \&FEATURETEMPLATE=-1)) And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Regactivexdll2
	Name = "Regactivexdll2";
	Typ = "65";
	Source = "regactivex.dll";
	Target = "DeinstallActiveXControl";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=2 And \!FEATURETEMPLATE=3 And Not PATCH", "RemoveExistingProducts");
End

WindowsCustomAction gid_Customaction_Jfregcadll1
	Name = "Jfregcadll1";
	Typ = "65";
	Source = "jfregca.dll";
	Target = "install_jf";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=3 And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Jfregcadll2
	Name = "Jfregcadll2";
	Typ = "65";
	Source = "jfregca.dll";
	Target = "uninstall_jf";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=2 And \!FEATURETEMPLATE=3 And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_sdqsmsidll
	Name = "sdqsmsidll";
	Typ = "65";
	Source = "sdqsmsi.dll";
	Target = "ShutDownQuickstarter";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"ALL\" And Not PATCH", "InstallInitialize");
End

WindowsCustomAction gid_Customaction_qslnkmsidll
	Name = "qslnkmsidll";
	Typ = "65";
	Source = "qslnkmsi.dll";
	Target = "RemoveQuickstarterLink";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"ALL\" And Not PATCH", "sdqsmsidll");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll1
	Name = "Shellextensionsdll1";
	Typ = "65";
	Source = "shlxtmsi.dll";
	Target = "InstallExecSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=3 And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll2
	Name = "Shellextensionsdll2";
	Typ = "65";
	Source = "shlxtmsi.dll";
	Target = "DeinstallExecSequenceEntry";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=2 And \!FEATURETEMPLATE=3 And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Instooofiltmsidll2
	Name = "Instooofiltmsidll";
	Typ = "65";
	Source = "instooofiltmsi.dll";
	Target = "RestartIndexingService";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll3
	Name = "Shellextensionsdll3";
	Typ = "65";
	Source = "shlxtmsi.dll";
	Target = "InstallStartmenuFolderIcon";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll4
	Name = "Shellextensionsdll4";
	Typ = "65";
	Source = "shlxtmsi.dll";
	Target = "DeinstallStartmenuFolderIcon";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"ALL\" And Not PATCH", "qslnkmsidll");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll5
	Name = "Shellextensionsdll5";
	Typ = "321";
	Source = "shlxtmsi.dll";
	Target = "SetProductInstallMode";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "FindRelatedProducts");
	Assignment2 = ("InstallUISequence", "Not REMOVE=\"ALL\" And Not PATCH", "FindRelatedProducts");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll6
	Name = "Shellextensionsdll6";
	Typ = "65";
	Source = "shlxtmsi.dll";
	Target = "RebuildShellIconCache";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not PATCH", "end");
End

WindowsCustomAction gid_Customaction_Shellextensionsdll7
	Name = "Shellextensionsdll7";
	Typ = "65";
	Source = "shlxtmsi.dll";
	Target = "ExecutePostUninstallScript";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"ALL\" And Not PATCH", "InstallValidate");
End

WindowsCustomAction gid_Customaction_RegCleanOld
	Name = "RegCleanOld";
	Typ = "65";
	Source = "regcleanold.dll";
	Target = "CleanCurUserOldSystemRegistryFromSetup";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH And Not ALLUSERS=\"\"", "end");
End

WindowsCustomAction gid_Customaction_Patch_Regpatchactivex_Patchactivexcontrol
	Name = "PatchActiveXControl";
	Typ = "65";
	Source = "regpatchactivex.dll";
	Target = "PatchActiveXControl";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "\&FEATURETEMPLATE=3", "end");
End

WindowsCustomAction gid_Customaction_Patch_SetProductInstallModeAction
	Name = "SetProductInstallModeAction";
	Typ = "321";
	Source = "patchmsi.dll";
	Target = "SetProductInstallMode";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"\"", "FindRelatedProducts");
	Assignment2 = ("InstallUISequence", "REMOVE=\"\"", "FindRelatedProducts");
End

WindowsCustomAction gid_Customaction_Patch_InstallExchangeFiles
	Name = "InstallExchangeFiles";
	Typ = "65";
	Source = "patchmsi.dll";
	Target = "InstallPatchedFiles";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"\"", "behind_InstallFinalize");
	Assignment2 = ("AdminExecuteSequence", "", "behind_InstallFinalize");
End

WindowsCustomAction gid_Customaction_Patch_SetFeatureState
	Name = "SetFeatureState";
	Typ = "65";
	Source = "patchmsi.dll";
	Target = "SetFeatureState";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "REMOVE=\"\"", "InstallValidate");
End

WindowsCustomAction gid_Customaction_Patch_DeinstallExchangeFiles
	Name = "DeinstallExchangeFiles";
	Typ = "65";
	Source = "patchmsi.dll";
	Target = "UninstallPatchedFiles";
	Inbinarytable = 1;
	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"\"", "RemoveIniValues");
End

WindowsCustomAction gid_Customaction_Patch_Shutdownquickstarter
	Name = "ShutDownQuickstarter";
	Typ = "65";
	Source = "patchmsi.dll";
	Target = "ShutDownQuickstarter";
	Inbinarytable = 1;
	Assignment1 = ("ControlEvent", "DestinationFolder", "Next", "DoAction", "ShutDownQuickstarter", "1", "0");
	Assignment2 = ("InstallExecuteSequence", "Not REMOVE=\"\"", "IsolateComponents");
End

WindowsCustomAction gid_Customaction_Patch_Isofficerunning
	Name = "IsOfficeRunning";
	Typ = "65";
	Source = "patchmsi.dll";
	Target = "IsOfficeRunning";
	Inbinarytable = 1;
	Assignment1 = ("ControlEvent", "ReadyToInstall", "InstallNow", "DoAction", "IsOfficeRunning", "1", "1");
	Assignment2 = ("InstallExecuteSequence", "Not REMOVE=\"\"", "RunningOffice");
End

WindowsCustomAction gid_Customaction_Patch_SetUserInstallMode
	Name = "SetUserInstallMode";
	Typ = "65";
	Source = "patchmsi.dll";
	Target = "GetUserInstallMode";
	Inbinarytable = 1;
	Assignment1 = ("ControlEvent", "LicenseAgreement", "Next", "DoAction", "SetUserInstallMode", "1", "1");
	Assignment2 = ("ControlEvent", "InstallChangeFolder", "OK", "DoAction", "SetUserInstallMode", "1", "4");
	Assignment3 = ("ControlCondition", "DestinationFolder", "Next", "Enable", "NOT INVALIDDIRECTORY And NOT PATCHISOLDER And NOT ISWRONGPRODUCT");
	Assignment4 = ("ControlCondition", "DestinationFolder", "Next", "Disable", "INVALIDDIRECTORY Or PATCHISOLDER Or ISWRONGPRODUCT");
	Assignment5 = ("ControlCondition", "DestinationFolder", "LabelStartInstall", "Show", "NOT INVALIDDIRECTORY And NOT PATCHISOLDER And NOT ISWRONGPRODUCT");
	Assignment6 = ("ControlCondition", "DestinationFolder", "LabelInvalidDir", "Show", "INVALIDDIRECTORY");
	Assignment7 = ("ControlCondition", "DestinationFolder", "LabelPatchOlder", "Show", "PATCHISOLDER");
	Assignment8 = ("ControlCondition", "DestinationFolder", "LabelWrongProduct", "Show", "ISWRONGPRODUCT");
	Assignment9 = ("ControlCondition", "DestinationFolder", "LabelStartInstall2", "Show", "NOT INVALIDDIRECTORY And NOT PATCHISOLDER And NOT ISWRONGPRODUCT");
	Assignment10 = ("ControlCondition", "DestinationFolder", "LabelInvalidDir2", "Show", "INVALIDDIRECTORY");
	Assignment11 = ("ControlCondition", "DestinationFolder", "LabelPatchOlder2", "Show", "PATCHISOLDER");
	Assignment12 = ("ControlCondition", "DestinationFolder", "LabelWrongProduct2", "Show", "ISWRONGPRODUCT");
End

WindowsCustomAction gid_Customaction_Langpack_SetUserInstallMode
	Name = "SetUserInstallMode";
	Typ = "65";
	Source = "lngpckinsthlp.dll";
	Target = "GetUserInstallMode";
	Inbinarytable = 1;
	Assignment1 = ("ControlEvent", "LicenseAgreement", "Next", "DoAction", "SetUserInstallMode", "1", "1");
	Assignment2 = ("ControlEvent", "InstallChangeFolder", "OK", "DoAction", "SetUserInstallMode", "1", "4");
	Assignment3 = ("ControlCondition", "DestinationFolder", "Next", "Enable", "NOT INVALIDDIRECTORY And NOT ISWRONGPRODUCT");
	Assignment4 = ("ControlCondition", "DestinationFolder", "Next", "Disable", "INVALIDDIRECTORY Or ISWRONGPRODUCT");
	Assignment5 = ("ControlCondition", "DestinationFolder", "LabelStartInstall", "Show", "NOT INVALIDDIRECTORY And NOT ISWRONGPRODUCT");
	Assignment6 = ("ControlCondition", "DestinationFolder", "LabelInvalidDir", "Show", "INVALIDDIRECTORY");
	Assignment7 = ("ControlCondition", "DestinationFolder", "LabelWrongProduct", "Show", "ISWRONGPRODUCT");
	Assignment8 = ("ControlCondition", "DestinationFolder", "LabelStartInstall2", "Show", "NOT INVALIDDIRECTORY And NOT ISWRONGPRODUCT");
	Assignment9 = ("ControlCondition", "DestinationFolder", "LabelInvalidDir2", "Show", "INVALIDDIRECTORY");
	Assignment10 = ("ControlCondition", "DestinationFolder", "LabelWrongProduct2", "Show", "ISWRONGPRODUCT");
End

WindowsCustomAction gid_Customaction_MigrateInstallPath
      Name = "MigrateInstallPath";
      Typ = "321";
      Source = "shlxtmsi.dll";
      Target = "MigrateInstallPath";
      Inbinarytable = 1;
      Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "CostInitialize");
      Assignment2 = ("InstallUISequence", "Not REMOVE=\"ALL\" And Not PATCH", "CostInitialize");
End
