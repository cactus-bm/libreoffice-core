BigInt::BigInt(unsigned int)
CalcUnoApiTest::CalcUnoApiTest(rtl::OUString const&)
Chart2ExportTest::testFdo74115WallGradientFill()
ConfigurationAccess::getPath(rtl::OUString const&)
DocxSdrExport::getFlyFrameGraphic()
DocxSdrExport::setFlyFrameGraphic(bool)
DocxSdrExport::setFrameBtLr(bool)
EditEngine::IsIdleFormatterActive() const
FillAttributes::FillAttributes()
FillAttributes::getFillGradientAttribute() const
GDriveDocument::GDriveDocument(GDriveSession*)
GDriveFolder::GDriveFolder(GDriveSession*)
GDriveProperty::GDriveProperty()
GDriveSession::GDriveSession()
Json::Json(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, Json, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Json> > > const&)
Json::Json(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::shared_ptr<libcmis::Property>, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::shared_ptr<libcmis::Property> > > > const&)
Json::swap(Json&)
MenuBar::AddMenuBarButton(Image const&, Link const&, rtl::OUString const&, unsigned short)
MenuBar::GetMenuBarButtonRectPixel(unsigned short)
MenuBar::RemoveMenuBarButton(unsigned short)
MenuBar::SetMenuBarButtonHighlightHdl(unsigned short, Link const&)
OAuth2Handler::OAuth2Handler()
OAuth2Handler::getAccessToken()
OutputDevice::GetCanvas() const
OutputDevice::LogicToLogic(basegfx::B2DPolyPolygon const&, MapMode const&, MapMode const&)
OutputDevice::LogicToPixel(Region const&, MapMode const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolygon const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolygon const&, MapMode const&) const
OutputDevice::PixelToLogic(Region const&, MapMode const&) const
SalGraphics::drawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*)
ScBitMaskCompressedArray<int, unsigned char>::GetFirstForCondition(int, int, unsigned char const&, unsigned char const&) const
ScDocument::CreateFormatTable() const
ScDocument::GetRowFlagsArray(short) const
ScExtIButton::GetSelected() const
ScFormulaCellGroup::scheduleCompilation()
ScVbaFormat<ooo::vba::excel::XStyle>::getAddIndent()
ScVbaFormat<ooo::vba::excel::XStyle>::setAddIndent(com::sun::star::uno::Any const&)
SdrItemBrowser::ForceParent()
SdrItemBrowser::SdrItemBrowser(SdrView&)
SdrTextObj::NbcSetAutoGrowHeight(bool)
SdrTextObj::NbcSetAutoGrowWidth(bool)
SdrTextObj::NbcSetFitToSize(SdrFitToSizeType)
SdrTextObj::NbcSetMaxTextFrameHeight(long)
SdrTextObj::NbcSetMaxTextFrameWidth(long)
SfxAppMenuControl_Impl::RegisterControl(unsigned short, SfxModule*)
SfxInt64Item::SetValue(long)
SfxVisibilityItem::GetValueCount() const
StyleSettings::SetActiveColor2(Color const&)
StyleSettings::SetCursorSize(long)
StyleSettings::SetDeactiveColor2(Color const&)
StyleSettings::SetFloatTitleHeight(long)
StyleSettings::SetHideDisabledMenuItems(bool)
StyleSettings::SetSpinSize(long)
StyleSettings::SetTitleHeight(long)
StyleSettings::SetUseFlatBorders(bool)
StyleSettings::SetUseFlatMenus(bool)
SvpSalInstance::PostedEventsInQueue()
SvtListener::IsListening(SvtBroadcaster&) const
SvxNumberFormatShell::IsAdded_Impl(unsigned long)
SwAccessibleField::SwAccessibleField(SwField*, SwAccessibleParagraph*, short)
SwAccessibleMap::FireColumnChangeEvent(unsigned short, unsigned short)
SwAccessibleMap::FirePageChangeEvent(unsigned short, unsigned short)
SwAccessibleMap::FireSectionChangeEvent(unsigned short, unsigned short)
SwExtraRedlineTbl::GetPos(SwExtraRedline const*) const
SwExtraRedlineTbl::Remove(unsigned short)
TextDoc::IsValidPaM(TextPaM const&)
UnoApiTest::closeDocument(com::sun::star::uno::Reference<com::sun::star::lang::XComponent>)
VCLXGraphics::getFillColor()
VCLXGraphics::getFont()
VCLXGraphics::getLineColor()
VCLXGraphics::getRasterOp()
VCLXGraphics::getTextColor()
VCLXGraphics::getTextFillColor()
XFillStyleItem::XFillStyleItem(XFillStyle, unsigned short)
XGradient::VclGradient() const
apitest::CellProperties::testRotateReference()
apitest::CellProperties::testVertJustify()
apitest::DataPilotField::testAutoShowInfo()
apitest::DataPilotField::testIsGroupField()
apitest::DataPilotField::testLayoutInfo()
apitest::DataPilotField::testReference()
apitest::DataPilotField::testSortInfo()
apitest::XCellRangeData::testGetDataArray()
apitest::XCellRangeData::testSetDataArray()
apitest::XCellRangeReferrer::testGetReferredCells()
apitest::XCellRangesQuery::testQueryColumnDifference()
apitest::XCellRangesQuery::testQueryContentDifference()
apitest::XCellRangesQuery::testQueryEmptyCells()
apitest::XCellRangesQuery::testQueryFormulaCells()
apitest::XCellRangesQuery::testQueryIntersection()
apitest::XCellRangesQuery::testQueryRowDifference()
apitest::XCellRangesQuery::testQueryVisibleCells()
apitest::XDataPilotDescriptor::testGetColumnFields()
apitest::XDataPilotDescriptor::testGetDataFields()
apitest::XDataPilotDescriptor::testGetDataPilotFields()
apitest::XDataPilotDescriptor::testGetFilterDescriptor()
apitest::XDataPilotDescriptor::testGetHiddenFields()
apitest::XDataPilotDescriptor::testGetPageFields()
apitest::XDataPilotDescriptor::testGetRowFields()
apitest::XDataPilotDescriptor::testSourceRange()
apitest::XDataPilotDescriptor::testTag()
apitest::XDataPilotFieldGrouping::testCreateDateGroup()
apitest::XDataPilotFieldGrouping::testCreateNameGroup()
apitest::XDataPilotTable2::testGetDrillDownData()
apitest::XDataPilotTable2::testGetOutputRangeByType()
apitest::XDataPilotTable2::testGetPositionData()
apitest::XDataPilotTable2::testInsertDrillDownSheet()
apitest::XDataPilotTable::testGetOutputRange()
apitest::XDataPilotTable::testRefresh()
apitest::XDatabaseRange::testDataArea()
apitest::XDatabaseRange::testGetFilterDescriptor()
apitest::XDatabaseRange::testGetImportDescriptor()
apitest::XDatabaseRange::testGetSortDescriptor()
apitest::XDatabaseRange::testGetSubtotalDescriptor()
apitest::XDatabaseRange::testRefresh()
apitest::XElementAccess::testGetElementType()
apitest::XElementAccess::testHasElements()
apitest::XGoalSeek::testSeekGoal()
apitest::XIndexAccess::XIndexAccess(int)
apitest::XIndexAccess::testGetByIndex()
apitest::XIndexAccess::testGetByIndexException()
apitest::XIndexAccess::testGetCount()
apitest::XNameContainer::XNameContainer()
apitest::XNameContainer::XNameContainer(rtl::OUString const&)
apitest::XNameContainer::testRemoveByName()
apitest::XNameReplace::testReplaceByName()
apitest::XNamed::testGetName()
apitest::XNamed::testSetName()
apitest::XNamedRange::testGetContent()
apitest::XNamedRange::testGetReferencePosition()
apitest::XNamedRange::testGetType()
apitest::XNamedRange::testSetContent()
apitest::XNamedRange::testSetReferencePosition()
apitest::XNamedRange::testSetType()
apitest::XNamedRanges::XNamedRanges()
apitest::XNamedRanges::XNamedRanges(rtl::OUString const&)
apitest::XNamedRanges::testAddNewByName()
apitest::XNamedRanges::testAddNewFromTitles()
apitest::XNamedRanges::testOutputList()
apitest::XNamedRanges::testRemoveByName()
apitest::XPrintAreas::testSetAndGetPrintTitleColumns()
apitest::XPrintAreas::testSetAndGetPrintTitleRows()
apitest::XPropertySet::PropsToTest::PropsToTest()
apitest::XPropertySet::testAddPropertyChangeListener()
apitest::XPropertySet::testAddVetoableChangeListener()
apitest::XPropertySet::testGetPropertyValue()
apitest::XPropertySet::testRemovePropertyChangeListener()
apitest::XPropertySet::testRemoveVetoableChangeListener()
apitest::XPropertySet::testSetPropertyValue()
apitest::XReplaceable::testCreateReplaceDescriptor()
apitest::XReplaceable::testReplaceAll()
apitest::XSearchable::testFindAll()
apitest::XSearchable::testFindFirst()
apitest::XSearchable::testFindNext()
apitest::XSheetAnnotation::testGetAuthor()
apitest::XSheetAnnotation::testGetDate()
apitest::XSheetAnnotation::testGetIsVisible()
apitest::XSheetAnnotation::testGetPosition()
apitest::XSheetAnnotation::testSetIsVisible()
apitest::XSheetAnnotations::testCount()
apitest::XSheetAnnotations::testInsertNew()
apitest::XSheetAnnotations::testRemoveByIndex()
apitest::XSheetOutline::testAutoOutline()
apitest::XSheetOutline::testClearOutline()
apitest::XSheetOutline::testGroup()
apitest::XSheetOutline::testHideDetail()
apitest::XSheetOutline::testShowDetail()
apitest::XSheetOutline::testShowLevel()
apitest::XSheetOutline::testUngroup()
apitest::XSpreadsheetDocument::testGetSheets()
apitest::XSpreadsheets2::XSpreadsheets2()
apitest::XSpreadsheets2::testImportCellStyle()
apitest::XSpreadsheets2::testImportFormulaBasicMath()
apitest::XSpreadsheets2::testImportFormulaWithNamedRange()
apitest::XSpreadsheets2::testImportNamedRangeDefinedInSource()
apitest::XSpreadsheets2::testImportNamedRangeRedefinedInSource()
apitest::XSpreadsheets2::testImportNewNamedRange()
apitest::XSpreadsheets2::testImportOverExistingNamedRange()
apitest::XSpreadsheets2::testImportString()
apitest::XSpreadsheets2::testImportValue()
apitest::XSpreadsheets2::testImportedSheetNameAndIndex()
apitest::XText::testInsertRemoveTextContent()
apitest::XTextContent::testAttach()
apitest::XTextContent::testGetAnchor()
apitest::XTextField::testGetPresentation()
basegfx::tools::containsOnlyHorizontalAndVerticalEdges(basegfx::B2DPolyPolygon const&)
basegfx::tools::equal(basegfx::B2DPolygon const&, basegfx::B2DPolygon const&, double const&)
basegfx::tools::equal(basegfx::B3DPolygon const&, basegfx::B3DPolygon const&, double const&)
canvas::createSurfaceProxyManager(boost::shared_ptr<canvas::IRenderModule> const&)
chart::GL3DBarChartDialogController::GL3DBarChartDialogController()
comphelper::detail::ConfigurationWrapper::getGroupReadWrite(boost::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::getLocalizedPropertyValue(rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::setLocalizedPropertyValue(boost::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&, com::sun::star::uno::Any const&) const
connectivity::OSQLParseNode::showParseTree(rtl::OUString&) const
connectivity::file::OStatement_Base::reset()
connectivity::firebird::release(int&, cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface>&, com::sun::star::lang::XComponent*)
connectivity::sdbcx::OGroup::OGroup(bool)
connectivity::sdbcx::OGroup::OGroup(rtl::OUString const&, bool)
oglcanvas::CanvasHelper::flush() const
oglcanvas::TextLayout::draw(com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&) const
oox::xls::BiffDrawingObjectBase::BiffDrawingObjectBase(oox::xls::WorksheetHelper const&)
sc::CLBuildKernelThread::CLBuildKernelThread()
sc::CLBuildKernelThread::consume()
sc::CLBuildKernelThread::finish()
sc::CLBuildKernelThread::produce()
sd::LeftDrawPaneShell::RegisterInterface(SfxModule*)
sd::LeftImpressPaneShell::RegisterInterface(SfxModule*)
sdr::contact::ViewObjectContactOfOpenGLObj::getWindow() const
std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >::_Rb_tree(std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >&&)
std::auto_ptr<formula::FormulaTokenArray>::auto_ptr(std::auto_ptr<formula::FormulaTokenArray>&)
std::auto_ptr<formula::FormulaTokenArray>::auto_ptr(std::auto_ptr_ref<formula::FormulaTokenArray>)
std::vector<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread>, std::allocator<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread> > >::reserve(unsigned long)
svt::AssignmentPersistentData::getInt32Property(char const*) const
utl::extractTime(com::sun::star::util::DateTime const&, com::sun::star::util::Time&)
vcl::MapChar(vcl::_TrueTypeFont*, unsigned short, bool)
writerfilter::dmapper::SdtHelper::appendToInteropGrabBag(rtl::OUString const&, com::sun::star::uno::Any const&)
