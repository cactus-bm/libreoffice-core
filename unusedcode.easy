BigInt::BigInt(unsigned int)
CalcUnoApiTest::CalcUnoApiTest(rtl::OUString const&)
Chart2ExportTest::testFdo74115WallGradientFill()
ComboBox::GetMRUCount() const
ConfigurationAccess::getPath(rtl::OUString const&)
DocxSdrExport::getFlyFrameGraphic()
DocxSdrExport::setFlyFrameGraphic(bool)
DocxSdrExport::setFrameBtLr(bool)
EditEngine::IsIdleFormatterActive() const
EditSelection::IsInvalid() const
FileStream::FileStream()
FileStream::close()
FileStream::createTempFile(rtl::OString const&)
FileStream::write(void const*, unsigned long)
GDriveDocument::GDriveDocument(GDriveSession*)
GDriveFolder::GDriveFolder(GDriveSession*)
GDriveProperty::GDriveProperty()
GDriveSession::GDriveSession()
Json::Json(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, Json, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Json> > > const&)
Json::Json(std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::shared_ptr<libcmis::Property>, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::shared_ptr<libcmis::Property> > > > const&)
Json::swap(Json&)
ListBox::GetMRUCount() const
MenuBar::AddMenuBarButton(Image const&, Link const&, rtl::OUString const&, unsigned short)
MenuBar::GetMenuBarButtonRectPixel(unsigned short)
MenuBar::RemoveMenuBarButton(unsigned short)
MenuBar::SetMenuBarButtonHighlightHdl(unsigned short, Link const&)
OAuth2Handler::OAuth2Handler()
OAuth2Handler::getAccessToken()
Options::Options()
Options::getInputFiles()
Options::getOption(rtl::OString const&) const
Options::getProgramName() const
Options::isValid(rtl::OString const&) const
OutputDevice::GetCanvas() const
OutputDevice::LogicToLogic(basegfx::B2DPolyPolygon const&, MapMode const&, MapMode const&)
OutputDevice::LogicToPixel(Region const&, MapMode const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolygon const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolygon const&, MapMode const&) const
OutputDevice::PixelToLogic(Region const&, MapMode const&) const
SalGraphics::drawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*)
ScDocument::CreateFormatTable() const
ScExtIButton::GetSelected() const
ScSimpleRefDlg::GetRefString() const
ScTable::GetCellCount(short) const
ScVbaFormat<ooo::vba::excel::XStyle>::getAddIndent()
ScVbaFormat<ooo::vba::excel::XStyle>::setAddIndent(com::sun::star::uno::Any const&)
SdrItemBrowser::ForceParent()
SdrItemBrowser::SdrItemBrowser(SdrView&)
SfxAcceleratorConfigPage::Create(Window*, SfxItemSet const&)
SfxAppMenuControl_Impl::RegisterControl(unsigned short, SfxModule*)
SfxBindings::GetSlot(unsigned short)
SfxBindings::GetSystemWindow() const
SfxDispatcher::IsOnTop(SfxShell const&)
SfxGrabBagItem::SetGrabBag(std::map<rtl::OUString, com::sun::star::uno::Any, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Any> > > const&)
SfxItemPool::GetMasterPool() const
SimpleErrorHandler::SimpleErrorHandler()
SmFontPickList::Contains(Font const&) const
SmParser::Insert(rtl::OUString const&, int)
SotFactory::Find(SvGlobalName const&)
StyleSettings::SetActiveColor2(Color const&)
StyleSettings::SetCursorSize(long)
StyleSettings::SetDeactiveColor2(Color const&)
StyleSettings::SetFloatTitleHeight(long)
StyleSettings::SetHideDisabledMenuItems(bool)
StyleSettings::SetSpinSize(long)
StyleSettings::SetTitleHeight(long)
StyleSettings::SetUseFlatBorders(bool)
StyleSettings::SetUseFlatMenus(bool)
SvdProgressInfo::ReportError()
SvpSalInstance::PostedEventsInQueue()
SvtAccessibilityOptions::GetColorValueSetColumnCount() const
SvtAccessibilityOptions::GetEdgeBlending() const
SvtAccessibilityOptions::GetListBoxMaximumLineCount() const
SvtAccessibilityOptions::GetPreviewUsesCheckeredBackground() const
SvtAccessibilityOptions::SetColorValueSetColumnCount(short)
SvtAccessibilityOptions::SetEdgeBlending(short)
SvtAccessibilityOptions::SetListBoxMaximumLineCount(short)
SvtAccessibilityOptions::SetPreviewUsesCheckeredBackground(unsigned char)
SvtIconChoiceCtrl::SetEntryTextMode(SvxIconChoiceCtrlTextMode, SvxIconChoiceCtrlEntry*)
SvtListener::IsListening(SvtBroadcaster&) const
SvxDistributePage::GetRanges()
SvxNumRule::Create(SvStream&)
SvxNumberFormat::Create(SvStream&)
SvxNumberFormatShell::IsAdded_Impl(unsigned long)
SvxRectCtlAccessibleContext::FireAccessibleEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
SwAccessibleField::SwAccessibleField(SwField*, SwAccessibleParagraph*, short)
SwAccessibleParagraph::GetTOCLevel()
SwAccessiblePortionData::GetAttrFldType(int)
SwAccessibleTable::SetTableData(SwAccessibleTableData_Impl*)
SwCntntFrm::DelFrms(SwCntntNode const&)
SwExtraRedlineTbl::Contains(SwExtraRedline const*) const
SwExtraRedlineTbl::Remove(SwExtraRedline const*)
SwPostItField::GetByName(SwDoc*, rtl::OUString const&)
SwViewImp::FireColumnChangeEvent(unsigned short, unsigned short)
SwViewImp::FirePageChangeEvent(unsigned short, unsigned short)
SwViewImp::FireSectionChangeEvent(unsigned short, unsigned short)
TemplateLocalView::HasUnfilteredItems(FILTER_APPLICATION)
TextDoc::IsValidPaM(TextPaM const&)
TextEngine::GetLeftMargin() const
ThumbnailView::DeselectItem(unsigned short)
ThumbnailView::GetItemText(unsigned short) const
ThumbnailView::SetColor(Color const&)
ToolBox::GetItemExpand(unsigned short) const
TypeManager::TypeManager()
TypeManager::decompose(rtl::OUString const&, bool, rtl::OUString*, int*, std::vector<rtl::OUString, std::allocator<rtl::OUString> >*, rtl::Reference<unoidl::Entity>*) const
TypeManager::foundAtPrimaryProvider(rtl::OUString const&) const
TypeManager::loadProvider(rtl::OUString const&, bool)
UnoApiTest::closeDocument(com::sun::star::uno::Reference<com::sun::star::lang::XComponent>)
VclMultiLineEdit::IsRightToLeft() const
VclMultiLineEdit::SetTextSelectable(bool)
accessibility::AccessibleParaManager::Release(int)
accessibility::AccessibleShape::AccessibleShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, accessibility::AccessibleShapeTreeInfo const&, int)
accessibility::Document::justifySelection(TextPaM&, TextPaM&)
accessibility::Document::notifySelectionChange(int, int)
apitest::CellProperties::testRotateReference()
apitest::CellProperties::testVertJustify()
apitest::DataPilotField::testAutoShowInfo()
apitest::DataPilotField::testIsGroupField()
apitest::DataPilotField::testLayoutInfo()
apitest::DataPilotField::testReference()
apitest::DataPilotField::testSortInfo()
apitest::XCellRangeData::testGetDataArray()
apitest::XCellRangeData::testSetDataArray()
apitest::XCellRangeReferrer::testGetReferredCells()
apitest::XCellRangesQuery::testQueryColumnDifference()
apitest::XCellRangesQuery::testQueryContentDifference()
apitest::XCellRangesQuery::testQueryEmptyCells()
apitest::XCellRangesQuery::testQueryFormulaCells()
apitest::XCellRangesQuery::testQueryIntersection()
apitest::XCellRangesQuery::testQueryRowDifference()
apitest::XCellRangesQuery::testQueryVisibleCells()
apitest::XDataPilotDescriptor::testGetColumnFields()
apitest::XDataPilotDescriptor::testGetDataFields()
apitest::XDataPilotDescriptor::testGetDataPilotFields()
apitest::XDataPilotDescriptor::testGetFilterDescriptor()
apitest::XDataPilotDescriptor::testGetHiddenFields()
apitest::XDataPilotDescriptor::testGetPageFields()
apitest::XDataPilotDescriptor::testGetRowFields()
apitest::XDataPilotDescriptor::testSourceRange()
apitest::XDataPilotDescriptor::testTag()
apitest::XDataPilotFieldGrouping::testCreateDateGroup()
apitest::XDataPilotFieldGrouping::testCreateNameGroup()
apitest::XDataPilotTable2::testGetDrillDownData()
apitest::XDataPilotTable2::testGetOutputRangeByType()
apitest::XDataPilotTable2::testGetPositionData()
apitest::XDataPilotTable2::testInsertDrillDownSheet()
apitest::XDataPilotTable::testGetOutputRange()
apitest::XDataPilotTable::testRefresh()
apitest::XDatabaseRange::testDataArea()
apitest::XDatabaseRange::testGetFilterDescriptor()
apitest::XDatabaseRange::testGetImportDescriptor()
apitest::XDatabaseRange::testGetSortDescriptor()
apitest::XDatabaseRange::testGetSubtotalDescriptor()
apitest::XDatabaseRange::testRefresh()
apitest::XElementAccess::testGetElementType()
apitest::XElementAccess::testHasElements()
apitest::XGoalSeek::testSeekGoal()
apitest::XIndexAccess::XIndexAccess(int)
apitest::XIndexAccess::testGetByIndex()
apitest::XIndexAccess::testGetByIndexException()
apitest::XIndexAccess::testGetCount()
apitest::XNameContainer::XNameContainer()
apitest::XNameContainer::XNameContainer(rtl::OUString const&)
apitest::XNameContainer::testRemoveByName()
apitest::XNameReplace::testReplaceByName()
apitest::XNamed::testGetName()
apitest::XNamed::testSetName()
apitest::XNamedRange::testGetContent()
apitest::XNamedRange::testGetReferencePosition()
apitest::XNamedRange::testGetType()
apitest::XNamedRange::testSetContent()
apitest::XNamedRange::testSetReferencePosition()
apitest::XNamedRange::testSetType()
apitest::XNamedRanges::XNamedRanges()
apitest::XNamedRanges::XNamedRanges(rtl::OUString const&)
apitest::XNamedRanges::testAddNewByName()
apitest::XNamedRanges::testAddNewFromTitles()
apitest::XNamedRanges::testOutputList()
apitest::XNamedRanges::testRemoveByName()
apitest::XPrintAreas::testSetAndGetPrintTitleColumns()
apitest::XPrintAreas::testSetAndGetPrintTitleRows()
apitest::XPropertySet::PropsToTest::PropsToTest()
apitest::XPropertySet::testAddPropertyChangeListener()
apitest::XPropertySet::testAddVetoableChangeListener()
apitest::XPropertySet::testGetPropertyValue()
apitest::XPropertySet::testRemovePropertyChangeListener()
apitest::XPropertySet::testRemoveVetoableChangeListener()
apitest::XPropertySet::testSetPropertyValue()
apitest::XReplaceable::testCreateReplaceDescriptor()
apitest::XReplaceable::testReplaceAll()
apitest::XSearchable::testFindAll()
apitest::XSearchable::testFindFirst()
apitest::XSearchable::testFindNext()
apitest::XSheetAnnotation::testGetAuthor()
apitest::XSheetAnnotation::testGetDate()
apitest::XSheetAnnotation::testGetIsVisible()
apitest::XSheetAnnotation::testGetPosition()
apitest::XSheetAnnotation::testSetIsVisible()
apitest::XSheetAnnotations::testCount()
apitest::XSheetAnnotations::testInsertNew()
apitest::XSheetAnnotations::testRemoveByIndex()
apitest::XSheetOutline::testAutoOutline()
apitest::XSheetOutline::testClearOutline()
apitest::XSheetOutline::testGroup()
apitest::XSheetOutline::testHideDetail()
apitest::XSheetOutline::testShowDetail()
apitest::XSheetOutline::testShowLevel()
apitest::XSheetOutline::testUngroup()
apitest::XSpreadsheetDocument::testGetSheets()
apitest::XSpreadsheets2::XSpreadsheets2()
apitest::XSpreadsheets2::testImportCellStyle()
apitest::XSpreadsheets2::testImportFormulaBasicMath()
apitest::XSpreadsheets2::testImportFormulaWithNamedRange()
apitest::XSpreadsheets2::testImportNamedRangeDefinedInSource()
apitest::XSpreadsheets2::testImportNamedRangeRedefinedInSource()
apitest::XSpreadsheets2::testImportNewNamedRange()
apitest::XSpreadsheets2::testImportOverExistingNamedRange()
apitest::XSpreadsheets2::testImportString()
apitest::XSpreadsheets2::testImportValue()
apitest::XSpreadsheets2::testImportedSheetNameAndIndex()
apitest::XText::testInsertRemoveTextContent()
apitest::XTextContent::testAttach()
apitest::XTextContent::testGetAnchor()
apitest::XTextField::testGetPresentation()
basegfx::tools::containsOnlyHorizontalAndVerticalEdges(basegfx::B2DPolyPolygon const&)
basegfx::tools::equal(basegfx::B2DPolygon const&, basegfx::B2DPolygon const&, double const&)
basegfx::tools::equal(basegfx::B3DPolyPolygon const&, basegfx::B3DPolyPolygon const&)
canvas::createSurfaceProxyManager(boost::shared_ptr<canvas::IRenderModule> const&)
chart::ChartModelHelper::setPageSize(com::sun::star::awt::Size const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
chart::ModifyListenerCallBack::startListening(com::sun::star::uno::Reference<com::sun::star::util::XModifyBroadcaster> const&)
codemaker::ExceptionTree::add(rtl::OString const&, rtl::Reference<TypeManager> const&)
codemaker::convertString(rtl::OUString const&)
codemaker::cpp::scopedCppName(rtl::OString const&, bool)
codemaker::cpp::translateUnoToCppIdentifier(rtl::OString const&, rtl::OString const&, codemaker::cpp::IdentifierTranslationMode, rtl::OString const*)
codemaker::cpp::translateUnoToCppType(codemaker::UnoType::Sort, rtl::OUString const&)
codemaker::java::translateUnoToJavaIdentifier(rtl::OString const&, rtl::OString const&)
codemaker::java::translateUnoToJavaType(codemaker::UnoType::Sort, rtl::OString const&, bool)
comphelper::detail::ConfigurationWrapper::getGroupReadWrite(boost::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::getLocalizedPropertyValue(rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::setLocalizedPropertyValue(boost::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&, com::sun::star::uno::Any const&) const
connectivity::OSQLParseNode::showParseTree(rtl::OUString&) const
connectivity::file::OStatement_Base::reset()
connectivity::firebird::release(int&, cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface>&, com::sun::star::lang::XComponent*)
connectivity::sdbcx::OGroup::OGroup(rtl::OUString const&, unsigned char)
connectivity::sdbcx::OGroup::OGroup(unsigned char)
drawinglayer::attribute::SdrFillGraphicAttribute::getLogSize() const
editeng::MisspellRange::MisspellRange()
editeng::Section::Section()
formula::DoubleVectorRefToken::GetRequestedArrayLength() const
formula::FormulaDlg::CheckMatrix()
formula::FormulaTokenArray::AddString(unsigned short const*)
formula::SingleVectorRefToken::GetRequestedArrayLength() const
formula::SingleVectorRefToken::SingleVectorRefToken(double const*, unsigned long, unsigned long)
oglcanvas::CanvasHelper::flush() const
oglcanvas::TextLayout::draw(com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&) const
oox::AttributeConversion::decodeDouble(rtl::OUString const&)
oox::xls::BiffDrawingObjectBase::BiffDrawingObjectBase(oox::xls::WorksheetHelper const&)
oox::xls::WorkbookHelper::getDocShell()
oox::xls::WorksheetGlobals::getColumns(oox::ValueRange const&) const
oox::xls::WorksheetGlobals::getRows(oox::ValueRange const&) const
registry::tools::Options::Options(char const*)
registry::tools::Options::badOption(char const*, char const*) const
registry::tools::Options::initOptions(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
registry::tools::convertToFileUrl(char const*, int)
rtl_OUString::convertFromString::test()
sc::CLBuildKernelThread::consume()
sc::CLBuildKernelThread::produce()
sc::CellTextAttr::CellTextAttr(unsigned short, unsigned char)
sc::ColumnSet::has(short, short) const
sc::CompareFunc(double, sc::Compare::Cell const&, sc::CompareOptions*)
sc::opencl::OpenclDevice::getOpenclState()
sc::opencl::OpenclDevice::releaseOpenclRunEnv()
sc::opencl::OpenclDevice::setOpenclState(int)
sd::LeftDrawPaneShell::RegisterInterface(SfxModule*)
sd::LeftImpressPaneShell::RegisterInterface(SfxModule*)
std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >::_Rb_tree(std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >&&)
std::auto_ptr<formula::FormulaTokenArray>::auto_ptr(std::auto_ptr<formula::FormulaTokenArray>&)
std::auto_ptr<formula::FormulaTokenArray>::auto_ptr(std::auto_ptr_ref<formula::FormulaTokenArray>)
std::vector<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread>, std::allocator<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread> > >::reserve(unsigned long)
vcl::MapChar(vcl::_TrueTypeFont*, unsigned short, bool)
