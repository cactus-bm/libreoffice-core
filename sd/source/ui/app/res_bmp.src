/*************************************************************************
 *
 *  $RCSfile: res_bmp.src,v $
 *
 *  $Revision: 1.41 $
 *
 *  last change: $Author: hr $ $Date: 2003-06-13 14:01:47 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#include <sfx2/sfx.hrc>
#include <svtools/style.hrc>
#include "glob.hrc"
#include "res_bmp.hrc"

PushButton RID_TIME_BUTTON
{
    Pos = MAP_APPFONT ( 0 , 0 ) ;
    Size = MAP_APPFONT ( 50 , 14 ) ;
    Text = "00:00:00" ;
    TabStop = TRUE ;
    DefButton = TRUE ;
};
PushButton RID_PREVIEW_BUTTON
{
    Size = MAP_APPFONT ( 50 , 14 ) ;
    Text = "Ab~spielen" ;
    Text [ ENGLISH ] = "~Play" ;
    TabStop = TRUE ;
    Text [ english_us ] = "Play" ;
    Text [ italian ] = "Esegui" ;
    Text [ spanish ] = "~Reproducir" ;
    Text [ french ] = "Reproduire" ;
    Text [ dutch ] = "Af~spelen" ;
    Text [ swedish ] = "~Spela upp" ;
    Text [ danish ] = "Afspil" ;
    Text [ portuguese_brazilian ] = "Tocar" ;
    Text [ portuguese ] = "~Tocar" ;
    Text[ chinese_simplified ] = "ÊîæÊò†";
    Text[ russian ] = "¬ÓÒÔÓËÁ‚ÂÒÚË";
    Text[ polish ] = "O~dtwÛrz";
    Text[ japanese ] = "ÂÜçÁîü";
    Text[ chinese_traditional ] = "ÊîæÊò†";
    Text[ arabic ] = " ‘€Ì·";
    Text[ greek ] = "≈ÍÙ›ÎÂ~ÛÁ";
    Text[ korean ] = "Ïû¨ÏÉù";
    Text[ turkish ] = "«al˝˛t˝r";
    Text[ language_user1 ] = " ";
    Text[ catalan ] = "Reprodueix";
    Text[ finnish ] = "Toista";
    Text[ thai ] = "‡πÄ‡∏•‡πà‡∏ô";
    Text[ czech ] = "P≈ôehr√°t";
    Text[ hebrew ] = "Ab~spielen";
    Text[ hindi ] = "‡§∂‡•Å‡§∞‡•Å";
    Text[ slovak ] = "Prehra≈•";
};
Bitmap BMP_TAB_PAGEMODE
{
    File = "pagemode.bmp" ;
};
Bitmap BMP_TAB_PAGEMODE_H
{
    File = "pagemode_h.bmp" ;
};
Bitmap BMP_TAB_MASTERPAGE
{
    File = "mspgmode.bmp" ;
};
Bitmap BMP_TAB_MASTERPAGE_H
{
    File = "mspgmode_h.bmp" ;
};
Bitmap BMP_TAB_LAYERMODE
{
    File = "layrmode.bmp" ;
};
Bitmap BMP_TAB_LAYERMODE_H
{
    File = "layrmode_h.bmp" ;
};
Bitmap BMP_SW_SLIDE
{
    File = "smo102.bmp" ;
};
Bitmap BMP_SW_SLIDE_H
{
    File = "smo102_h.bmp" ;
};
Bitmap BMP_SW_DRAW
{
    File = "smo100.bmp" ;
};
Bitmap BMP_SW_DRAW_H
{
    File = "smo100_h.bmp" ;
};
Bitmap BMP_SW_OUTLINE
{
    File = "smo101.bmp" ;
};
Bitmap BMP_SW_OUTLINE_H
{
    File = "smo101_h.bmp" ;
};
Bitmap BMP_SW_NOTES
{
    File = "smo125.bmp" ;
};
Bitmap BMP_SW_NOTES_H
{
    File = "smo125_h.bmp" ;
};
Bitmap BMP_SW_HANDOUT
{
    File = "smo126.bmp" ;
};
Bitmap BMP_SW_HANDOUT_H
{
    File = "smo126_h.bmp" ;
};
Bitmap BMP_SW_PRESENTATION
{
    File = "smo103.bmp" ;
};
Bitmap BMP_SW_PRESENTATION_H
{
    File = "smo103_h.bmp" ;
};
Bitmap BMP_FOIL_00
{
    File = "foil00.bmp" ;
};
Bitmap BMP_FOIL_00_H
{
    File = "foil00_h.bmp" ;
};
Bitmap BMP_FOIL_01
{
    File = "foil01.bmp" ;
};
Bitmap BMP_FOIL_01_H
{
    File = "foil01_h.bmp" ;
};
Bitmap BMP_FOIL_02
{
    File = "foil02.bmp" ;
};
Bitmap BMP_FOIL_02_H
{
    File = "foil02_h.bmp" ;
};
Bitmap BMP_FOIL_03
{
    File = "foil03.bmp" ;
};
Bitmap BMP_FOIL_03_H
{
    File = "foil03_h.bmp" ;
};
Bitmap BMP_FOIL_04
{
    File = "foil04.bmp" ;
};
Bitmap BMP_FOIL_04_H
{
    File = "foil04_h.bmp" ;
};
Bitmap BMP_FOIL_05
{
    File = "foil05.bmp" ;
};
Bitmap BMP_FOIL_06
{
    File = "foil06.bmp" ;
};
Bitmap BMP_FOIL_06_H
{
    File = "foil06_h.bmp" ;
};
Bitmap BMP_FOIL_07
{
    File = "foil07.bmp" ;
};
Bitmap BMP_FOIL_07_H
{
    File = "foil07_h.bmp" ;
};
Bitmap BMP_FOIL_08
{
    File = "foil08.bmp" ;
};
Bitmap BMP_FOIL_08_H
{
    File = "foil08_h.bmp" ;
};
Bitmap BMP_FOIL_09
{
    File = "foil09.bmp" ;
};
Bitmap BMP_FOIL_09_H
{
    File = "foil09_h.bmp" ;
};
Bitmap BMP_FOIL_10
{
    File = "foil10.bmp" ;
};
Bitmap BMP_FOIL_10_H
{
    File = "foil10_h.bmp" ;
};
Bitmap BMP_FOIL_11
{
    File = "foil11.bmp" ;
};
Bitmap BMP_FOIL_11_H
{
    File = "foil11_h.bmp" ;
};
Bitmap BMP_FOIL_12
{
    File = "foil12.bmp" ;
};
Bitmap BMP_FOIL_12_H
{
    File = "foil12_h.bmp" ;
};
Bitmap BMP_FOIL_13
{
    File = "foil13.bmp" ;
};
Bitmap BMP_FOIL_13_H
{
    File = "foil13_h.bmp" ;
};
Bitmap BMP_FOIL_14
{
    File = "foil14.bmp" ;
};
Bitmap BMP_FOIL_14_H
{
    File = "foil14_h.bmp" ;
};
Bitmap BMP_FOIL_15
{
    File = "foil15.bmp" ;
};
Bitmap BMP_FOIL_15_H
{
    File = "foil15_h.bmp" ;
};
Bitmap BMP_FOIL_16
{
    File = "foil16.bmp" ;
};
Bitmap BMP_FOIL_16_H
{
    File = "foil16_h.bmp" ;
};
Bitmap BMP_FOIL_17
{
    File = "foil17.bmp" ;
};
Bitmap BMP_FOIL_17_H
{
    File = "foil17_h.bmp" ;
};
Bitmap BMP_FOIL_18
{
    File = "foil18.bmp" ;
};
Bitmap BMP_FOIL_18_H
{
    File = "foil18_h.bmp" ;
};
Bitmap BMP_FOIL_19
{
    File = "foil19.bmp" ;
};
Bitmap BMP_FOIL_19_H
{
    File = "foil19_h.bmp" ;
};
Bitmap BMP_FOIL_20
{
    File = "foil20.bmp" ;
};
Bitmap BMP_FOIL_20_H
{
    File = "foil20_h.bmp" ;
};
Bitmap BMP_FOIL_21
{
    File = "foil21.bmp" ;
};
Bitmap BMP_FOIL_21_H
{
    File = "foil21_h.bmp" ;
};
Bitmap BMP_FOIL_22
{
    File = "foil22.bmp" ;
};
Bitmap BMP_FOIL_22_H
{
    File = "foil22_h.bmp" ;
};
Bitmap BMP_FOIL_23
{
    File = "foil23.bmp" ;
};
Bitmap BMP_FOIL_23_H
{
    File = "foil23_h.bmp" ;
};
Bitmap BMP_FOIL_24
{
    File = "foil24.bmp" ;
};
Bitmap BMP_FOIL_24_H
{
    File = "foil24_h.bmp" ;
};
Bitmap BMP_FOILH_01
{
    File = "foilh01.bmp" ;
};
Bitmap BMP_FOILH_01_H
{
    File = "foilh01_h.bmp" ;
};
Bitmap BMP_FOILH_02
{
    File = "foilh02.bmp" ;
};
Bitmap BMP_FOILH_02_H
{
    File = "foilh02_h.bmp" ;
};
Bitmap BMP_FOILH_03
{
    File = "foilh03.bmp" ;
};
Bitmap BMP_FOILH_03_H
{
    File = "foilh03_h.bmp" ;
};
Bitmap BMP_FOILH_04
{
    File = "foilh04.bmp" ;
};
Bitmap BMP_FOILH_04_H
{
    File = "foilh04_h.bmp" ;
};
Bitmap BMP_FOILH_06
{
    File = "foilh06.bmp" ;
};
Bitmap BMP_FOILH_06_H
{
    File = "foilh06_h.bmp" ;
};
Bitmap BMP_FOILN_01
{
    File = "foiln01.bmp" ;
};
Bitmap BMP_FOILN_01_H
{
    File = "foiln01_h.bmp" ;
};
Bitmap BMP_FOIL_NONE
{
    File = "foilnone.bmp" ;
};
Bitmap BMP_PAGE
{
    File = "page.bmp" ;
};
Bitmap BMP_PAGE_H
{
    File = "page_h.bmp" ;
};
Bitmap BMP_PAGE_EXCLUDED
{
    File = "pageexcl.bmp" ;
};
Bitmap BMP_PAGE_EXCLUDED_H
{
    File = "pageexcl_h.bmp" ;
};
Bitmap BMP_PAGEOBJS_EXCLUDED
{
    File = "pagobjex.bmp" ;
};
Bitmap BMP_PAGEOBJS_EXCLUDED_H
{
    File = "pagobjex_h.bmp" ;
};
Bitmap BMP_PAGEOBJS
{
    File = "pageobjs.bmp" ;
};
Bitmap BMP_PAGEOBJS_H
{
    File = "pageobjs_h.bmp" ;
};
Bitmap BMP_OBJECTS
{
    File = "objects.bmp" ;
};
Bitmap BMP_OBJECTS_H
{
    File = "objects_h.bmp" ;
};
Bitmap BMP_OLE
{
    File = "ole.bmp" ;
};
Bitmap BMP_OLE_H
{
    File = "ole_h.bmp" ;
};
Bitmap BMP_GROUP
{
    File = "group.bmp" ;
};
Bitmap BMP_GROUP_H
{
    File = "group_h.bmp" ;
};
Bitmap BMP_DOC_OPEN
{
    File = "docopen.bmp" ;
};
Bitmap BMP_DOC_OPEN_H
{
    File = "docopen_h.bmp" ;
};
Bitmap BMP_DOC_CLOSED
{
    File = "docclose.bmp" ;
};
Bitmap BMP_DOC_CLOSED_H
{
    File = "docclose_h.bmp" ;
};
Bitmap BMP_DOC_TEXT
{
    File = "doctext.bmp" ;
};
Bitmap BMP_DOC_TEXT_H
{
    File = "doctext_h.bmp" ;
};
Bitmap BMP_EXPAND
{
    File = "plus.bmp" ;
};
Bitmap BMP_EXPAND_H
{
    File = "plus_h.bmp" ;
};
Bitmap BMP_COLLAPSE
{
    File = "minus.bmp" ;
};
Bitmap BMP_COLLAPSE_H
{
    File = "minus_h.bmp" ;
};
Bitmap BMP_GRAPHIC
{
    File = "graphic.bmp" ;
};
Bitmap BMP_GRAPHIC_H
{
    File = "graphic_h.bmp" ;
};
 // Effekte BMPs fuer ValueSet
Bitmap BMP_EFFECT_FADE_FROM_UL
{
    File = "fadetl.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_UL_H
{
    File = "fadetl_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_T
{
    File = "fadetop.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_T_H
{
    File = "fadetop_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_UR
{
    File = "fadetr.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_UR_H
{
    File = "fadetr_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_L
{
    File = "fadeleft.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_L_H
{
    File = "fadeleft_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_R
{
    File = "faderght.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_R_H
{
    File = "faderght_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_LL
{
    File = "fadebl.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_LL_H
{
    File = "fadebl_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_B
{
    File = "fadebotm.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_B_H
{
    File = "fadebotm_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_LR
{
    File = "fadebr.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_LR_H
{
    File = "fadebr_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_L
{
    File = "discleft.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_L_H
{
    File = "discleft_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_UL
{
    File = "disculft.bmp";
};
Bitmap BMP_EFFECT_DISCARD_FROM_UL_H
{
    File = "disculft_h.bmp";
};
Bitmap BMP_EFFECT_DISCARD_FROM_T
{
    File = "disctop.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_T_H
{
    File = "disctop_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_UR
{
    File = "discurgt.bmp";
};
Bitmap BMP_EFFECT_DISCARD_FROM_UR_H
{
    File = "discurgt_h.bmp";
};
Bitmap BMP_EFFECT_DISCARD_FROM_R
{
    File = "discrght.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_R_H
{
    File = "discrght_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_LR
{
    File = "disclrgt.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_LR_H
{
    File = "disclrgt_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_B
{
    File = "discbotm.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_B_H
{
    File = "discbotm_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_LL
{
    File = "discllft.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_FROM_LL_H
{
    File = "discllft_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_L
{
    File = "dissleft.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_L_H
{
    File = "dissleft_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_UL
{
    File = "dissulft.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_UL_H
{
    File = "dissulft_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_T
{
    File = "disstop.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_T_H
{
    File = "disstop_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_UR
{
    File = "dissurgt.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_UR_H
{
    File = "dissurgt_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_R
{
    File = "dissrght.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_R_H
{
    File = "dissrght_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_LR
{
    File = "disslrgt.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_LR_H
{
    File = "disslrgt_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_B
{
    File = "dissbotm.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_B_H
{
    File = "dissbotm_h.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_LL
{
    File = "dissllft.bmp" ;
};
Bitmap BMP_EFFECT_DISCARD_S_FROM_LL_H
{
    File = "dissllft_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_TO_CENTER
{
    File = "fadtocen.bmp" ;
};
Bitmap BMP_EFFECT_FADE_TO_CENTER_H
{
    File = "fadtocen_h.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_CENTER
{
    File = "fadfrcen.bmp" ;
};
Bitmap BMP_EFFECT_FADE_FROM_CENTER_H
{
    File = "fadfrcen_h.bmp" ;
};
Bitmap BMP_EFFECT_VERTICAL_STRIPES
{
    File = "fadevert.bmp" ;
};
Bitmap BMP_EFFECT_VERTICAL_STRIPES_H
{
    File = "fadevert_h.bmp" ;
};
Bitmap BMP_EFFECT_HORIZONTAL_STRIPES
{
    File = "fadehorz.bmp" ;
};
Bitmap BMP_EFFECT_HORIZONTAL_STRIPES_H
{
    File = "fadehorz_h.bmp" ;
};
Bitmap BMP_EFFECT_CLOCKWISE
{
    File = "fadclock.bmp" ;
};
Bitmap BMP_EFFECT_CLOCKWISE_H
{
    File = "fadclock_h.bmp" ;
};
Bitmap BMP_EFFECT_COUNTERCLOCKWISE
{
    File = "fadcount.bmp" ;
};
Bitmap BMP_EFFECT_COUNTERCLOCKWISE_H
{
    File = "fadcount_h.bmp" ;
};
Bitmap BMP_EFFECT_OPEN_VERTICAL
{
    File = "openvert.bmp" ;
};
Bitmap BMP_EFFECT_OPEN_VERTICAL_H
{
    File = "openvert_h.bmp" ;
};
Bitmap BMP_EFFECT_OPEN_HORIZONTAL
{
    File = "openhorz.bmp" ;
};
Bitmap BMP_EFFECT_OPEN_HORIZONTAL_H
{
    File = "openhorz_h.bmp" ;
};
Bitmap BMP_EFFECT_CLOSE_VERTICAL
{
    File = "closvert.bmp" ;
};
Bitmap BMP_EFFECT_CLOSE_VERTICAL_H
{
    File = "closvert_h.bmp" ;
};
Bitmap BMP_EFFECT_CLOSE_HORIZONTAL
{
    File = "closhorz.bmp" ;
};
Bitmap BMP_EFFECT_CLOSE_HORIZONTAL_H
{
    File = "closhorz_h.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_T
{
    File = "wavytop.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_T_H
{
    File = "wavytop_h.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_L
{
    File = "wavyleft.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_L_H
{
    File = "wavyleft_h.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_R
{
    File = "wavyrght.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_R_H
{
    File = "wavyrght_h.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_B
{
    File = "wavybotm.bmp" ;
};
Bitmap BMP_EFFECT_WAVYLINE_FROM_B_H
{
    File = "wavybotm_h.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALIN_L
{
    File = "spiralil.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALIN_L_H
{
    File = "spiralil_h.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALIN_R
{
    File = "spiralir.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALIN_R_H
{
    File = "spiralir_h.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALOUT_L
{
    File = "spiralol.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALOUT_L_H
{
    File = "spiralol_h.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALOUT_R
{
    File = "spiralor.bmp" ;
};
Bitmap BMP_EFFECT_SPIRALOUT_R_H
{
    File = "spiralor_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_UL
{
    File = "lasrtlft.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_UL_H
{
    File = "lasrtlft_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_T
{
    File = "lasrtop.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_T_H
{
    File = "lasrtop_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_UR
{
    File = "lasrtrgt.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_UR_H
{
    File = "lasrtrgt_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_L
{
    File = "lasrleft.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_L_H
{
    File = "lasrleft_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_R
{
    File = "lasrrght.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_R_H
{
    File = "lasrrght_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_LL
{
    File = "lasrblft.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_LL_H
{
    File = "lasrblft_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_B
{
    File = "lasrbotm.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_B_H
{
    File = "lasrbotm_h.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_LR
{
    File = "lasrbrgt.bmp" ;
};
Bitmap BMP_EFFECT_LASER_FROM_LR_H
{
    File = "lasrbrgt_h.bmp" ;
};
Bitmap BMP_EFFECT_VERTICAL_LINES
{
    File = "linevert.bmp" ;
};
Bitmap BMP_EFFECT_VERTICAL_LINES_H
{
    File = "linevert_h.bmp" ;
};
Bitmap BMP_EFFECT_HORIZONTAL_LINES
{
    File = "linehorz.bmp" ;
};
Bitmap BMP_EFFECT_HORIZONTAL_LINES_H
{
    File = "linehorz_h.bmp" ;
};
Bitmap BMP_EFFECT_VERTICAL_CHECKERBOARD
{
    File = "chckvert.bmp" ;
};
Bitmap BMP_EFFECT_VERT_CHECKBRD_H
{
    File = "chckvert_h.bmp" ;
};
Bitmap BMP_EFFECT_HORIZONTAL_CHECKERBOARD
{
    File = "chckhorz.bmp" ;
};
Bitmap BMP_EFFECT_HOR_CHECKBRD_H
{
    File = "chckhorz_h.bmp" ;
};
Bitmap BMP_EFFECT_DISSOLVE
{
    File = "dissolve.bmp" ;
};
Bitmap BMP_EFFECT_DISSOLVE_H
{
    File = "dissolve_h.bmp" ;
};
Bitmap BMP_EFFECT_RANDOM
{
    File = "efrandom.bmp" ;
};
Bitmap BMP_EFFECT_RANDOM_H
{
    File = "efrandom_h.bmp" ;
};
Bitmap BMP_EFFECT_PATH
{
    File = "effpath.bmp" ;
};
Bitmap BMP_EFFECT_PATH_H
{
    File = "effpath_h.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_L
{
    File = "rollleft.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_L_H
{
    File = "rollleft_h.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_T
{
    File = "rolltop.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_T_H
{
    File = "rolltop_h.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_R
{
    File = "rollrght.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_R_H
{
    File = "rollrght_h.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_B
{
    File = "rollbotm.bmp" ;
};
Bitmap BMP_EFFECT_ROLL_FROM_B_H
{
    File = "rollbotm_h.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_L
{
    File = "streleft.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_L_H
{
    File = "streleft_h.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_T
{
    File = "stretop.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_T_H
{
    File = "stretop_h.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_R
{
    File = "strerght.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_R_H
{
    File = "strerght_h.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_B
{
    File = "strebotm.bmp" ;
};
Bitmap BMP_EFFECT_STRETCH_FROM_B_H
{
    File = "strebotm_h.bmp" ;
};
Bitmap BMP_EFFECT_NONE
{
    File = "effnone.bmp" ;
};
Bitmap BMP_EFFECT_NONE_H
{
    File = "effnone_h.bmp" ;
};
Bitmap BMP_TEXTEFFECT_DISCARD_FROM_T
{
    File = "disctxtt.bmp" ;
};
Bitmap BMP_TEXTEFFECT_DISCARD_FROM_T_H
{
    File = "disctxtt_h.bmp" ;
};
Bitmap BMP_TEXTEFFECT_FADE_FROM_CENTER
{
    File = "fadfrtxt.bmp" ;
};
Bitmap BMP_TEXTEFFECT_FADE_FROM_CNTR_H
{
    File = "fadfrtxt_h.bmp" ;
};
Bitmap BMP_EFFECT_HIDE
{
    File = "effhide.bmp" ;
};
Bitmap BMP_EFFECT_HIDE_H
{
    File = "effhide_h.bmp" ;
};
Bitmap BMP_EFFECT_APPEAR
{
    File = "effapear.bmp" ;
};
Bitmap BMP_EFFECT_APPEAR_H
{
    File = "effapear_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_L
{
    File = "strtleft.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_L_H
{
    File = "strtleft_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_UL
{
    File = "strtulft.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_UL_H
{
    File = "strtulft_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_T
{
    File = "strttop.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_T_H
{
    File = "strttop_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_UR
{
    File = "strturgt.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_UR_H
{
    File = "strturgt_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_R
{
    File = "strtrght.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_R_H
{
    File = "strtrght_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_LR
{
    File = "strtlrgt.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_LR_H
{
    File = "strtlrgt_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_B
{
    File = "strtbotm.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_B_H
{
    File = "strtbotm_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_LL
{
    File = "strtllft.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_FROM_LL_H
{
    File = "strtllft_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_HORIZONTAL
{
    File = "strthorz.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_HORIZONTAL_H
{
    File = "strthorz_h.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_VERTICAL
{
    File = "strtvert.bmp" ;
};
Bitmap BMP_EFFECT_STRTCH_VERTICAL_H
{
    File = "strtvert_h.bmp" ;
};
Bitmap BMP_EFFECT_ROTATE_HORIZONTAL
{
    File = "rothorz.bmp" ;
};
Bitmap BMP_EFFECT_ROTATE_HORIZONTAL_H
{
    File = "rothorz_h.bmp" ;
};
Bitmap BMP_EFFECT_ROTATE_VERTICAL
{
    File = "rotvert.bmp" ;
};
Bitmap BMP_EFFECT_ROTATE_VERTICAL_H
{
    File = "rotvert_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_L
{
    File = "movleft.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_L_H
{
    File = "movleft_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_UL
{
    File = "movulft.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_UL_H
{
    File = "movulft_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_T
{
    File = "movtop.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_T_H
{
    File = "movtop_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_UR
{
    File = "movurgt.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_UR_H
{
    File = "movurgt_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_R
{
    File = "movrght.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_R_H
{
    File = "movrght_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_LR
{
    File = "movlrgt.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_LR_H
{
    File = "movlrgt_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_B
{
    File = "movbotm.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_B_H
{
    File = "movbotm_h.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_LL
{
    File = "movllft.bmp" ;
};
Bitmap BMP_EFFECT_UNCOVER_TO_LL_H
{
    File = "movllft_h.bmp" ;
};

Image IMG_EFFECT
{
    ImageBitmap = Bitmap { File = "objekt.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR;
};
Image IMG_EFFECT_H
{
    ImageBitmap = Bitmap { File = "objekt_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};
Image IMG_EXTRAS
{
    ImageBitmap = Bitmap { File = "vtextras.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR;
};
Image IMG_EXTRAS_H
{
    ImageBitmap = Bitmap { File = "vtextras_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};
Image IMG_TEXT
{
    ImageBitmap = Bitmap { File = "text.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR;
};
Image IMG_TEXT_H
{
    ImageBitmap = Bitmap { File = "text_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};
Image IMG_ORDER
{
    ImageBitmap = Bitmap { File = "vtextras.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR;
};
Image IMG_EFFECT_ORDER_H
{
    ImageBitmap = Bitmap { File = "reihe_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_PREVIEW_H
{
    ImageBitmap = Bitmap { File = "preview_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_INVISIBLE_H
{
    ImageBitmap = Bitmap { File = "invisibl_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_FADEOUT_H
{
    ImageBitmap = Bitmap { File = "fadeout_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_SOUND_H
{
    ImageBitmap = Bitmap { File = "sound_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_PLAYFULL_H
{
    ImageBitmap = Bitmap { File = "playfull_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_BROWSE_H
{
    ImageBitmap = Bitmap { File = "sc05501_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_PIPETTE_H
{
    ImageBitmap = Bitmap { File = "pipette_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_GET1OBJECT_H
{
    ImageBitmap = Bitmap { File = "get1obj_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_GETALLOBJECT_H
{
    ImageBitmap = Bitmap { File = "getallob_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_REMOVEBMP_H
{
    ImageBitmap = Bitmap { File = "del1bmp_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_REMOVEALLBMP_H
{
    ImageBitmap = Bitmap { File = "delall_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC ;
};
Image IMG_APPLY_H
{
    ImageBitmap = Bitmap { File = "apply_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};
Image IMG_SLIDE_SEMI_H
{
    ImageBitmap = Bitmap { File = "slidauma_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};
Image IMG_SLIDE_AUTO_H
{
    ImageBitmap = Bitmap { File = "slidauto_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};
Image IMG_SLIDE_MANU_H
{
    ImageBitmap = Bitmap { File = "slidmanu_h.bmp" ; };
    MaskColor = IMAGE_MASK_STDCOLOR_HC;
};

SfxStyleFamilies DLG_STYLE_DESIGNER
{


    StyleFamilyList =
    {
        SfxStyleFamilyItem RID_GRAPHICSTYLEFAMILY
        {
            Text = "Grafikobjektvorlagen" ;
            Text [ ENGLISH ] = "Graphic Objects Styles" ;
            Text [ english_us ] = "Graphics Styles" ;
            Text [ italian ] = "Modelli di oggetti grafici" ;
            Text [ spanish ] = "Estilos de objeto gr·fico" ;
            Text [ french ] = "Styles d'objet graphique" ;
            Text [ dutch ] = "Opmaakprofielen voor grafische objecten" ;
            Text [ swedish ] = "Grafikobjektmallar" ;
            Text [ danish ] = "Grafikobjekttypografier" ;
            Text [ portuguese_brazilian ] = "Estilos de Objetos Gr?ficos" ;
            Text [ portuguese ] = "Estilos de objectos gr·ficos" ;
            Text[ chinese_simplified ] = "ÂõæÂΩ¢ÂØπË±°Ê†∑Âºè";
            Text[ russian ] = "√‡ÙË˜ÂÒÍËÂ ÒÚËÎË";
            Text[ polish ] = "Style obiektÛw graficznych";
            Text[ japanese ] = "Âõ≥„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çπ„Çø„Ç§„É´";
            Text[ chinese_traditional ] = "ÂúñÂΩ¢Áâ©‰ª∂Ê®£Âºè";
            Text[ arabic ] = "√‰„«ÿ ﬂ«∆‰«  ’Ê—…";
            Text[ greek ] = "”ÙıÎ ·ÌÙÈÍÂÈÏ›Ì˘Ì „Ò·ˆÈÍ˛Ì";
            Text[ korean ] = "Í∑∏Î¶º Ïä§ÌÉÄÏùº";
            Text[ turkish ] = "Grafik BiÁemleri";
            Text[ czech ] = "Grafick√© styly";
            StyleFamily = SFX_STYLE_FAMILY_PARA ;
            FilterList =
            {
                < STR_STYLE_FILTER_ALL ; SFXSTYLEBIT_ALL ; > ;
                < STR_STYLE_FILTER_USED ; SFXSTYLEBIT_USED ; > ;
                < STR_STYLE_FILTER_USERDEF ; SFXSTYLEBIT_USERDEF ; > ;
            };
        };
        SfxStyleFamilyItem RID_PRESENTATIONSTYLEFAMILY
        {
            Text = "Pr‰sentationsobjektvorlagen" ;
            Text [ ENGLISH ] = "Presentation objects styles" ;
            Text [ english_us ] = "Presentation Styles" ;
            Text [ italian ] = "Modelli di oggetti per presentazione" ;
            Text [ spanish ] = "Estilos de objetos de presentaciÛn" ;
            Text [ french ] = "Styles d'objet de prÈsentation" ;
            Text [ dutch ] = "Opmaakprofielen voor presentatieobjecten" ;
            Text [ swedish ] = "Presentationsobjektmallar" ;
            Text [ danish ] = "PrÊsentationsobjekttypografier" ;
            Text [ portuguese_brazilian ] = "Pr?sentationsobjektvorlagen" ;
            Text [ portuguese ] = "Estilos de objectos de apresentaÁ„o" ;
            Text[ chinese_simplified ] = "ÊºîÁ§∫ÊñáÁ®øÂØπË±°Ê†∑Âºè";
            Text[ russian ] = "—ÚËÎË ÔÂÁÂÌÚ‡ˆËË";
            Text[ polish ] = "Style obiektÛw prezentacji";
            Text[ japanese ] = "„Éó„É¨„Çº„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çπ„Çø„Ç§„É´";
            Text[ chinese_traditional ] = "Á∞°Â†±Ê®£Âºè";
            Text[ arabic ] = "√‰„«ÿ ﬂ«∆‰ ⁄—÷  ﬁœÌ„Ì";
            Text[ greek ] = "–Ò¸Ùı· ·ÌÙÈÍÂÈÏ›Ì˘Ì ·ÒÔıÛﬂ·ÛÁÚ";
            Text[ korean ] = "ÌîÑÎ†àÏ††ÌÖåÏù¥ÏÖò Ïä§ÌÉÄÏùº";
            Text[ turkish ] = "Sunum BiÁemleri";
            Text[ czech ] = "Styly prezentace";
            StyleFamily = SFX_STYLE_FAMILY_PSEUDO ;
            FilterList =
            {
                < STR_STYLE_FILTER_ALL ; SFXSTYLEBIT_ALL ; > ;
            };
        };
    };
    #define STYLE_IMAGE_LISTEF \
        IdList = \
        { \
            1; 2; \
        }; \
        IdCount = 2;

    ImageList 1 // == BMP_COLOR_NORMAL + 1
    {
        ImageBitmap = Bitmap { File = "sf_out.bmp" ; };
        MaskColor = IMAGE_MASK_STDCOLOR;
        STYLE_IMAGE_LISTEF
    };
    ImageList 2 // == BMP_COLOR_HIGHCONTRAST + 1
    {
        ImageBitmap = Bitmap { File = "sfh_out.bmp" ; };
        MaskColor = IMAGE_MASK_STDCOLOR_HC;
        STYLE_IMAGE_LISTEF
    };
    #undef STYLE_IMAGE_LISTEF
};

Bitmap BMP_PAGE_ON
{
    File = "chkpage1.bmp" ;
};
Bitmap BMP_PAGE_ON_H
{
    File = "chkpage1_h.bmp" ;
};
Bitmap BMP_PAGE_OFF
{
    File = "chkpage0.bmp" ;
};
Bitmap BMP_PAGE_OFF_H
{
    File = "chkpage0_h.bmp" ;
};

Bitmap BMP_PRESOBJ_GRAPHIC
{
    File = "image.bmp" ;
};
Bitmap BMP_PRESOBJ_OBJECT
{
    File = "object.bmp" ;
};
Bitmap BMP_PRESOBJ_CHART
{
    File = "chart.bmp" ;
};
Bitmap BMP_PRESOBJ_ORGCHART
{
    File = "orgchart.bmp" ;
};
Bitmap BMP_PRESOBJ_TABLE
{
    File = "table.bmp" ;
};
Bitmap BMP_WAIT_ICON
{
    File = "waiticon.bmp";
};

// ----------------------------------------

#ifdef STARIMAGE_AVAILABLE
Bitmap BMP_PRESOBJ_IMAGE
{
    File = "image.bmp" ;
};
#endif

































