/*************************************************************************
*
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: dateadd.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 23:23:12 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
************************************************************************/


#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/sheet/LocalizedName.idl>

module com
{
module sun
{
module star
{
module sheet
{
module addin
{
    interface XCompatibilityNames  : com::sun::star::uno::XInterface
    {
        /// @return a sequence with all localized names for a programmatic name
        sequence< com::sun::star::sheet::LocalizedName > getCompatibilityNames ( [in] string aProgrammaticName );
    };

    /**
     * Interface with date functions.
     */
    interface XDateFunctions : com::sun::star::uno::XInterface
    {
        /// calculates the number of weeks between two dates.
        long getDiffWeeks(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nEndDate, [in] long nMode )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// calculates the number of months between two dates.
        long getDiffMonths(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nEndDate, [in] long nMode )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// calculates the number of years between two dates.
        long getDiffYears(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nEndDate, [in] long nMode )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// checks if a date is in a leap year.
        long getIsLeapYear(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nDate )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// calculates the number of days in a month.
        long getDaysInMonth(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nDate )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// calculates the number of days in a year.
        long getDaysInYear(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nDate )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// calculates the number of weeks in a year.
        long getWeeksInYear(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nDate )
            raises( com::sun::star::lang::IllegalArgumentException );
    };

    /**
     * Interface with miscellaneous functions.
     */
    interface XMiscFunctions : com::sun::star::uno::XInterface
    {
        /// Encrypts or decrypts a string using the ROT13 algorithm.
        string getRot13( [in] string aSrcString )
            raises( com::sun::star::lang::IllegalArgumentException );
    };

    service DateFunctions
    {
        // exported interfaces:
        interface XDateFunctions;
        interface XMiscFunctions;
    };
};
};
};
};
};

