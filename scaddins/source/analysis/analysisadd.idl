/*************************************************************************
 *
 *  $RCSfile: analysisadd.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: gt $ $Date: 2001-07-18 09:16:23 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/


#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/sheet/LocalizedName.idl>

module com
{
module sun
{
module star
{
module sheet
{
module addin
{
    interface XCompatibilityNames  : com::sun::star::uno::XInterface
    {
        /// getCompatibilityNames.
        sequence< com::sun::star::sheet::LocalizedName > getCompatibilityNames ( [in] string aProgrammaticName );
    };

    /**
     * Interface with analysis functions.
     */
    interface XAnalysis : com::sun::star::uno::XInterface
    {
        /// _test.
//      double get_Test(
//                  [in] com::sun::star::beans::XPropertySet xOptions,
//                  [in] long Mode, [in] double f1, [in] double f2, [in] double f3 );

        /// workday.
        long getWorkday(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nDays, [in] any aHolidays );

        /// yearfrac.
        double getYearfrac(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long StartDate, [in] long EndDate, [in] any Mode );

        /// edate.
        long getEdate(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nNumOfMonths );

        /// weeknum.
        long getWeeknum(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nMode );

        /// eomonth.
        long getEomonth(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long nStartDate, [in] long nMonths );

        /// networkdays.
        long getNetworkdays(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long StartDate, [in] long EndDate, [in] any Holidays );

        /// iseven.
        long getIseven( [in] long nValue );

        /// isodd.
        long getIsodd( [in] long nValue );

        /// multinomial.
        double getMultinomial( [in] sequence< sequence<long> > aValList );

        /// seriessum.
        double getSeriessum( [in] double X, [in] double N, [in] double M, [in] sequence< sequence<double> > CoeffList );

        // quotient.
        double getQuotient( [in] double Num, [in] double Denum );

        // mround.
        double getMround( [in] double Number, [in] double Multiple );

        // sqrtpi.
        double getSqrtpi( [in] double Number );

        // randbetween.
        double getRandbetween( [in] double Min, [in] double Max );

        /// gcd.
        double getGcd( [in] sequence< sequence<double> > FirstValList, [in] sequence< any > OptionalValList );

        /// lcm.
        double getLcm( [in] sequence< sequence< any > > FirstValList, [in] sequence< any > OptionalValList );

        /// besseli.
        double getBesseli( [in] double Num, [in] long Order );

        /// besselj.
        double getBesselj( [in] double Num, [in] long Order );

        /// besselk.
        double getBesselk( [in] double Num, [in] long Order );

        /// bessely.
        double getBessely( [in] double Num, [in] long Order );

        /// bin2oct.
        string getBin2Oct( [in] string BinaryNum, [in] any Places );

        /// bin2dec.
        double getBin2Dec( [in] string BinaryNum );

        /// bin2hex.
        string getBin2Hex( [in] string BinaryNum, [in] any Places );

        /// oct2bin.
        string getOct2Bin( [in] string OctalNum, [in] any Places );

        /// oct2dec.
        double getOct2Dec( [in] string OctalNum );

        /// oct2hex.
        string getOct2Hex( [in] string OctalNum, [in] any Places );

        /// dec2bin.
        string getDec2Bin( [in] long Value, [in] any Places );

        /// dec2oct.
        string getDec2Oct( [in] long Value, [in] any Places );

        /// dec2hex.
        string getDec2Hex( [in] double Value, [in] any Places );

        /// hex2bin.
        string getHex2Bin( [in] string HexadecimalValue, [in] any Places );

        /// hex2dec.
        double getHex2Dec( [in] string HexadecimalValue );

        /// hex2oct.
        string getHex2Oct( [in] string HexadecimalValue, [in] any Places );

        /// delta.
        long getDelta( [in] double Num1, [in] any Num2 );

        /// erf.
        double getErf( [in] double LowerLimit, [in] any UpperLimit );

        /// erfc.
        double getErfc( [in] double LowerLimit );

        /// gestep.
        long getGestep( [in] double Num, [in] any Step );

        /// factdouble.
        double getFactdouble( [in] long Num );

        /// imabs.
        double getImabs( [in] string Num );

        /// imaginary.
        double getImaginary( [in] string Num );

        /// impower.
        string getImpower( [in] string Num, [in] double Power );

        /// imargument.
        double getImargument( [in] string Num );

        /// imcos.
        string getImcos( [in] string Num );

        /// imdiv.
        string getImdiv( [in] string Num1, [in] string Num2 );

        /// imexp.
        string getImexp( [in] string Num );

        /// imconjugate.
        string getImconjugate( [in] string Num );

        /// imln.
        string getImln( [in] string Num );

        /// imlog10.
        string getImlog10( [in] string Num );

        /// imlog2.
        string getImlog2( [in] string Num );

        /// improduct.
        string getImproduct( [in] sequence< sequence<string> > Num1, [in] sequence<any> NumberList );

        /// imreal.
        double getImreal( [in] string Num );

        /// imsin.
        string getImsin( [in] string Num );

        /// imsub.
        string getImsub( [in] string Num1, [in] string Num2 );

        /// imsum.
        string getImsum( [in] sequence< sequence<string> > Num1, [in] sequence<any> OptNums );

        /// imsqrt.
        string getImsqrt( [in] string Num );

        /// complex.
        string getComplex( [in] double Real, [in] double Imaginary, [in] any Suffix );

        /// convert.
        double getConvert( [in] double Value, [in] string FromUnit, [in] string ToUnit );


        /// amordegrc.
        double getAmordegrc(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] double Cost, [in] long Date, [in] long FirstPer, [in] double RestVal,
                    [in] double Periode, [in] double Rate, [in] any Base );

        /// amorlinc.
        double getAmorlinc(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] double Cost, [in] long Date, [in] long FirstPer, [in] double RestVal,
                    [in] double Periode, [in] double Rate, [in] any Base );

        /// accrint.
        double getAccrint(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Issue, [in] long FirstInterest, [in] long Settlement, [in] double Rate,
                    [in] double Value, [in] long Frequency, [in] any Base );

        /// accrintm.
        double getAccrintm(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Issue, [in] long Settlement, [in] double Rate, [in] any Value, [in] any Base );

        /// received.
        double getReceived(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Investment, [in] double Discount,
                    [in] any Base );

        /// disc.
        double getDisc(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Price, [in] double Redemption,
                    [in] any Base );

        /// duration.
        double getDuration(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Coupon, [in] double Yield,
                    [in] long Frequncy, [in] any Base );

        /// effect.
        double getEffect( [in] double Nomial, [in] long NumOfPeriods );

        /// cumprinc.
        double getCumprinc(
                    [in] double Rate, [in] long NumOfPeriods, [in] double Val, [in] long StartPeriode,
                    [in] long EndPeriode, [in] long PayType );

        /// cumipmt.
        double getCumipmt(
                    [in] double Rate, [in] long NumOfPeriods, [in] double Val, [in] long StartPeriode,
                    [in] long EndPeriode, [in] long PayType );

        /// price.
        double getPrice(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Rate, [in] double Yield,
                    [in] double Redemption, [in] long Frequncy, [in] any Base );

        /// pricedisc.
        double getPricedisc(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Discont, [in] double Redemption,
                    [in] any Base );

        /// pricemat.
        double getPricemat(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] long Issue, [in] double Rate, [in] double Yield,
                    [in] any Base );

        /// mduration.
        double getMduration(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Coupon, [in] double Yield,
                    [in] long Frequency, [in] any Base );

        /// nominal.
        double getNominal( [in] double Rate, [in] long NumOfPeriods );

        /// dollarfr.
        double getDollarfr( [in] double DollarDecimal, [in] long Fraction );

        /// dollarde.
        double getDollarde( [in] double DollarFractional, [in] long Fraction );

        /// yield.
        double getYield(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Coupon, [in] double Price,
                    [in] double Redemption, [in] long Frequency, [in] any Base );

        /// yielddisc.
        double getYielddisc(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Price,
                    [in] double Redemption, [in] any Base );

        /// yieldmat.
        double getYieldmat(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] long Issue, [in] double Rate,
                    [in] double Price, [in] any Base );

        /// tbilleq.
        double getTbilleq(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Discont );

        /// tbillprice.
        double getTbillprice(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Discont );

        /// tbillyield.
        double getTbillyield(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] double Price );

        /// oddfprice.
        double getOddfprice(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] long Issue, [in] long FirstCouponDate,
                    [in] double Rate, [in] double Yield, [in] double Redemption,
                    [in] long Frequency, [in] any Base );

        /// oddfyield.
        double getOddfyield(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] long Issue, [in] long FirstCouponDate,
                    [in] double Rate, [in] double Price, [in] double Redemption,
                    [in] long Frequency, [in] any Base );

        /// oddlprice.
        double getOddlprice(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] long LastInterest,
                    [in] double Rate, [in] double Yield, [in] double Redemption,
                    [in] long Frequency, [in] any Base );

        /// oddlyield.
        double getOddlyield(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity, [in] long LastInterest,
                    [in] double Rate, [in] double Price, [in] double Redemption,
                    [in] long Frequency, [in] any Base );

        /// xirr.
        double getXirr(
                    [in] sequence< sequence< double > > Values,
                    [in] sequence< sequence< long > > Dates, [in] any Guess );

        /// xnpv.
        double getXnpv(
                    [in] double Rate,
                    [in] sequence< sequence< double > > Values,
                    [in] sequence< sequence< long > > Dates );

        /// intrate.
        double getIntrate(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] double Investment, [in] double Redemption, [in] any Base );

        /// coupncd.
        double getCoupncd(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] long Frequency, [in] any Base );

        /// coupdays.
        double getCoupdays(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] long Frequency, [in] any Base );


        /// coupdaysnc.
        double getCoupdaysnc(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] long Frequency, [in] any Base );

        /// coupdaybs.
        double getCoupdaybs(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] long Frequency, [in] any Base );

        /// couppcd.
        double getCouppcd(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] long Frequency, [in] any Base );

        /// coupnum.
        double getCoupnum(
                    [in] com::sun::star::beans::XPropertySet xOptions,
                    [in] long Settlement, [in] long Maturity,
                    [in] long Frequency, [in] any Base );

        /// fvschedule.
        double getFvschedule( [in] double Principal, [in] sequence< sequence< double > > Schedule );
    };

    service Analysis
    {
        // exported interfaces:
        interface XCompatibilityNames;
        interface XAnalysis;
    };
};
};
};
};
};

