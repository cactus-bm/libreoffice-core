<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FormWizard" script:language="StarBasic">Option Explicit
&apos;Very new version
Public DocumentName as String
Public FormPath$, FormDBName$, FormReturnValue$
Public TemplatePath$
Public WizardPath as String
Public WebWizardPath as String
Public WorkPath as String
Public TexturePath as String
Public sQueryName as String
Public NumberofStyles as Integer
Public oDBConnection as Object
Public s_aCurrencySymbol As String
Public s_aPrependCurrencySymbol As Boolean

Public bNeedFieldRefresh as Boolean
Public bIsQuery as Boolean
Public oDBForm as Object
Public oColumns() as Object
Public sDatabaseList()
Public TableNames() as String
Public QueryNames() as String
Public FieldNames() as String
Public oDBContext as Object
Public oUcb as Object
Public oDocInfo as Object
&apos;Public TemplateList(50,1) as String
Public WidthList(27,3) as Long
Public ControlList(1 To 9) as String
Public sDBName as String
Public Tablename as String


Sub MainWithDefault()
&apos;On Local Error Goto GlobalError
	BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	BasicLibraries.LoadLibrary(&quot;WebWizard&quot;)
	bControlsareCreated = False
	If Not InitResources(&quot;Formwizard&quot;,&quot;dbw&quot;) Then
		Exit Sub
	End If
	MaxIndex = -1
	oDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	FormPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/bitmap&quot;)
	WebWizardPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/web&quot;)
	WizardPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/&quot;)
	TexturePath = GetOfficeSubPath(&quot;Gallery&quot;, &quot;www-back/&quot;)
	WorkPath = GetPathSettings(&quot;Work&quot;)
	OpenBaseDocument()
	GetDatabaseNames()
	InitializeWidthList()
	&apos; calc some special currency control properties (they depend from the system language)
	&apos; Todo: What&apos;s going on here?
&apos;	calcCurrencyProperties()
	LoadLanguage
	bNeedFieldRefresh = True
	CreateForm()
GlobalError:
	If Err &lt;&gt; 0 Then
		ToggleWindow(True)
		MsgBox(sMsgErrMsg , 16, sMsgWizardName)
	End If
End Sub


Sub CreateForm() as String
Dim i as Integer
&apos; On Error Goto GlobalError
	With oDialogModel
		.optIgnoreBinaries.State = True
		.optUseDocument.State = True
		.cmdBack.Enabled = False
		.cmdGoOn.Enabled = False
		.lblTables.Enabled = False
		.lstSelFields.Tag = False
		ToggleListboxControls(oDialogModel, False)
		.Step = 1
		.lstDatabases.StringItemList()= sDatabaseList()&apos; = AddItem(sDatabaseList(i)
	End With
	DlgFormDB.Title = WizardTitle(1)
	NumberofStyles = FillupWebListbox(oUcb, &quot;/stl&quot;, DlgFormDB, &quot;lstStyles&quot;, Styles())
	ImportStyles()
	ToggleWindow(True)
	oDialogModel.imgTheme.ImageURL = FormPath &amp; &quot;FormWizard_1.bmp&quot;
	DlgFormDB.Execute()
	Exit Sub

GlobalError:
	MsgBox(sMsgErrMsg , 16, sMsgWizardName)
	ToggleWindow(True)
	DlgFormDB.EndExecute()
	Reset
	Stop
End Sub


Function AddListtoList(FirstArray(), SecondArray(), Optional StarIndex)
Dim n as Integer
Dim m as Integer
Dim MaxIndex as Integer
	MaxIndex = Ubound(FirstArray()) + Ubound(SecondArray()) + 1
	Dim ResultArray(MaxIndex)
	For m = 0 To Ubound(FirstArray())
		ResultArray(m) = FirstArray(m)
	Next m
	For n = 0 To Ubound(SecondArray())
		ResultArray(m) = SecondArray(n)
		m = m + 1
	Next n
	AddListToList() = ResultArray()
End Function


Sub FormGetFields()
Dim i as Integer
Dim n as Integer
	ToggleDatabasePage(False)
	n = Ubound(oDialogModel.lstTables.SelectedItems())
	InitializeListboxProcedures(oDialogModel, oDialogModel.lstFields, oDialogModel.lstSelFields)
	If n &lt;&gt; -1 Then
		Tablename = Tablenames(oDialogModel.lstTables.SelectedItems(0))
		bIsQuery = FieldinArray(QueryNames(), Ubound(QueryNames()), TableName)
		If (bIsQuery) Then
			oColumns = oDBConnection.Queries.GetByName(TableName).Columns
		Else
			oColumns = oDBConnection.Tables.GetByName(Tablename).Columns
		End If
		GetSpecificFieldNames()
		ToggleListboxControls(oDialogModel, True)
	End If
	ToggleDatabasePage(True)

&apos;	bNeedFieldRefresh = False
	Exit Sub
no_fields:
	MsgBox sMsgErrCouldNotOpenObject, 16, sMsgWizardName
End Sub


Sub CancelFormWizard()
	DlgFormDB.EndExecute()
	DlgFormDB.Dispose()
	oDocument.Dispose()
	Stop
End Sub


Sub PreviousStep()
Dim CurStep as Integer
	CurStep = oDialogModel.Step - 1
	oDialogModel.Step = CurStep
	oDialogModel.cmdBack.Enabled = CurStep &lt;&gt; 1
	oDialogModel.cmdGoOn.Enabled = True
	Select Case oDialogModel.Step
		Case 1
			oDialogModel.lstSelFields.Tag = Not bControlsareCreated
		Case 2
			oDialogModel.cmdGoOn.Label = sGoOn	
	End Select
	oDialogModel.imgTheme.ImageUrl = FormPath &amp; &quot;FormWizard_&quot; &amp; CurStep &amp; &quot;.bmp&quot;	
	DlgFormDB.Title = WizardTitle(CurStep)
End Sub


Sub NextStep()
	Select Case oDialogModel.Step
		Case 1
			GetTableMetaData()
			CreateDBForm()
			InitializeLayoutSettings()
			oDialogModel.Step = 2
			oDBForm.Load
		Case 2
			oDialogModel.cmdGoOn.Label = sReady
			ToggleControlsofLastPage()
			oDialogModel.Step = 3
		Case 3
			HandleCreatedDocument()
	End Select
	oDialogModel.imgTheme.ImageUrl = FormPath &amp; &quot;FormWizard_&quot; &amp; oDialogModel.Step &amp; &quot;.bmp&quot;
	DlgFormDB.Title = WizardTitle(oDialogModel.Step)	
End Sub


Sub InitializeLayoutSettings()
&apos; Todo: Dieses Flag neu setzen!
	bControlsAreCreated =  False &apos;Not (CBool(oDialogModel.lstSelFields.Tag))
	If Not bControlsAreCreated Then
		oDialogModel.optTiled.State = 1
		OldArrangement = 0
		CurArrangement = cTabled
		CurBorderType = SB3DBORDER
		CurAlignmode = SBALIGNLEFT
		ToggleBorderGroup(bControlsAreCreated)
		ToggleAlignGroup(bControlsAreCreated)
		ArrangeControls()
	End If
End Sub


Sub HandleCreatedDocument()
Dim sPath as String
Dim NoArgs() as new com.sun.star.beans.PropertyValue
Dim DocTitle as String
Dim sDirPath as String
	On Local Error Goto NOSAVING

	If oDialogModel.optSaveDocument.State = 1 Then
		sDirPath = ConvertToUrl(oDialogModel.txtInputPath.Text)
		sDirPath = RTrimStr(sDirPath,&quot;/&quot;)
		DocTitle = oDialogModel.txtTitle.Text	
		sPath = sDirPath &amp; &quot;/&quot; &amp; DocTitle &amp; &quot;.sxw&quot;
		
		oDocument.StoreToUrl(sPath,NoArgs()
		NOSAVING:
		If Err &lt;&gt; 0 Then
			Msgbox(&quot;Todo: Resourcen f√ºr fehlerhaftes Abspeichern suchen!&quot;, 16, GetProductname)
			Resume CLERROR
		Else
			DlgFormDB.EndExecute()
			oDocument.Dispose
		End If
		CLERROR:
	Else
		DlgFormDB.EndExecute()
	End If
End Sub


Sub ChangeDocumentTitle
	oDocument.DocumentInfo.Title = oDialogModel.txtTitle.Text
End Sub


Sub CheckPathValidation()
Dim sPath as String
Dim sDir as String
	sPath = ConvertToUrl(oDialogModel.txtInputPath.Text)
	If sPath &lt;&gt; &quot;&quot; Then
		sDir = DirectorynameoutofPath(sPath, &quot;/&quot;)
	End If	
	If oUcb.IsFolder(sDir) Then
		oDialogModel.cmdGoOn.Enabled = oUcb.Exists(sDir)
	Else
		oDialogModel.cmdGoOn.Enabled = False
	End If
End Sub


Sub ToggleControlsofLastPage()
	With oDialogModel
		If .optUseDocument.State = 1 Then
			.cmdGoOn.Enabled = True
			.txtInputPath.Enabled = False
			.cmdGetPathDialog.Enabled = False
			.lblPath.Enabled = False
		Else
			.lblPath.Enabled = True
			.txtInputPath.Enabled = True
			.cmdGetPathDialog.Enabled = True
			CheckPathValidation()
		End If
	End With
End Sub


Sub ToggleDatabasePage(bDoEnable as Boolean)
	With oDialogModel
		.hlnBinaries.Enabled = bDoEnable
		.optIgnoreBinaries.Enabled = bDoEnable
		.optBinariesasGraphics.Enabled = bDoEnable
		.cmdHelp.Enabled = bDoEnable
	End With
End Sub


Sub SwitchDialogHeight()
	SwitchWizardDialogHeight(DlgFormDB)
End Sub
</script:module>