<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FormWizard" script:language="StarBasic">Option Explicit

&apos; Todo: Gruppieren der DBControls mit den Textfeldern einbinden
&apos; Evtl könnte dies auch am Ende geschehen
Public DocumentName as String
Public FormPath$, FormDBName$, FormReturnValue$
Public TemplatePath$
Public WizardPath as String
Public WebWizardPath as String
Public WorkPath as String
Public TexturePath as String
Public sQueryName as String
Public NumberofStyles as Integer
Public oDBConnection as Object

Public bNeedFieldRefresh as Boolean
Public oDBForm as Object
Public oColumns() as Object
Public sDatabaseList()
Public TableNames() as String
Public QueryNames() as String
Public FieldNames() as String
Public oDBContext as Object
Public oUcb as Object
Public oDocInfo as Object
&apos;Public TemplateList(50,1) as String
Public WidthList(15,4)
Public ImgWidthList(3,4)
Public sDBName as String
Public Tablename as String

&apos; Todo: Mit FS abschnacken, dass als CommandType Nur Queries und Tables zugelassen sind. Dabei müsste noch abgklärt werden
&apos; wann ein Content ein &apos;Command&apos; ist.


&apos; The macro can be called in 4 possible scenarios:
&apos; Scenario 1. No parameters at given
&apos; Scenario 2: Only Datasourcename is given, but no connection and no Content
&apos; Scenario 3: a data source and a connection are given
&apos; Scenario 4: all parameters (data source name, connection, object type and object) are given

Sub Main()
Dim oLocDBContext as Object
Dim oLocConnection as Object

&apos; Scenario 1. No parameters at given
	MainWithDefault()

&apos; Scenario 2: Only Datasourcename is given, but no connection and no Content
&apos;	MainWithDefault(&quot;Bibliography&quot;)

&apos; Scenario 3: a data source and a connection are given
&apos;	oLocDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
&apos;	oLocConnection = oLocDBContext.GetByName(&quot;Bibliography&quot;).GetConnection(&quot;&quot;,&quot;&quot;)
&apos;	MainWithDefault(&quot;Bibliography&quot;, oLocConnection)

&apos; Scenario 4: all parameters (data source name, connection, object type and object) are given
&apos;	oLocDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
&apos;	oLocConnection = oLocDBContext.GetByName(&quot;Bibliography&quot;).GetConnection(&quot;&quot;,&quot;&quot;)
&apos;	MainWithDefault(&quot;Bibliography&quot;, oLocConnection, com.sun.star.sdb.CommandType.TABLE, &quot;biblio&quot;)
End Sub


Sub MainWithDefault(Optional DatasourceName as String, Optional oConnection as Object, Optional CommandType as Integer, Optional sContent as String)
Dim i as Integer
Dim SelCount as Integer
&apos;On Local Error Goto GlobalError
	BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	BasicLibraries.LoadLibrary(&quot;WebWizard&quot;)
&apos; Todo: Variable is initialized due to Bug#88329
	CurArrangement = 0
	bControlsareCreated = False
	MaxIndex = -1
	If Not InitResources(&quot;Formwizard&quot;,&quot;dbw&quot;) Then
		Exit Sub
	End If
	oDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	FormPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/bitmap&quot;)
	WebWizardPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/web&quot;)
	WizardPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/&quot;)
	TexturePath = GetOfficeSubPath(&quot;Gallery&quot;, &quot;www-back/&quot;)
	WorkPath = GetPathSettings(&quot;Work&quot;)
	OpenFormDocument()
	GetDatabaseNames()
	InitializeWidthList()
	LoadLanguage
	bNeedFieldRefresh = True

	With oDialogModel
		.optIgnoreBinaries.State = True
		.cmdBack.Enabled = False
		.cmdGoOn.Enabled = False
		.lblTables.Enabled = False
		.lstSelFields.Tag = False
		.Step = 1
		.lstDatabases.StringItemList()= sDatabaseList()&apos; = AddItem(sDatabaseList(i)
	End With
	If Not IsMissing(DataSourceName) Then
		DlgFormDB.GetControl(&quot;lstDatabases&quot;).SelectItem(DataSourceName, True)
		If Not IsMissing(oConnection) Then
			&apos; Scenario 3: a data source and a connection are given
			Set oDBConnection = oConnection
			oDialogModel.lstTables.Enabled = True
			oDialogModel.lblTables.Enabled = True
			If GetDBMetaData() Then
				oDialogModel.lstTables.StringItemList() = AddListToList(TableNames(), QueryNames())
				If Not IsMissing(sContent) Then
					&apos; Scenario 4: all parameters (data source name, connection, object type and object) are given
					iCommandTypes() = CreateCommandTypeList()
					SelCount = CountItemsInArray(oDialogModel.lstTables.StringItemList(), sContent)
					If SelCount = 1 Then
						DlgFormDB.GetControl(&quot;lstTables&quot;).SelectItem(sContent, True)
					Else 		&apos; Note: Here is no Error Handling in case that no valid content is transferred
						If CommandType = com.sun.star.sdb.CommandType.QUERY Then
							SelIndex = IndexInArray(sContent, QueryNames()
							DlgFormDB.GetControl(&quot;lstTables&quot;).SelectItemPos(SelIndex, True)
						ElseIf CommandType = com.sun.star.sdb.CommandType.TABLE Then
							SelIndex = IndexInArray(sContent, TableNames()
							DlgFormDB.GetControl(&quot;lstTables&quot;).SelectItemPos(Ubound(QueryNames()+1 + SelIndex, True)				
						End If
					End If
					CurCommandType = CommandType
					FillUpFieldsListbox(False)
				End If
			End If
		Else
			&apos; Scenario 2: Only Datasourcename is given, but no connection and no Content
			GetSelectedDBMetaData()
		End If
	Else
		&apos; Scenario 1: No parameters are given 
		ToggleListboxControls(oDialogModel, False)
	End If

	DlgFormDB.Title = WizardTitle(1)
	NumberofStyles = FillupWebListbox(oUcb, &quot;/stl&quot;, DlgFormDB, &quot;lstStyles&quot;, Styles())
	ImportStyles()
	ToggleWindow(True)
	oDialogModel.imgTheme.ImageURL = FormPath &amp; &quot;FormWizard_1.bmp&quot;
	DlgFormDB.Execute()
	DlgFormDB.Dispose
	If Not IsNull(oDBConnection) Then
		oDBConnection.Dispose()
	End If
	oDocument.Dispose
	Exit Sub
GlobalError:
	MsgBox(sMsgErrMsg , 16, sMsgWizardName)
	ToggleWindow(True)
	DlgFormDB.EndExecute()
End Sub


Sub FormGetFields()
Dim i as Integer
	ToggleDatabasePage(False)
	FillUpFieldsListbox(True)
	ToggleDatabasePage(True)
End Sub


Sub FillUpFieldsListbox(bGetCommandType as Boolean)
Dim n as Integer
Dim SelIndex as Integer
	n = Ubound(oDialogModel.lstTables.SelectedItems())
	If n &gt; -1 Then
		SelIndex = oDialogModel.lstTables.SelectedItems(0)
		If bGetCommandType Then
			CurCommandType = iCommandTypes(SelIndex)
		End If
		Tablename = Tablenames(SelIndex)
		If CurCommandType = com.sun.star.sdb.CommandType.QUERY Then
			oColumns = oDBConnection.Queries.GetByName(TableName).Columns
		Else
			oColumns = oDBConnection.Tables.GetByName(Tablename).Columns
		End If
		GetSpecificFieldNames()
		ToggleListboxControls(oDialogModel, True)
	End If
	Exit Sub
&apos;TODO: Diese Fehlermarke sinnvoll einbinden	
NOFIELDS:
	MsgBox sMsgErrCouldNotOpenObject, 16, sMsgWizardName
End Sub


Sub CancelFormWizard()
	DlgFormDB.EndExecute()
End Sub


Sub PreviousStep()
	With oDialogModel
		.Step = 1
		.cmdBack.Enabled = False
		.cmdGoOn.Enabled = True
		.lstSelFields.Tag = Not bControlsareCreated
		.cmdGoOn.Label = sGoOn
		.imgTheme.ImageUrl = FormPath &amp; &quot;FormWizard_1.bmp&quot;	
	End With
	DlgFormDB.Title = WizardTitle(1)
End Sub


Sub NextStep()
Dim bOldVisible
	&apos; Note: Unfortunately it is not possible to query the visibility of the imagecontrol directly
	bOldVisible = oDialogModel.Height &gt; 40
	Select Case oDialogModel.Step
		Case 1
			bControlsAreCreated = Not (CBool(oDialogModel.lstSelFields.Tag))
			If Not bControlsAreCreated Then
				GetTableMetaData()
				CreateDBForm()
				RemoveShapes()
				InitializeLayoutSettings()
				oDBForm.Load
			End If
			oDialogModel.cmdGoOn.Label = sReady
			oDialogModel.cmdBack.Enabled = True
			oDialogModel.Step = 2
		Case 2
			StoreForm()
	End Select
	DlgFormDB.GetControl(&quot;imgTheme&quot;).Visible = bOldVisible
	oDialogModel.imgTheme.ImageUrl = FormPath &amp; &quot;FormWizard_&quot; &amp; oDialogModel.Step &amp; &quot;.bmp&quot;
	DlgFormDB.Title = WizardTitle(oDialogModel.Step)
End Sub


Sub InitializeLayoutSettings()
	If oPageStyle.BackGraphicLocation = com.sun.star.style.GraphicLocation.TILED Then
		oDialogModel.optTiled.State = 1
	Else
		oDialogModel.optArea.State = 1
	End If
	SwitchArrangementButtons(cTabled)
	SwitchAlignMode(SBALIGNLEFT)
	SwitchBorderMode(SB3DBORDER)
	ToggleBorderGroup(bControlsAreCreated)
	ToggleAlignGroup(bControlsAreCreated)
	ArrangeControls()
	If OldAlignMode &lt;&gt; 0 Then
		DlgFormDB.GetControl(&quot;cmdAlign&quot; &amp; OldAlignmode).Model.State = 0
	End If
End Sub


Sub ToggleDatabasePage(bDoEnable as Boolean)
	With oDialogModel
		.hlnBinaries.Enabled = bDoEnable
		.optIgnoreBinaries.Enabled = bDoEnable
		.optBinariesasGraphics.Enabled = bDoEnable
		.cmdHelp.Enabled = bDoEnable
	End With
End Sub


Sub StoreForm()
Dim bDocIsStored as Boolean
Dim FilterNames(1,2) as String
Dim oMasterKey as Object
Dim oFilters() as Object
	oMasterKey = GetRegistryKeyContent(&quot;org.openoffice.Office.TypeDetection/&quot;)
	oFilters() = oMasterKey.Types
	FilterNames(0,0) = oFilters.GetByName(&quot;writer_StarOffice_XML_Writer&quot;).UIName
	FilterNames(0,1) = &quot;*.sxw&quot;
	FilterNames(0,2) = &quot;&quot;
	FilterNames(1,0) = oFilters.GetByName(&quot;writer_StarOffice_XML_Writer_Template&quot;).UIName
	FilterNames(1,1) = &quot;*.stw&quot;
	FilterNames(1,2) = &quot;swriter: writer_StarOffice_XML_Writer_Template&quot;
	bDocIsStored = StoreDocument(oDocument, FilterNames(), &quot;Form_&quot; &amp; sDBName &amp; &quot;.&quot; &amp; TableName, WorkPath)
	If bDocIsStored Then
		DlgFormDB.EndExecute()
	End If
End Sub


Sub HelperDialog()
&apos;Todo: The String &quot;start&quot; can be replaced by a HelpIndex
	StarDesktop.LoadComponentfromUrl(&quot;vnd.sun.star.help://&quot; &amp; sDocType &amp; &quot;/start&quot;, &quot;_OFFICE_HELP&quot;, 64, NoArgs())
End Sub
</script:module>