<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
 <script:module xmlns:script="http://openoffice.org/2000/script" script:name="FormWizard" script:language="StarBasic">Option Explicit

Public DocumentName as String
Public FormPath as String
Public WizardPath as String
Public WebWizardPath as String
Public WorkPath as String
Public TexturePath as String
Public sQueryName as String
Public NumberofStyles as Integer
Public oDBConnection as Object
Public bWithBackGraphic as Boolean
Public bNeedFieldRefresh as Boolean
Public oDBForm as Object
Public oColumns() as Object
Public sDatabaseList()
Public TableNames() as String
Public QueryNames() as String
Public FieldNames() as String
Public ImgFieldNames() as String
Public oDBContext as Object
Public oUcb as Object
Public oDocInfo as Object
Public WidthList(15,3)
Public ImgWidthList(3,3)
Public sDBName as String
Public Tablename as String
Public Const SBSIZETEXT = &quot;The quick brown fox jumps over the lazy dog. The quick brown fox jumps over the lazy dog.&quot;
Public bDisposeDoc as Boolean
Public bDebug as Boolean


&apos; The macro can be called in 4 possible scenarios:
&apos; Scenario 1. No parameters at given
&apos; Scenario 2: Only Datasourcename is given, but no connection and no Content
&apos; Scenario 3: a data source and a connection are given
&apos; Scenario 4: all parameters (data source name, connection, object type and object) are given

Sub Main()
Dim oLocDBContext as Object
Dim oLocConnection as Object

&apos; Scenario 1. No parameters at given
	MainWithDefault()

&apos; Scenario 2: Only Datasourcename is given, but no connection and no Content
&apos;	MainWithDefault(&quot;Bibliography&quot;)

&apos; Scenario 3: a data source and a connection are given
&apos;	oLocDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
&apos;	oLocConnection = oLocDBContext.GetByName(&quot;Bibliography&quot;).GetConnection(&quot;&quot;,&quot;&quot;)
&apos;	MainWithDefault(&quot;Bibliography&quot;, oLocConnection)

&apos; Scenario 4: all parameters (data source name, connection, object type and object) are given
&apos;	oLocDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
&apos;	oLocConnection = oLocDBContext.GetByName(&quot;Bibliography&quot;).GetConnection(&quot;&quot;,&quot;&quot;)
&apos;	MainWithDefault(&quot;Bibliography&quot;, oLocConnection, com.sun.star.sdb.CommandType.TABLE, &quot;biblio&quot;)
End Sub


Sub MainWithDefault(Optional DatasourceName as String, Optional oConnection as Object, Optional CommandType as Integer, Optional sContent as String)
Dim i as Integer
Dim SelCount as Integer
	BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	BasicLibraries.LoadLibrary(&quot;WebWizard&quot;)
	bDebug = True
	If Not bDebug Then
		On Local Error GoTo WIZARDERROR
	End If
	OpenFormDocument()
	CurArrangement = 0
	bControlsareCreated = False
	bEnableBinaryOptionGroup = False
	bDisposeDoc = True
	MaxIndex = -1
	If Not InitResources(&quot;Formwizard&quot;,&quot;dbw&quot;) Then
		Exit Sub
	End If
	oDBContext = CreateUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	FormPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/bitmap&quot;)
	WebWizardPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/web&quot;)
	WizardPath = GetOfficeSubPath(&quot;Template&quot;,&quot;wizard/&quot;)
	TexturePath = GetOfficeSubPath(&quot;Gallery&quot;, &quot;www-back/&quot;)
	WorkPath = GetPathSettings(&quot;Work&quot;)
	ToggleWindow(False)
	oProgressBar.Value = 5
	GetDatabaseNames()
	oProgressBar.Value = 10
	InitializeWidthList()
	oProgressBar.Value = 20
	LoadLanguage
	InitializeLabelValues()
	oProgressBar.Value = 30
	bNeedFieldRefresh = True
	With oDialogModel
		.cmdBack.Enabled = False
		.cmdGoOn.Enabled = False
		.lblTables.Enabled = False
		.lstSelFields.Tag = False
		.Step = 1
		.lstDatabases.StringItemList()= sDatabaseList()&apos; = AddItem(sDatabaseList(i)
	End With
	If Not IsMissing(DataSourceName) Then
		sDBName = DataSourceName
		DlgFormDB.GetControl(&quot;lstDatabases&quot;).SelectItem(DataSourceName, True)
		If Not IsMissing(oConnection) Then
			&apos; Scenario 3: a data source and a connection are given
			Set oDBConnection = oConnection
			oDataSource = oDBContext.GetByName(DataSourceName)
			oDialogModel.lstTables.Enabled = True
			oDialogModel.lblTables.Enabled = True
			If GetDBMetaData() Then
				oDialogModel.lstTables.StringItemList() = AddListToList(TableNames(), QueryNames())
				iCommandTypes = CreateCommandTypeList()
				If Not IsMissing(sContent) Then
					&apos; Scenario 4: all parameters (data source name, connection, object type and object) are given
					iCommandTypes() = CreateCommandTypeList()
					SelCount = CountItemsInArray(oDialogModel.lstTables.StringItemList(), sContent)
					If SelCount = 1 Then
						DlgFormDB.GetControl(&quot;lstTables&quot;).SelectItem(sContent, True)
					Else
						If CommandType = com.sun.star.sdb.CommandType.QUERY Then
							SelIndex = IndexInArray(sContent, QueryNames()
							DlgFormDB.GetControl(&quot;lstTables&quot;).SelectItemPos(SelIndex, True)
						ElseIf CommandType = com.sun.star.sdb.CommandType.TABLE Then
							SelIndex = IndexInArray(sContent, TableNames()
							DlgFormDB.GetControl(&quot;lstTables&quot;).SelectItemPos(Ubound(QueryNames()+1 + SelIndex, True)		
						End If
					End If
					CurCommandType = CommandType
					FillUpFieldsListbox(False)
				End If
			End If
		Else
			&apos; Scenario 2: Only Datasourcename is given, but no connection and no Content
			GetSelectedDBMetaData()
		End If
	Else
		&apos; Scenario 1: No parameters are given
		ToggleListboxControls(oDialogModel, False)
	End If
	oProgressBar.Value = 50
	DlgFormDB.Title = WizardTitle(1)
	NumberofStyles = FillupWebListbox(oUcb, &quot;/stl&quot;, DlgFormDB, &quot;lstStyles&quot;, Styles())
	oProgressBar.Value = 60
	CurIndex = GetCurIndex(oDialogModel.lstStyles, Styles(), NumberofStyles,8)
	SetImportStyle()
	oProgressBar.Value = 70
	ConfigurePageStyle()
	oProgressBar.Value = 80
	ToggleWindow(True)
	oProgressBar.Value = 90
	oDialogModel.imgTheme.ImageURL = FormPath &amp; &quot;FormWizard_1.bmp&quot;
	ToggleDatabasePage(True)
	oProgressBar.Value = 100
	DlgFormDB.GetControl(&quot;lstDatabases&quot;).SetFocus()
	oProgressbar.End
	DlgFormDB.Execute()
	DlgFormDB.Dispose()
	If Not IsNull(oDBConnection) Then
		oDBConnection.Dispose()
	End If
	If bDisposeDoc Then
		oDocument.Dispose()
	End If
WIZARDERROR:
	If Err &lt;&gt; 0 Then	
		Msgbox(sMsgErrMsg, 16, GetProductName())
		Resume LOCERROR
		LOCERROR:		
	End If
End Sub


Sub FormGetFields()
Dim i as Integer
	ToggleDatabasePage(False)
	FillUpFieldsListbox(True)
	ToggleDatabasePage(True)
End Sub


Sub FillUpFieldsListbox(bGetCommandType as Boolean)
Dim n as Integer
Dim SelIndex as Integer
Dim QueryIndex as Integer
	If Not bDebug Then
		On Local Error GoTo NOFIELDS
	End If
	n = Ubound(oDialogModel.lstTables.SelectedItems())
	If n &gt; -1 Then
		SelIndex = oDialogModel.lstTables.SelectedItems(0)
		If bGetCommandType Then
			CurCommandType = iCommandTypes(SelIndex)
		End If
		If CurCommandType = com.sun.star.sdb.CommandType.QUERY Then
			QueryIndex = SelIndex - Ubound(Tablenames()) - 1
			Tablename = QueryNames(QueryIndex)
			oColumns = oDBConnection.Queries.GetByName(TableName).Columns
		Else
			Tablename = Tablenames(SelIndex)
			oColumns = oDBConnection.Tables.GetByName(Tablename).Columns
		End If
		GetSpecificFieldNames()
		ToggleListboxControls(oDialogModel, True)
	End If
NOFIELDS:
	If Err &lt;&gt; 0 Then
		MsgBox sMsgErrCouldNotOpenObject, 16, sMsgWizardName
	End If
End Sub



Sub PreviousStep()
	If Not bDebug Then
		On Local Error GoTo WIZARDERROR
	End If
	With oDialogModel
		.Step = 1
		.cmdBack.Enabled = False
		.cmdGoOn.Enabled = True
		.lstSelFields.Tag = Not bControlsareCreated
		.cmdGoOn.Label = sGoOn
		.imgTheme.ImageUrl = FormPath &amp; &quot;FormWizard_1.bmp&quot;
	End With
WIZARDERROR:
	If Err &lt;&gt; 0 Then	
		Msgbox(sMsgErrMsg, 16, GetProductName())
		Resume LOCERROR
		LOCERROR:		
	End If
End Sub


Sub NextStep()
	If Not bDebug Then
		On Local Error GoTo WIZARDERROR
	End If

	Select Case oDialogModel.Step
		Case 1
			bControlsAreCreated = Not (CBool(oDialogModel.lstSelFields.Tag))
			If Not bControlsAreCreated Then
				GetTableMetaData()
				CreateDBForm()
				RemoveShapes()
				InitializeLayoutSettings()
				oDBForm.Load
			End If
			oDialogModel.cmdGoOn.Label = sReady
			oDialogModel.cmdBack.Enabled = True
			oDialogModel.Step = 2
			bDisposeDoc = False
		Case 2
			StoreForm()
	End Select
	oDialogModel.imgTheme.ImageUrl = FormPath &amp; &quot;FormWizard_&quot; &amp; oDialogModel.Step &amp; &quot;.bmp&quot;
	DlgFormDB.Title = WizardTitle(oDialogModel.Step)
WIZARDERROR:
	If Err &lt;&gt; 0 Then	
		Msgbox(sMsgErrMsg, 16, GetProductName())
		Resume LOCERROR
		LOCERROR:		
	End If
End Sub


Sub InitializeLayoutSettings()
	SwitchArrangementButtons(cTabled)
	SwitchAlignMode(SBALIGNLEFT)
	SwitchBorderMode(SB3DBORDER)
	ToggleBorderGroup(bControlsAreCreated)
	ToggleAlignGroup(bControlsAreCreated)
	ArrangeControls()
	If OldAlignMode &lt;&gt; 0 Then
		DlgFormDB.GetControl(&quot;optAlign2&quot;).Model.State = 0
	End If
End Sub


Sub ToggleDatabasePage(bDoEnable as Boolean)
	With oDialogModel
		.cmdBack.Enabled = False
		.cmdHelp.Enabled = bDoEnable
		.cmdGoOn.Enabled = Ubound(oDialogModel.lstSelFields.StringItemList()) &lt;&gt; -1
		.hlnBinaries.Enabled = ((bDoEnable = True) And (bEnableBinaryOptionGroup = True))
		.optIgnoreBinaries.Enabled = ((bDoEnable = True) And (bEnableBinaryOptionGroup = True))
		.optBinariesasGraphics.Enabled = ((bDoEnable = True) And (bEnableBinaryOptionGroup = True))
	End With
End Sub


Sub StoreForm()
Dim bDocIsStored as Boolean
Dim FilterNames(0,2) as String
Dim oMasterKey as Object
Dim oFilters() as Object
Dim sTargetPath as String
Dim sBookmarkName as String
Dim oDBBookmarks as Object		
Dim bLinkExists as Boolean
Dim i as Integer	
Dim sBaseBookmarkName as String
	oMasterKey = GetRegistryKeyContent(&quot;org.openoffice.Office.TypeDetection/&quot;)
	oFilters() = oMasterKey.Filters
	FilterNames(0,0) = oFilters.GetByName(&quot;swriter: StarOffice XML (Writer)&quot;).UIName
	FilterNames(0,1) = &quot;*.sxw&quot;
	FilterNames(0,2) = &quot;&quot;
	sTargetPath = StoreDocument(oDocument, FilterNames(), &quot;Form_&quot; &amp; sDBName &amp; &quot;_&quot; &amp; TableName &amp; &quot;.sxw&quot;, WorkPath)
	If sTargetPath &lt;&gt; &quot;&quot; Then
		sBookmarkName = GetFileNamewithoutExtension(FileNameoutofPath(sTargetPath))
		sBaseBookmarkName = sBookmarkName
		oDBBookmarks = oDataSource.GetBookmarks()
		i = 1
		Do
			bLinkExists = oDBBookmarks.HasbyName(sBookmarkName)
			If bLinkExists Then
				i = i + 1
				sBookmarkName = sBaseBookmarkName &amp; &quot;_&quot; &amp; i
			Else
				oDBBookmarks.insertByName(sBookmarkName, sTargetPath)
			End If
		Loop Until Not bLinkExists
		bDisposeDoc = False
		DlgFormDB.EndExecute()
		ToggleDesignMode(oDocument)
		oDBForm.Reload()
	End If
End Sub</script:module>