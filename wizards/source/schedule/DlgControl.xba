<?xml version="1.0" encoding="UTF-8"?>

<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DlgControl" script:language="StarBasic">Option Explicit

Dim CalBitmap As Object


Sub Main()
	Call CalAutopilotTable()
End Sub


Sub CalSaveTextValues()
	txtYear.Tag = txtYear.Text
	txtMonth.Tag = txtMonth.Text
End Sub


Sub CalRestoreOldValues()
	Beep
	&apos; Start of the Gregorian Calendar
	If int(Val(txtyear.Text)) &lt; 1583 then
		txtYear.Text = &quot;1583&quot;
	Else
		&apos; last year where the easter Routin works
		txtYear.Text = &quot;9956&quot;
	End If
	txtMonth.Text = txtMonth.Tag
End Sub



Sub CalChangeYear()
	Dim ValNewYear&amp;
	ValNewYear&amp; = Val(txtYear.Text)
	If ((1583 &gt; ValNewYear&amp;) Or (9956 &lt; ValNewYear&amp;)) Then
		Call CalRestoreOldValues()
	End If          
End Sub



Sub CalCalcPictureData()
	Dim bFittingX%, bFittingY%, DlgWidth%, DlgHeight%, nXMove%, nYMove%, Width%, Height%
	Dim x#, y#

	Width% = 152
	Height% = 189
	BitmapDir = GetBitmapDir()	

	Set CalBitmap = LoadPicture(BitmapDir &amp; GetPathSeparator() &amp; sBitmapFilename$ &apos;(sCurLangLocale))
	If 1 = GetGUIType() Then
		DlgHeight% = CInt(DlgBuffer.Preview1.Height * GetDialogZoomFactorY(DlgBuffer.Preview1.Height))
		DlgWidth% = CInt(DlgBuffer.Preview1.Width * GetDialogZoomFactorX(DlgBuffer.Preview1.Width))
		nXMove% = TwipsPerPixelX() * 3
		nYMove% = TwipsPerPixelX() * 3
	Else
		DlgHeight% = CInt((DlgBuffer.Preview1.Height - TwipsPerPixelY() * 3) * GetDialogZoomFactorY(DlgBuffer.Preview1.Height))
		DlgWidth% = CInt((DlgBuffer.Preview1.Width - TwipsPerPixelX() * 3) * GetDialogZoomFactorX(DlgBuffer.Preview1.Width))
		nXMove% = 0
		nYMove% = 0
	End If
	
	CalTWIPSPicWidth% = TwipsPerPixelX() * Width%
	CalTWIPSPicHeight% = TwipsPerPixelY() * Height%
	
	&apos;       Beste Möglichkeit: Bild in Orignalgroesse zentrieren
	&apos;       Alternative : Nach schlchechter passenden Faktor skalieren
	If (Not ((CalTWIPSPicWidth% &lt;= DlgWidth%) And (CalTWIPSPicHeight% &lt;= DlgHeight%))) Then
		x# = (CalTWIPSPicWidth% / DlgWidth%)
		y# = (CalTWIPSPicHeight% / DlgHeight%)
		If (x# &gt; y#) Then
			CalTWIPSPicWidth% = CInt(DlgWidth%)
			CalTWIPSPicHeight% = CInt(CalTWIPSPicHeight% / x#)
		Else
			CalTWIPSPicHeight% = CInt(DlgHeight%)
			CalTWIPSPicWidth% = CInt(CalTWIPSPicWidth% / y#)
		End If
	End If

	CalStartX% = CInt((DlgWidth% / 2) - (CalTWIPSPicWidth% / 2)) - nXMove%
	CalStartY% = CInt((DlgHeight% / 2) - (CalTWIPSPicHeight% / 2)) - nYMove%
End Sub



Sub CalPreviewPaint()
	Preview1.Cls()
	Preview1.DrawPicture(CalBitmap, CalStartX%, CalStartY%, CalStartX% + CalTWIPSPicWidth%, CalStartY% + CalTWIPSPicHeight%)
	Preview1.DrawBox(CalStartX%, CalStartY%, CalStartX% + CalTWIPSPicWidth%, CalStartY% + CalTWIPSPicHeight%)
End Sub



Sub CalcmdDeleteSelect()

	Dim Count%, CountMarked%, MsgBoxResult%, AllSelected%
	
	AllSelected = False
	CountMarked% = 0
	For Count% = 0 To lbOwnData.ListCount-1
		If (DlgBuffer.lbOwnData.Selected(Count%) = True) Then CountMarked% = CountMarked% + 1
	Next

	If (CountMarked% &gt; 0) Then
		MsgBoxResult% = MsgBox(cCalSubCmdDeleteSelect_DeleteSelEntry$, 4+32, cCalSubCmdDeleteSelect_DeleteSelEntryTitle$)

		If MsgBoxResult% = 6 Then
			If Not AllSelected% Then
				Call CalDeleteAllSelected()
			Else
				DlgBuffer.lbOwnData.Clear()
			End If
			&apos;       Flag zum Speichern der neuen Daten.
			CalOwnDataChanged% = True

			cmdDelete.Enabled = False
			Call CalClearInputMask()
		End If
	End If
End Sub



Sub CalDeleteAllSelected()

	Dim Count%, LastSelPos%

	While LastSelPos% &lt;&gt; -1
		LastSelPos% = -1
		For Count%=0 To lbOwnData.ListCount()-1
			If DlgBuffer.lbOwnData.Selected(Count%) Then LastSelPos% = Count%
		Next
		If LastSelPos% &lt;&gt; - 1 Then
			DlgBuffer.lbOwnData.RemoveItem(LastSelPos%)
		End If
	Wend
	DlgBuffer.lbOwnData.Refresh()
End Sub



Sub CalSaveOwnEventControls()
	DlgBuffer.txtOwnEventDay.Tag = DlgBuffer.txtOwnEventDay.Text
	DlgBuffer.txtOwnEventMonth.Tag = DlgBuffer.txtOwnEventMonth.Text
	DlgBuffer.txtOwnEventYear.Tag = DlgBuffer.txtOwnEventYear.Text
End Sub



Sub ModIntTextBox (txtYear As Object, ByVal nMax%, ByVal nMin%, ByVal sDefault$, IncFactor as Integer)
	Dim nActVal&amp;
	nActVal&amp; = Val(txtYear.Text)
	If ((0 = nActVal&amp;) Or (nMax% &lt; nActVal&amp;) Or (nMin% &gt; nActVal&amp;)) Then 
		Beep
		txtYear.Text = sDefault$
		Exit Sub
	End If
	If IncFactor = 1 Then
		If nMax% &gt; nActVal&amp; Then
			txtYear.Text = Trim(Str(nActVal&amp; + 1))
		Else
			Beep
			txtYear.Text = nMax%
		End if
	ElseIf IncFactor = -1 Then
		If nMin% &lt; nActVal&amp; Then
			txtYear.Text = Trim(Str(nActVal&amp; - 1))
		Else
			Beep
			txtYear.Text = nMin%
		End if
	End If
End Sub


Sub CalSpinOwnEventDayUp()
	Call ModIntTextBox(txtOwnEventDay, 31, 1, &quot;1&quot;, 1)
End Sub


Sub CalSpinOwnEventDayDown()
	Call ModIntTextBox(txtOwnEventDay, 31, 1, &quot;1&quot;, -1)
End Sub


Sub CalSpinGeneralYearUp()
	Call ModIntTextBox(txtYear, 9956, 1583, Trim(Str(Year(Now()))),1)
End Sub


Sub CalSpinGeneralYearDown()
	Call ModIntTextBox(txtYear, 9956, 1583, Trim(Str(Year(Now()))), -1 )
End Sub


Sub CalSpinOwnEventYearDown()
	Call ModIntTextBox(txtOwnEventYear, 9956, 1583, Trim(Str(Year(Now()))), -1 )
End Sub


Sub CalSpinOwnEventYearUp()
	Call ModIntTextBox(txtOwnEventYear, 9956, 1583, Trim(Str(Year(Now()))) , 1)
End Sub


Sub CalModMonthTextBox(txtMonth As Object,IncFactor as Integer)
	Dim nActVal&amp;
	nActVal&amp; = Val(txtMonth.Text)
	If (1 &lt;= nActVal&amp; And 12 &gt;= nActVal) Then
		txtMonth.Text = cCalShortMonthNames$(nActVal&amp;)
	End If
	nActVal&amp; = CalGetIntOfShortMonthName%(txtMonth.Text)
	If 0 = nActVal&amp; Then
		Beep
		txtMonth.Text = cCalShortMonthNames$(1)
	ElseIf (1 &lt; nActVal&amp;) AND (IncFactor = -1) Then
		txtMonth.Text = cCalShortMonthNames$(nActVal&amp; + IncFactor)
	ElseIf (12 &gt; nActVal&amp;)AND (IncFactor = 1) Then
		txtMonth.Text = cCalShortMonthNames$(nActVal&amp; + IncFactor)
	End If
End Sub


Sub CalSpinGeneralMonthUp()
	CalModMonthTextBox(txtMonth, 1)
End Sub


Sub CalSpinGeneralMonthDown()
	CalModMonthTextBox(txtMonth,-1)
End Sub


Sub CalSpinOwnEventMonthDown()
	Call CalModMonthTextBox(txtOwnEventMonth, -1)
End Sub


Sub CalSpinOwnEventMonthUp()
	Call CalModMonthTextBox(txtOwnEventMonth, 1)
End Sub


Sub CalChkYearEnDisabled()
	&apos;       Falls der RadioButton für einen Jahreskalender angeklickt
	&apos;       worden ist, müssen die Controls für den Monat Disabled
	&apos;       werden, da ihre Werte in einer Jahrestabelle aufgehen.
	lblEventYear.Enabled     = Not lblEventYear.Enabled
	txtownEventYear.Enabled  = Not txtownEventYear.Enabled
	SpinOwnEventYear.Enabled = Not SpinOwnEventYear.Enabled
	If (txtOwnEventYear.Text = &quot;&quot;) And (lblEventYear.Enabled = True) Then
		txtOwnEventYear.Text = Trim$(Str$(Year(Now())))
	End If
End Sub


Sub CalMouseMoved(Button as integer, Shift as integer, X as single, Y as single)

	&apos;       Nimmt Mousemoves ueber dem Bitmap entgegen, und wertet sie je nach
	&apos;       Land aus.

	Select Case sCurLangLocale
		Case  &quot;de&quot; &apos;cLANGUAGE_GERMAN
		&apos;       Ermittelt das Land auf dem sich der MausCursor befindet, und 
		&apos;       aktualisiert die Textbox mit der Bundeslandbezeichnung, falls
		&apos;       ein Mausklick stattfandt.
			Dim Land$
			If (Button = 1) Or (MouseClicked% = False)Then 
				cmbState.ListIndex = CalGetGermanLandAtMousePos(X, Y, Land$)
			End If
	End Select
	
	LastMousePosX = X
	LastMousePosY = Y
End Sub


Sub CalChangeGeneralMonth()

	Dim MonthToCheck$
	Dim ValMonthToCheck%

	MonthToCheck$ = DlgBuffer.txtMonth.Text
	ValMonthToCheck% = Val(MonthToCheck$)

	If (ValMonthToCheck% &gt;= 1) And (ValMonthToCheck% &lt;=12) Then
		DlgBuffer.txtMonth.Text = cCalShortMonthNames$(ValMonthToCheck%)
		Exit Sub
	End If

	If CalGetIntOfShortMonthName%(Trim(Left(MonthToCheck$, 3))) = 0 Then
		Beep
		DlgBuffer.txtMonth.Text = DlgBuffer.txtMonth.Tag
	Else
		DlgBuffer.txtMonth.Text = Trim(Left(MonthToCheck, 3))
	End If

End Sub



Sub CalChkForChangeInsertAccept
	&apos;       Aktualisiert die Caption des Insert/Accept Buttons
	If (DataSelectedFromList=True) And (ButtonCaptionIsInsert) Then
		DlgBuffer.cmdInsert.Caption = cSubChkForChangeInsertAccept_Accpet$
	End If
End Sub



Sub CalClearInputMask()
	&apos;       Löscht die Werte der Eingabe Controls für ein 
	&apos;       neues Ereignis.
	chkEventOnce.Value = False
	lblEventYear.Enabled = False
	txtownEventYear.Enabled = False
	SpinOwnEventYear.Enabled = False
	txtOwnEventYear.Text = &quot;&quot;
	txtEvent.Text = &quot;&quot;
	txtOwnEventDay.Text = &quot;&quot;
	txtOwnEventMonth.Text = &quot;&quot;
	
	txtEvent.SetFocus()
End Sub



Function CalCountSelected%(ByVal listBox as Object, PosSelect%)
	&apos;       Zählt die selekierten Einträge im Control listBox.
	&apos;       PosSelect liefert den Index des selektierten Eintrags 
	&apos;       zurück. Dieser Wert ist natürlich nur zu gebrachen, 
	&apos;       wenn nur ein Eintrag selektiert ist.
	Dim Count%, Result%

	Result% = 0
	For Count% = 0 To listBox.ListCount-1
		If ListBox.Selected(Count%) Then
			Result% = Result% + 1
			PosSelect% = Count%
		End If
	Next
	CalCountSelected% = Result%     
End Function



Sub CalmdSwitchOwnDataOrGeneral()
	
	&apos;Ändert den Titel der Dialogbox beim Seitenwechsel und die 
	&apos;Beschriftungen der Knöpfe
	If DlgBuffer.CurrentStep = 1 Then
		DlgBuffer.CurrentStep = 2
		DlgBuffer.DlgCmdOwnData.Caption = cCalSubcmdSwitchOwnDataOrGeneral_Back$
	Else
		DlgBuffer.CurrentStep = 1
		DlgBuffer.DlgCmdOwnData.Caption = cCalSubcmdSwitchOwnDataOrGeneral_OwnData$
	End If
End Sub


Sub LoadDialog()
	DlgBuffer.load
End Sub

Sub ShowDialog()
	DlgBuffer.Show
End Sub
</script:module>